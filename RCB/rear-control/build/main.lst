ARM GAS  /tmp/ccLxF6z8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB135:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccLxF6z8.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** TIM_HandleTypeDef htim13;
  45:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** // CAN transmit 
  50:Core/Src/main.c **** CAN_TxHeaderTypeDef TxHeader;
  51:Core/Src/main.c **** uint8_t TxData[8];
  52:Core/Src/main.c **** uint32_t TxMailbox;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** // CAN recive 
  55:Core/Src/main.c **** CAN_RxHeaderTypeDef RxHeader;
  56:Core/Src/main.c **** CAN_FilterTypeDef filter0;
  57:Core/Src/main.c **** uint8_t RxData[8];
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** // signal pins (0 = off | 1 = on)
  60:Core/Src/main.c **** uint8_t brakeLight = 0;
  61:Core/Src/main.c **** uint8_t fanSig = 0;
  62:Core/Src/main.c **** uint8_t imdFault = 1;
  63:Core/Src/main.c **** uint8_t bmsFault = 1;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PV */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  68:Core/Src/main.c **** void SystemClock_Config(void);
  69:Core/Src/main.c **** static void MX_GPIO_Init(void);
  70:Core/Src/main.c **** static void MX_CAN1_Init(void);
  71:Core/Src/main.c **** static void MX_TIM14_Init(void);
  72:Core/Src/main.c **** static void MX_TIM13_Init(void);
  73:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END PFP */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  78:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* USER CODE END 0 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /**
  84:Core/Src/main.c ****   * @brief  The application entry point.
  85:Core/Src/main.c ****   * @retval int
  86:Core/Src/main.c ****   */
  87:Core/Src/main.c **** int main(void)
  88:Core/Src/main.c **** {
ARM GAS  /tmp/ccLxF6z8.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  90:Core/Src/main.c ****   // setup transmit header
  91:Core/Src/main.c ****   TxHeader.StdId = 0x082;
  92:Core/Src/main.c ****   TxHeader.ExtId = 0x0;
  93:Core/Src/main.c ****   TxHeader.IDE = CAN_ID_STD;
  94:Core/Src/main.c ****   TxHeader.RTR = CAN_RTR_DATA;
  95:Core/Src/main.c ****   TxHeader.DLC = 8;
  96:Core/Src/main.c ****   TxHeader.TransmitGlobalTime = DISABLE;
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END 1 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 103:Core/Src/main.c ****   HAL_Init();
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE END Init */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Configure the system clock */
 110:Core/Src/main.c ****   SystemClock_Config();
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END SysInit */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Initialize all configured peripherals */
 117:Core/Src/main.c ****   MX_GPIO_Init();
 118:Core/Src/main.c ****   MX_CAN1_Init();
 119:Core/Src/main.c ****   MX_TIM14_Init();
 120:Core/Src/main.c ****   MX_TIM13_Init();
 121:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   // start interrupts
 124:Core/Src/main.c ****   HAL_CAN_Start(&hcan1);
 125:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 126:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim14);
 127:Core/Src/main.c ****   // HAL_TIM_Base_Start_IT(&htim13);
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END 2 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* Infinite loop */
 132:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 133:Core/Src/main.c ****   while (1)
 134:Core/Src/main.c ****   {
 135:Core/Src/main.c ****     /* USER CODE END WHILE */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 138:Core/Src/main.c ****   }
 139:Core/Src/main.c ****   /* USER CODE END 3 */
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /**
 143:Core/Src/main.c ****   * @brief System Clock Configuration
 144:Core/Src/main.c ****   * @retval None
 145:Core/Src/main.c ****   */
ARM GAS  /tmp/ccLxF6z8.s 			page 4


 146:Core/Src/main.c **** void SystemClock_Config(void)
 147:Core/Src/main.c **** {
 148:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 149:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 154:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 155:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 156:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 168:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 173:Core/Src/main.c ****   */
 174:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 175:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 179:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c ****     Error_Handler();
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c **** }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** /**
 188:Core/Src/main.c ****   * @brief CAN1 Initialization Function
 189:Core/Src/main.c ****   * @param None
 190:Core/Src/main.c ****   * @retval None
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c **** static void MX_CAN1_Init(void)
 193:Core/Src/main.c **** {
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 202:Core/Src/main.c ****   hcan1.Instance = CAN1;
ARM GAS  /tmp/ccLxF6z8.s 			page 5


 203:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 204:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 205:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 206:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 207:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 208:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 209:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 210:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 211:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 212:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 213:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 214:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 215:Core/Src/main.c ****   {
 216:Core/Src/main.c ****     Error_Handler();
 217:Core/Src/main.c ****   }
 218:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   filter0.FilterIdHigh = 0x093 << 5;
 221:Core/Src/main.c ****   filter0.FilterIdLow = 0x000;
 222:Core/Src/main.c ****   filter0.FilterMaskIdHigh = 0x093 << 5;
 223:Core/Src/main.c ****   filter0.FilterMaskIdLow = 0x000;
 224:Core/Src/main.c ****   filter0.FilterFIFOAssignment =  CAN_RX_FIFO0;
 225:Core/Src/main.c ****   filter0.FilterBank = 1;
 226:Core/Src/main.c ****   filter0.FilterMode = CAN_FILTERMODE_IDMASK;
 227:Core/Src/main.c ****   filter0.FilterScale = CAN_FILTERSCALE_32BIT;
 228:Core/Src/main.c ****   filter0.FilterActivation = ENABLE;
 229:Core/Src/main.c ****   filter0.SlaveStartFilterBank = 0;
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan1, &filter0);
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c **** }
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** /**
 238:Core/Src/main.c ****   * @brief TIM13 Initialization Function
 239:Core/Src/main.c ****   * @param None
 240:Core/Src/main.c ****   * @retval None
 241:Core/Src/main.c ****   */
 242:Core/Src/main.c **** static void MX_TIM13_Init(void)
 243:Core/Src/main.c **** {
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 0 */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /* USER CODE END TIM13_Init 0 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 1 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE END TIM13_Init 1 */
 252:Core/Src/main.c ****   htim13.Instance = TIM13;
 253:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 254:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 255:Core/Src/main.c ****   htim13.Init.Period = 100-1;
 256:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 257:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 258:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 259:Core/Src/main.c ****   {
ARM GAS  /tmp/ccLxF6z8.s 			page 6


 260:Core/Src/main.c ****     Error_Handler();
 261:Core/Src/main.c ****   }
 262:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 2 */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /* USER CODE END TIM13_Init 2 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** }
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** /**
 269:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 270:Core/Src/main.c ****   * @param None
 271:Core/Src/main.c ****   * @retval None
 272:Core/Src/main.c ****   */
 273:Core/Src/main.c **** static void MX_TIM14_Init(void)
 274:Core/Src/main.c **** {
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 283:Core/Src/main.c ****   htim14.Instance = TIM14;
 284:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 285:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 286:Core/Src/main.c ****   htim14.Init.Period = 100-1;
 287:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 288:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 289:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 290:Core/Src/main.c ****   {
 291:Core/Src/main.c ****     Error_Handler();
 292:Core/Src/main.c ****   }
 293:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** }
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** /**
 300:Core/Src/main.c ****   * @brief GPIO Initialization Function
 301:Core/Src/main.c ****   * @param None
 302:Core/Src/main.c ****   * @retval None
 303:Core/Src/main.c ****   */
 304:Core/Src/main.c **** static void MX_GPIO_Init(void)
 305:Core/Src/main.c **** {
  28              		.loc 1 305 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
ARM GAS  /tmp/ccLxF6z8.s 			page 7


  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 306:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 306 3 view .LVU1
  42              		.loc 1 306 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 309:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 309 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 309 3 view .LVU4
  52 0010 0094     		str	r4, [sp]
  53              		.loc 1 309 3 view .LVU5
  54 0012 1C4B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 309 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0092     		str	r2, [sp]
  62              		.loc 1 309 3 view .LVU7
  63 0024 009A     		ldr	r2, [sp]
  64              	.LBE4:
  65              		.loc 1 309 3 view .LVU8
 310:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 310 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 310 3 view .LVU10
  69 0026 0194     		str	r4, [sp, #4]
  70              		.loc 1 310 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 310 3 view .LVU12
  75 0030 1A6B     		ldr	r2, [r3, #48]
  76 0032 02F00102 		and	r2, r2, #1
  77 0036 0192     		str	r2, [sp, #4]
  78              		.loc 1 310 3 view .LVU13
  79 0038 019A     		ldr	r2, [sp, #4]
  80              	.LBE5:
  81              		.loc 1 310 3 view .LVU14
 311:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  82              		.loc 1 311 3 view .LVU15
  83              	.LBB6:
  84              		.loc 1 311 3 view .LVU16
  85 003a 0294     		str	r4, [sp, #8]
  86              		.loc 1 311 3 view .LVU17
  87 003c 1A6B     		ldr	r2, [r3, #48]
  88 003e 42F00202 		orr	r2, r2, #2
  89 0042 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccLxF6z8.s 			page 8


  90              		.loc 1 311 3 view .LVU18
  91 0044 1B6B     		ldr	r3, [r3, #48]
  92 0046 03F00203 		and	r3, r3, #2
  93 004a 0293     		str	r3, [sp, #8]
  94              		.loc 1 311 3 view .LVU19
  95 004c 029B     		ldr	r3, [sp, #8]
  96              	.LBE6:
  97              		.loc 1 311 3 view .LVU20
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 314:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2, GPIO_PIN_RESET);
  98              		.loc 1 314 3 view .LVU21
  99 004e 0E4D     		ldr	r5, .L3+4
 100 0050 2246     		mov	r2, r4
 101 0052 0721     		movs	r1, #7
 102 0054 2846     		mov	r0, r5
 103 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 104              	.LVL0:
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /*Configure GPIO pins : PA6 PA7 */
 317:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 105              		.loc 1 317 3 view .LVU22
 106              		.loc 1 317 23 is_stmt 0 view .LVU23
 107 005a C023     		movs	r3, #192
 108 005c 0393     		str	r3, [sp, #12]
 318:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 109              		.loc 1 318 3 is_stmt 1 view .LVU24
 110              		.loc 1 318 24 is_stmt 0 view .LVU25
 111 005e 0494     		str	r4, [sp, #16]
 319:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 319 3 is_stmt 1 view .LVU26
 113              		.loc 1 319 24 is_stmt 0 view .LVU27
 114 0060 0594     		str	r4, [sp, #20]
 320:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 115              		.loc 1 320 3 is_stmt 1 view .LVU28
 116 0062 03A9     		add	r1, sp, #12
 117 0064 0948     		ldr	r0, .L3+8
 118 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 119              	.LVL1:
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 */
 323:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2;
 120              		.loc 1 323 3 view .LVU29
 121              		.loc 1 323 23 is_stmt 0 view .LVU30
 122 006a 0723     		movs	r3, #7
 123 006c 0393     		str	r3, [sp, #12]
 324:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 124              		.loc 1 324 3 is_stmt 1 view .LVU31
 125              		.loc 1 324 24 is_stmt 0 view .LVU32
 126 006e 0123     		movs	r3, #1
 127 0070 0493     		str	r3, [sp, #16]
 325:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 128              		.loc 1 325 3 is_stmt 1 view .LVU33
 129              		.loc 1 325 24 is_stmt 0 view .LVU34
 130 0072 0594     		str	r4, [sp, #20]
 326:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 131              		.loc 1 326 3 is_stmt 1 view .LVU35
ARM GAS  /tmp/ccLxF6z8.s 			page 9


 132              		.loc 1 326 25 is_stmt 0 view .LVU36
 133 0074 0694     		str	r4, [sp, #24]
 327:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 134              		.loc 1 327 3 is_stmt 1 view .LVU37
 135 0076 03A9     		add	r1, sp, #12
 136 0078 2846     		mov	r0, r5
 137 007a FFF7FEFF 		bl	HAL_GPIO_Init
 138              	.LVL2:
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** }
 139              		.loc 1 329 1 is_stmt 0 view .LVU38
 140 007e 09B0     		add	sp, sp, #36
 141              	.LCFI2:
 142              		.cfi_def_cfa_offset 12
 143              		@ sp needed
 144 0080 30BD     		pop	{r4, r5, pc}
 145              	.L4:
 146 0082 00BF     		.align	2
 147              	.L3:
 148 0084 00380240 		.word	1073887232
 149 0088 00040240 		.word	1073873920
 150 008c 00000240 		.word	1073872896
 151              		.cfi_endproc
 152              	.LFE135:
 154              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 155              		.align	1
 156              		.global	HAL_TIM_PeriodElapsedCallback
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv4-sp-d16
 162              	HAL_TIM_PeriodElapsedCallback:
 163              	.LVL3:
 164              	.LFB137:
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 332:Core/Src/main.c **** 
 333:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
 334:Core/Src/main.c **** {
 335:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK){
 336:Core/Src/main.c ****     Error_Handler();
 337:Core/Src/main.c ****   }
 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   // read CAN message from 
 340:Core/Src/main.c ****   if (RxHeader.StdId == 0x093)
 341:Core/Src/main.c ****   {
 342:Core/Src/main.c ****       brakeLight = RxData[2];
 343:Core/Src/main.c ****       // fanSig = RxData[4];
 344:Core/Src/main.c ****   }
 345:Core/Src/main.c **** }
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 348:Core/Src/main.c **** {  
 165              		.loc 1 348 1 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccLxF6z8.s 			page 10


 169              		.loc 1 348 1 is_stmt 0 view .LVU40
 170 0000 38B5     		push	{r3, r4, r5, lr}
 171              	.LCFI3:
 172              		.cfi_def_cfa_offset 16
 173              		.cfi_offset 3, -16
 174              		.cfi_offset 4, -12
 175              		.cfi_offset 5, -8
 176              		.cfi_offset 14, -4
 349:Core/Src/main.c ****   // on __Hz interval 
 350:Core/Src/main.c ****   if (htim == &htim13)
 177              		.loc 1 350 3 is_stmt 1 view .LVU41
 351:Core/Src/main.c ****   {
 352:Core/Src/main.c ****     // imdFault = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6);
 353:Core/Src/main.c ****     // bmsFault = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7);
 354:Core/Src/main.c ****   }
 178              		.loc 1 354 3 view .LVU42
 355:Core/Src/main.c ****   
 356:Core/Src/main.c ****   // on __Hz interval 
 357:Core/Src/main.c ****   if (htim == &htim14)
 179              		.loc 1 357 3 view .LVU43
 180              		.loc 1 357 6 is_stmt 0 view .LVU44
 181 0002 194B     		ldr	r3, .L9
 182 0004 8342     		cmp	r3, r0
 183 0006 00D0     		beq	.L8
 184              	.LVL4:
 185              	.L5:
 358:Core/Src/main.c ****   {
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****     imdFault = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_6);
 361:Core/Src/main.c ****     bmsFault = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7);
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****     // build CAN message for 
 364:Core/Src/main.c ****     TxData[0] = !imdFault;            // inverted because the fault clears high, LEDs then read low
 365:Core/Src/main.c ****     TxData[1] = !bmsFault;            // inverted because the fault clears high, LEDs then read low
 366:Core/Src/main.c ****     TxData[2] = 0x02;
 367:Core/Src/main.c ****     TxData[3] = 0x03;
 368:Core/Src/main.c ****     TxData[4] = 0x04;
 369:Core/Src/main.c ****     TxData[5] = 0x05;
 370:Core/Src/main.c ****     TxData[6] = 0x06;
 371:Core/Src/main.c ****     TxData[7] = 0x07;
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****     // send message
 374:Core/Src/main.c ****     HAL_CAN_AddTxMessage(&hcan1, &TxHeader, TxData, &TxMailbox);
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****     // update fan and brake 
 377:Core/Src/main.c ****     // HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, fanSig);
 378:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, brakeLight);
 379:Core/Src/main.c ****   }
 380:Core/Src/main.c **** }
 186              		.loc 1 380 1 view .LVU45
 187 0008 38BD     		pop	{r3, r4, r5, pc}
 188              	.LVL5:
 189              	.L8:
 360:Core/Src/main.c ****     bmsFault = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7);
 190              		.loc 1 360 5 is_stmt 1 view .LVU46
 360:Core/Src/main.c ****     bmsFault = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7);
 191              		.loc 1 360 16 is_stmt 0 view .LVU47
ARM GAS  /tmp/ccLxF6z8.s 			page 11


 192 000a 184D     		ldr	r5, .L9+4
 193 000c 4021     		movs	r1, #64
 194 000e 2846     		mov	r0, r5
 195              	.LVL6:
 360:Core/Src/main.c ****     bmsFault = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7);
 196              		.loc 1 360 16 view .LVU48
 197 0010 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 198              	.LVL7:
 360:Core/Src/main.c ****     bmsFault = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7);
 199              		.loc 1 360 14 view .LVU49
 200 0014 164C     		ldr	r4, .L9+8
 201 0016 2070     		strb	r0, [r4]
 361:Core/Src/main.c **** 
 202              		.loc 1 361 5 is_stmt 1 view .LVU50
 361:Core/Src/main.c **** 
 203              		.loc 1 361 16 is_stmt 0 view .LVU51
 204 0018 8021     		movs	r1, #128
 205 001a 2846     		mov	r0, r5
 206 001c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 207              	.LVL8:
 361:Core/Src/main.c **** 
 208              		.loc 1 361 14 view .LVU52
 209 0020 144B     		ldr	r3, .L9+12
 210 0022 1870     		strb	r0, [r3]
 364:Core/Src/main.c ****     TxData[1] = !bmsFault;            // inverted because the fault clears high, LEDs then read low
 211              		.loc 1 364 5 is_stmt 1 view .LVU53
 364:Core/Src/main.c ****     TxData[1] = !bmsFault;            // inverted because the fault clears high, LEDs then read low
 212              		.loc 1 364 17 is_stmt 0 view .LVU54
 213 0024 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 214 0026 B3FA83F3 		clz	r3, r3
 215 002a 5B09     		lsrs	r3, r3, #5
 364:Core/Src/main.c ****     TxData[1] = !bmsFault;            // inverted because the fault clears high, LEDs then read low
 216              		.loc 1 364 15 view .LVU55
 217 002c 124A     		ldr	r2, .L9+16
 218 002e 1370     		strb	r3, [r2]
 365:Core/Src/main.c ****     TxData[2] = 0x02;
 219              		.loc 1 365 5 is_stmt 1 view .LVU56
 365:Core/Src/main.c ****     TxData[2] = 0x02;
 220              		.loc 1 365 17 is_stmt 0 view .LVU57
 221 0030 B0FA80F0 		clz	r0, r0
 222 0034 4009     		lsrs	r0, r0, #5
 365:Core/Src/main.c ****     TxData[2] = 0x02;
 223              		.loc 1 365 15 view .LVU58
 224 0036 5070     		strb	r0, [r2, #1]
 366:Core/Src/main.c ****     TxData[3] = 0x03;
 225              		.loc 1 366 5 is_stmt 1 view .LVU59
 366:Core/Src/main.c ****     TxData[3] = 0x03;
 226              		.loc 1 366 15 is_stmt 0 view .LVU60
 227 0038 0223     		movs	r3, #2
 228 003a 9370     		strb	r3, [r2, #2]
 367:Core/Src/main.c ****     TxData[4] = 0x04;
 229              		.loc 1 367 5 is_stmt 1 view .LVU61
 367:Core/Src/main.c ****     TxData[4] = 0x04;
 230              		.loc 1 367 15 is_stmt 0 view .LVU62
 231 003c 0323     		movs	r3, #3
 232 003e D370     		strb	r3, [r2, #3]
 368:Core/Src/main.c ****     TxData[5] = 0x05;
ARM GAS  /tmp/ccLxF6z8.s 			page 12


 233              		.loc 1 368 5 is_stmt 1 view .LVU63
 368:Core/Src/main.c ****     TxData[5] = 0x05;
 234              		.loc 1 368 15 is_stmt 0 view .LVU64
 235 0040 0424     		movs	r4, #4
 236 0042 1471     		strb	r4, [r2, #4]
 369:Core/Src/main.c ****     TxData[6] = 0x06;
 237              		.loc 1 369 5 is_stmt 1 view .LVU65
 369:Core/Src/main.c ****     TxData[6] = 0x06;
 238              		.loc 1 369 15 is_stmt 0 view .LVU66
 239 0044 0523     		movs	r3, #5
 240 0046 5371     		strb	r3, [r2, #5]
 370:Core/Src/main.c ****     TxData[7] = 0x07;
 241              		.loc 1 370 5 is_stmt 1 view .LVU67
 370:Core/Src/main.c ****     TxData[7] = 0x07;
 242              		.loc 1 370 15 is_stmt 0 view .LVU68
 243 0048 0623     		movs	r3, #6
 244 004a 9371     		strb	r3, [r2, #6]
 371:Core/Src/main.c **** 
 245              		.loc 1 371 5 is_stmt 1 view .LVU69
 371:Core/Src/main.c **** 
 246              		.loc 1 371 15 is_stmt 0 view .LVU70
 247 004c 0723     		movs	r3, #7
 248 004e D371     		strb	r3, [r2, #7]
 374:Core/Src/main.c **** 
 249              		.loc 1 374 5 is_stmt 1 view .LVU71
 250 0050 0A4B     		ldr	r3, .L9+20
 251 0052 0B49     		ldr	r1, .L9+24
 252 0054 0B48     		ldr	r0, .L9+28
 253 0056 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 254              	.LVL9:
 378:Core/Src/main.c ****   }
 255              		.loc 1 378 5 view .LVU72
 256 005a 0B4B     		ldr	r3, .L9+32
 257 005c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 258 005e 2146     		mov	r1, r4
 259 0060 0A48     		ldr	r0, .L9+36
 260 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 261              	.LVL10:
 262              		.loc 1 380 1 is_stmt 0 view .LVU73
 263 0066 CFE7     		b	.L5
 264              	.L10:
 265              		.align	2
 266              	.L9:
 267 0068 00000000 		.word	htim14
 268 006c 00000240 		.word	1073872896
 269 0070 00000000 		.word	.LANCHOR0
 270 0074 00000000 		.word	.LANCHOR1
 271 0078 00000000 		.word	TxData
 272 007c 00000000 		.word	TxMailbox
 273 0080 00000000 		.word	TxHeader
 274 0084 00000000 		.word	hcan1
 275 0088 00000000 		.word	.LANCHOR2
 276 008c 00040240 		.word	1073873920
 277              		.cfi_endproc
 278              	.LFE137:
 280              		.section	.text.Error_Handler,"ax",%progbits
 281              		.align	1
ARM GAS  /tmp/ccLxF6z8.s 			page 13


 282              		.global	Error_Handler
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 286              		.fpu fpv4-sp-d16
 288              	Error_Handler:
 289              	.LFB138:
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** /* USER CODE END 4 */
 383:Core/Src/main.c **** 
 384:Core/Src/main.c **** /**
 385:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 386:Core/Src/main.c ****   * @retval None
 387:Core/Src/main.c ****   */
 388:Core/Src/main.c **** void Error_Handler(void)
 389:Core/Src/main.c **** {
 290              		.loc 1 389 1 is_stmt 1 view -0
 291              		.cfi_startproc
 292              		@ Volatile: function does not return.
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 390:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 391:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 392:Core/Src/main.c ****   __disable_irq();
 296              		.loc 1 392 3 view .LVU75
 297              	.LBB7:
 298              	.LBI7:
 299              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  /tmp/ccLxF6z8.s 			page 14


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccLxF6z8.s 			page 15


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 300              		.loc 2 140 27 view .LVU76
 301              	.LBB8:
ARM GAS  /tmp/ccLxF6z8.s 			page 16


 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 302              		.loc 2 142 3 view .LVU77
 303              		.syntax unified
 304              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 305 0000 72B6     		cpsid i
 306              	@ 0 "" 2
 307              		.thumb
 308              		.syntax unified
 309              	.L12:
 310              	.LBE8:
 311              	.LBE7:
 393:Core/Src/main.c ****   while (1)
 312              		.loc 1 393 3 discriminator 1 view .LVU78
 394:Core/Src/main.c ****   {
 395:Core/Src/main.c ****   }
 313              		.loc 1 395 3 discriminator 1 view .LVU79
 393:Core/Src/main.c ****   while (1)
 314              		.loc 1 393 9 discriminator 1 view .LVU80
 315 0002 FEE7     		b	.L12
 316              		.cfi_endproc
 317              	.LFE138:
 319              		.section	.text.MX_CAN1_Init,"ax",%progbits
 320              		.align	1
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu fpv4-sp-d16
 326              	MX_CAN1_Init:
 327              	.LFB132:
 193:Core/Src/main.c **** 
 328              		.loc 1 193 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 08B5     		push	{r3, lr}
 333              	.LCFI4:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 3, -8
 336              		.cfi_offset 14, -4
 202:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 337              		.loc 1 202 3 view .LVU82
 202:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 338              		.loc 1 202 18 is_stmt 0 view .LVU83
 339 0002 1548     		ldr	r0, .L17
 340 0004 154B     		ldr	r3, .L17+4
 341 0006 0360     		str	r3, [r0]
 203:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 342              		.loc 1 203 3 is_stmt 1 view .LVU84
 203:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 343              		.loc 1 203 24 is_stmt 0 view .LVU85
 344 0008 1223     		movs	r3, #18
 345 000a 4360     		str	r3, [r0, #4]
 204:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 346              		.loc 1 204 3 is_stmt 1 view .LVU86
 204:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 347              		.loc 1 204 19 is_stmt 0 view .LVU87
ARM GAS  /tmp/ccLxF6z8.s 			page 17


 348 000c 0023     		movs	r3, #0
 349 000e 8360     		str	r3, [r0, #8]
 205:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 350              		.loc 1 205 3 is_stmt 1 view .LVU88
 205:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 351              		.loc 1 205 28 is_stmt 0 view .LVU89
 352 0010 C360     		str	r3, [r0, #12]
 206:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 353              		.loc 1 206 3 is_stmt 1 view .LVU90
 206:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 354              		.loc 1 206 23 is_stmt 0 view .LVU91
 355 0012 4FF40032 		mov	r2, #131072
 356 0016 0261     		str	r2, [r0, #16]
 207:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 357              		.loc 1 207 3 is_stmt 1 view .LVU92
 207:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 358              		.loc 1 207 23 is_stmt 0 view .LVU93
 359 0018 4361     		str	r3, [r0, #20]
 208:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 360              		.loc 1 208 3 is_stmt 1 view .LVU94
 208:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 361              		.loc 1 208 32 is_stmt 0 view .LVU95
 362 001a 0376     		strb	r3, [r0, #24]
 209:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 363              		.loc 1 209 3 is_stmt 1 view .LVU96
 209:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 364              		.loc 1 209 25 is_stmt 0 view .LVU97
 365 001c 0122     		movs	r2, #1
 366 001e 4276     		strb	r2, [r0, #25]
 210:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 367              		.loc 1 210 3 is_stmt 1 view .LVU98
 210:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 368              		.loc 1 210 25 is_stmt 0 view .LVU99
 369 0020 8376     		strb	r3, [r0, #26]
 211:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 370              		.loc 1 211 3 is_stmt 1 view .LVU100
 211:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 371              		.loc 1 211 33 is_stmt 0 view .LVU101
 372 0022 C376     		strb	r3, [r0, #27]
 212:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 373              		.loc 1 212 3 is_stmt 1 view .LVU102
 212:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 374              		.loc 1 212 32 is_stmt 0 view .LVU103
 375 0024 0377     		strb	r3, [r0, #28]
 213:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 376              		.loc 1 213 3 is_stmt 1 view .LVU104
 213:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 377              		.loc 1 213 35 is_stmt 0 view .LVU105
 378 0026 4377     		strb	r3, [r0, #29]
 214:Core/Src/main.c ****   {
 379              		.loc 1 214 3 is_stmt 1 view .LVU106
 214:Core/Src/main.c ****   {
 380              		.loc 1 214 7 is_stmt 0 view .LVU107
 381 0028 FFF7FEFF 		bl	HAL_CAN_Init
 382              	.LVL11:
 214:Core/Src/main.c ****   {
 383              		.loc 1 214 6 view .LVU108
ARM GAS  /tmp/ccLxF6z8.s 			page 18


 384 002c 90B9     		cbnz	r0, .L16
 220:Core/Src/main.c ****   filter0.FilterIdLow = 0x000;
 385              		.loc 1 220 3 is_stmt 1 view .LVU109
 220:Core/Src/main.c ****   filter0.FilterIdLow = 0x000;
 386              		.loc 1 220 24 is_stmt 0 view .LVU110
 387 002e 0C49     		ldr	r1, .L17+8
 388 0030 4FF49352 		mov	r2, #4704
 389 0034 0A60     		str	r2, [r1]
 221:Core/Src/main.c ****   filter0.FilterMaskIdHigh = 0x093 << 5;
 390              		.loc 1 221 3 is_stmt 1 view .LVU111
 221:Core/Src/main.c ****   filter0.FilterMaskIdHigh = 0x093 << 5;
 391              		.loc 1 221 23 is_stmt 0 view .LVU112
 392 0036 0023     		movs	r3, #0
 393 0038 4B60     		str	r3, [r1, #4]
 222:Core/Src/main.c ****   filter0.FilterMaskIdLow = 0x000;
 394              		.loc 1 222 3 is_stmt 1 view .LVU113
 222:Core/Src/main.c ****   filter0.FilterMaskIdLow = 0x000;
 395              		.loc 1 222 28 is_stmt 0 view .LVU114
 396 003a 8A60     		str	r2, [r1, #8]
 223:Core/Src/main.c ****   filter0.FilterFIFOAssignment =  CAN_RX_FIFO0;
 397              		.loc 1 223 3 is_stmt 1 view .LVU115
 223:Core/Src/main.c ****   filter0.FilterFIFOAssignment =  CAN_RX_FIFO0;
 398              		.loc 1 223 27 is_stmt 0 view .LVU116
 399 003c CB60     		str	r3, [r1, #12]
 224:Core/Src/main.c ****   filter0.FilterBank = 1;
 400              		.loc 1 224 3 is_stmt 1 view .LVU117
 224:Core/Src/main.c ****   filter0.FilterBank = 1;
 401              		.loc 1 224 32 is_stmt 0 view .LVU118
 402 003e 0B61     		str	r3, [r1, #16]
 225:Core/Src/main.c ****   filter0.FilterMode = CAN_FILTERMODE_IDMASK;
 403              		.loc 1 225 3 is_stmt 1 view .LVU119
 225:Core/Src/main.c ****   filter0.FilterMode = CAN_FILTERMODE_IDMASK;
 404              		.loc 1 225 22 is_stmt 0 view .LVU120
 405 0040 0122     		movs	r2, #1
 406 0042 4A61     		str	r2, [r1, #20]
 226:Core/Src/main.c ****   filter0.FilterScale = CAN_FILTERSCALE_32BIT;
 407              		.loc 1 226 3 is_stmt 1 view .LVU121
 226:Core/Src/main.c ****   filter0.FilterScale = CAN_FILTERSCALE_32BIT;
 408              		.loc 1 226 22 is_stmt 0 view .LVU122
 409 0044 8B61     		str	r3, [r1, #24]
 227:Core/Src/main.c ****   filter0.FilterActivation = ENABLE;
 410              		.loc 1 227 3 is_stmt 1 view .LVU123
 227:Core/Src/main.c ****   filter0.FilterActivation = ENABLE;
 411              		.loc 1 227 23 is_stmt 0 view .LVU124
 412 0046 CA61     		str	r2, [r1, #28]
 228:Core/Src/main.c ****   filter0.SlaveStartFilterBank = 0;
 413              		.loc 1 228 3 is_stmt 1 view .LVU125
 228:Core/Src/main.c ****   filter0.SlaveStartFilterBank = 0;
 414              		.loc 1 228 28 is_stmt 0 view .LVU126
 415 0048 0A62     		str	r2, [r1, #32]
 229:Core/Src/main.c **** 
 416              		.loc 1 229 3 is_stmt 1 view .LVU127
 229:Core/Src/main.c **** 
 417              		.loc 1 229 32 is_stmt 0 view .LVU128
 418 004a 4B62     		str	r3, [r1, #36]
 231:Core/Src/main.c **** 
 419              		.loc 1 231 3 is_stmt 1 view .LVU129
ARM GAS  /tmp/ccLxF6z8.s 			page 19


 420 004c 0248     		ldr	r0, .L17
 421 004e FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 422              	.LVL12:
 235:Core/Src/main.c **** 
 423              		.loc 1 235 1 is_stmt 0 view .LVU130
 424 0052 08BD     		pop	{r3, pc}
 425              	.L16:
 216:Core/Src/main.c ****   }
 426              		.loc 1 216 5 is_stmt 1 view .LVU131
 427 0054 FFF7FEFF 		bl	Error_Handler
 428              	.LVL13:
 429              	.L18:
 430              		.align	2
 431              	.L17:
 432 0058 00000000 		.word	hcan1
 433 005c 00640040 		.word	1073767424
 434 0060 00000000 		.word	filter0
 435              		.cfi_endproc
 436              	.LFE132:
 438              		.section	.text.MX_TIM14_Init,"ax",%progbits
 439              		.align	1
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv4-sp-d16
 445              	MX_TIM14_Init:
 446              	.LFB134:
 274:Core/Src/main.c **** 
 447              		.loc 1 274 1 view -0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451 0000 08B5     		push	{r3, lr}
 452              	.LCFI5:
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 3, -8
 455              		.cfi_offset 14, -4
 283:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 456              		.loc 1 283 3 view .LVU133
 283:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 457              		.loc 1 283 19 is_stmt 0 view .LVU134
 458 0002 0948     		ldr	r0, .L23
 459 0004 094B     		ldr	r3, .L23+4
 460 0006 0360     		str	r3, [r0]
 284:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 461              		.loc 1 284 3 is_stmt 1 view .LVU135
 284:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 462              		.loc 1 284 25 is_stmt 0 view .LVU136
 463 0008 42F22733 		movw	r3, #8999
 464 000c 4360     		str	r3, [r0, #4]
 285:Core/Src/main.c ****   htim14.Init.Period = 100-1;
 465              		.loc 1 285 3 is_stmt 1 view .LVU137
 285:Core/Src/main.c ****   htim14.Init.Period = 100-1;
 466              		.loc 1 285 27 is_stmt 0 view .LVU138
 467 000e 0023     		movs	r3, #0
 468 0010 8360     		str	r3, [r0, #8]
 286:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/ccLxF6z8.s 			page 20


 469              		.loc 1 286 3 is_stmt 1 view .LVU139
 286:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 470              		.loc 1 286 22 is_stmt 0 view .LVU140
 471 0012 6322     		movs	r2, #99
 472 0014 C260     		str	r2, [r0, #12]
 287:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 473              		.loc 1 287 3 is_stmt 1 view .LVU141
 287:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 474              		.loc 1 287 29 is_stmt 0 view .LVU142
 475 0016 0361     		str	r3, [r0, #16]
 288:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 476              		.loc 1 288 3 is_stmt 1 view .LVU143
 288:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 477              		.loc 1 288 33 is_stmt 0 view .LVU144
 478 0018 8361     		str	r3, [r0, #24]
 289:Core/Src/main.c ****   {
 479              		.loc 1 289 3 is_stmt 1 view .LVU145
 289:Core/Src/main.c ****   {
 480              		.loc 1 289 7 is_stmt 0 view .LVU146
 481 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 482              	.LVL14:
 289:Core/Src/main.c ****   {
 483              		.loc 1 289 6 view .LVU147
 484 001e 00B9     		cbnz	r0, .L22
 297:Core/Src/main.c **** 
 485              		.loc 1 297 1 view .LVU148
 486 0020 08BD     		pop	{r3, pc}
 487              	.L22:
 291:Core/Src/main.c ****   }
 488              		.loc 1 291 5 is_stmt 1 view .LVU149
 489 0022 FFF7FEFF 		bl	Error_Handler
 490              	.LVL15:
 491              	.L24:
 492 0026 00BF     		.align	2
 493              	.L23:
 494 0028 00000000 		.word	htim14
 495 002c 00200040 		.word	1073750016
 496              		.cfi_endproc
 497              	.LFE134:
 499              		.section	.text.MX_TIM13_Init,"ax",%progbits
 500              		.align	1
 501              		.syntax unified
 502              		.thumb
 503              		.thumb_func
 504              		.fpu fpv4-sp-d16
 506              	MX_TIM13_Init:
 507              	.LFB133:
 243:Core/Src/main.c **** 
 508              		.loc 1 243 1 view -0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512 0000 08B5     		push	{r3, lr}
 513              	.LCFI6:
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 3, -8
 516              		.cfi_offset 14, -4
ARM GAS  /tmp/ccLxF6z8.s 			page 21


 252:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 517              		.loc 1 252 3 view .LVU151
 252:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 518              		.loc 1 252 19 is_stmt 0 view .LVU152
 519 0002 0948     		ldr	r0, .L29
 520 0004 094B     		ldr	r3, .L29+4
 521 0006 0360     		str	r3, [r0]
 253:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 522              		.loc 1 253 3 is_stmt 1 view .LVU153
 253:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 523              		.loc 1 253 25 is_stmt 0 view .LVU154
 524 0008 42F22733 		movw	r3, #8999
 525 000c 4360     		str	r3, [r0, #4]
 254:Core/Src/main.c ****   htim13.Init.Period = 100-1;
 526              		.loc 1 254 3 is_stmt 1 view .LVU155
 254:Core/Src/main.c ****   htim13.Init.Period = 100-1;
 527              		.loc 1 254 27 is_stmt 0 view .LVU156
 528 000e 0023     		movs	r3, #0
 529 0010 8360     		str	r3, [r0, #8]
 255:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 530              		.loc 1 255 3 is_stmt 1 view .LVU157
 255:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 531              		.loc 1 255 22 is_stmt 0 view .LVU158
 532 0012 6322     		movs	r2, #99
 533 0014 C260     		str	r2, [r0, #12]
 256:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 534              		.loc 1 256 3 is_stmt 1 view .LVU159
 256:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 535              		.loc 1 256 29 is_stmt 0 view .LVU160
 536 0016 0361     		str	r3, [r0, #16]
 257:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 537              		.loc 1 257 3 is_stmt 1 view .LVU161
 257:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 538              		.loc 1 257 33 is_stmt 0 view .LVU162
 539 0018 8361     		str	r3, [r0, #24]
 258:Core/Src/main.c ****   {
 540              		.loc 1 258 3 is_stmt 1 view .LVU163
 258:Core/Src/main.c ****   {
 541              		.loc 1 258 7 is_stmt 0 view .LVU164
 542 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 543              	.LVL16:
 258:Core/Src/main.c ****   {
 544              		.loc 1 258 6 view .LVU165
 545 001e 00B9     		cbnz	r0, .L28
 266:Core/Src/main.c **** 
 546              		.loc 1 266 1 view .LVU166
 547 0020 08BD     		pop	{r3, pc}
 548              	.L28:
 260:Core/Src/main.c ****   }
 549              		.loc 1 260 5 is_stmt 1 view .LVU167
 550 0022 FFF7FEFF 		bl	Error_Handler
 551              	.LVL17:
 552              	.L30:
 553 0026 00BF     		.align	2
 554              	.L29:
 555 0028 00000000 		.word	htim13
 556 002c 001C0040 		.word	1073748992
ARM GAS  /tmp/ccLxF6z8.s 			page 22


 557              		.cfi_endproc
 558              	.LFE133:
 560              		.section	.text.SystemClock_Config,"ax",%progbits
 561              		.align	1
 562              		.global	SystemClock_Config
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
 566              		.fpu fpv4-sp-d16
 568              	SystemClock_Config:
 569              	.LFB131:
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 570              		.loc 1 147 1 view -0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 80
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574 0000 00B5     		push	{lr}
 575              	.LCFI7:
 576              		.cfi_def_cfa_offset 4
 577              		.cfi_offset 14, -4
 578 0002 95B0     		sub	sp, sp, #84
 579              	.LCFI8:
 580              		.cfi_def_cfa_offset 88
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 581              		.loc 1 148 3 view .LVU169
 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 582              		.loc 1 148 22 is_stmt 0 view .LVU170
 583 0004 3422     		movs	r2, #52
 584 0006 0021     		movs	r1, #0
 585 0008 07A8     		add	r0, sp, #28
 586 000a FFF7FEFF 		bl	memset
 587              	.LVL18:
 149:Core/Src/main.c **** 
 588              		.loc 1 149 3 is_stmt 1 view .LVU171
 149:Core/Src/main.c **** 
 589              		.loc 1 149 22 is_stmt 0 view .LVU172
 590 000e 0023     		movs	r3, #0
 591 0010 0293     		str	r3, [sp, #8]
 592 0012 0393     		str	r3, [sp, #12]
 593 0014 0493     		str	r3, [sp, #16]
 594 0016 0593     		str	r3, [sp, #20]
 595 0018 0693     		str	r3, [sp, #24]
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 596              		.loc 1 153 3 is_stmt 1 view .LVU173
 597              	.LBB9:
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 598              		.loc 1 153 3 view .LVU174
 599 001a 0093     		str	r3, [sp]
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 600              		.loc 1 153 3 view .LVU175
 601 001c 1E4A     		ldr	r2, .L37
 602 001e 116C     		ldr	r1, [r2, #64]
 603 0020 41F08051 		orr	r1, r1, #268435456
 604 0024 1164     		str	r1, [r2, #64]
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 605              		.loc 1 153 3 view .LVU176
 606 0026 126C     		ldr	r2, [r2, #64]
ARM GAS  /tmp/ccLxF6z8.s 			page 23


 607 0028 02F08052 		and	r2, r2, #268435456
 608 002c 0092     		str	r2, [sp]
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 609              		.loc 1 153 3 view .LVU177
 610 002e 009A     		ldr	r2, [sp]
 611              	.LBE9:
 153:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 612              		.loc 1 153 3 view .LVU178
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 613              		.loc 1 154 3 view .LVU179
 614              	.LBB10:
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 615              		.loc 1 154 3 view .LVU180
 616 0030 0193     		str	r3, [sp, #4]
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 617              		.loc 1 154 3 view .LVU181
 618 0032 1A4A     		ldr	r2, .L37+4
 619 0034 1168     		ldr	r1, [r2]
 620 0036 41F44041 		orr	r1, r1, #49152
 621 003a 1160     		str	r1, [r2]
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 622              		.loc 1 154 3 view .LVU182
 623 003c 1268     		ldr	r2, [r2]
 624 003e 02F44042 		and	r2, r2, #49152
 625 0042 0192     		str	r2, [sp, #4]
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 626              		.loc 1 154 3 view .LVU183
 627 0044 019A     		ldr	r2, [sp, #4]
 628              	.LBE10:
 154:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 629              		.loc 1 154 3 view .LVU184
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 630              		.loc 1 158 3 view .LVU185
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 631              		.loc 1 158 36 is_stmt 0 view .LVU186
 632 0046 0222     		movs	r2, #2
 633 0048 0792     		str	r2, [sp, #28]
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 634              		.loc 1 159 3 is_stmt 1 view .LVU187
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 635              		.loc 1 159 30 is_stmt 0 view .LVU188
 636 004a 0121     		movs	r1, #1
 637 004c 0A91     		str	r1, [sp, #40]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 638              		.loc 1 160 3 is_stmt 1 view .LVU189
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 639              		.loc 1 160 41 is_stmt 0 view .LVU190
 640 004e 1021     		movs	r1, #16
 641 0050 0B91     		str	r1, [sp, #44]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 642              		.loc 1 161 3 is_stmt 1 view .LVU191
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 643              		.loc 1 161 34 is_stmt 0 view .LVU192
 644 0052 0D92     		str	r2, [sp, #52]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 645              		.loc 1 162 3 is_stmt 1 view .LVU193
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
ARM GAS  /tmp/ccLxF6z8.s 			page 24


 646              		.loc 1 162 35 is_stmt 0 view .LVU194
 647 0054 0E93     		str	r3, [sp, #56]
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 648              		.loc 1 163 3 is_stmt 1 view .LVU195
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 649              		.loc 1 163 30 is_stmt 0 view .LVU196
 650 0056 0823     		movs	r3, #8
 651 0058 0F93     		str	r3, [sp, #60]
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 652              		.loc 1 164 3 is_stmt 1 view .LVU197
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 653              		.loc 1 164 30 is_stmt 0 view .LVU198
 654 005a 5A23     		movs	r3, #90
 655 005c 1093     		str	r3, [sp, #64]
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 656              		.loc 1 165 3 is_stmt 1 view .LVU199
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 657              		.loc 1 165 30 is_stmt 0 view .LVU200
 658 005e 1192     		str	r2, [sp, #68]
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 659              		.loc 1 166 3 is_stmt 1 view .LVU201
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 660              		.loc 1 166 30 is_stmt 0 view .LVU202
 661 0060 1292     		str	r2, [sp, #72]
 167:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 662              		.loc 1 167 3 is_stmt 1 view .LVU203
 167:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 663              		.loc 1 167 30 is_stmt 0 view .LVU204
 664 0062 1392     		str	r2, [sp, #76]
 168:Core/Src/main.c ****   {
 665              		.loc 1 168 3 is_stmt 1 view .LVU205
 168:Core/Src/main.c ****   {
 666              		.loc 1 168 7 is_stmt 0 view .LVU206
 667 0064 07A8     		add	r0, sp, #28
 668 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 669              	.LVL19:
 168:Core/Src/main.c ****   {
 670              		.loc 1 168 6 view .LVU207
 671 006a 88B9     		cbnz	r0, .L35
 174:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 672              		.loc 1 174 3 is_stmt 1 view .LVU208
 174:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 673              		.loc 1 174 31 is_stmt 0 view .LVU209
 674 006c 0F23     		movs	r3, #15
 675 006e 0293     		str	r3, [sp, #8]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 676              		.loc 1 176 3 is_stmt 1 view .LVU210
 176:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 677              		.loc 1 176 34 is_stmt 0 view .LVU211
 678 0070 0223     		movs	r3, #2
 679 0072 0393     		str	r3, [sp, #12]
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 680              		.loc 1 177 3 is_stmt 1 view .LVU212
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 681              		.loc 1 177 35 is_stmt 0 view .LVU213
 682 0074 0023     		movs	r3, #0
 683 0076 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccLxF6z8.s 			page 25


 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 684              		.loc 1 178 3 is_stmt 1 view .LVU214
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 685              		.loc 1 178 36 is_stmt 0 view .LVU215
 686 0078 4FF48052 		mov	r2, #4096
 687 007c 0592     		str	r2, [sp, #20]
 179:Core/Src/main.c **** 
 688              		.loc 1 179 3 is_stmt 1 view .LVU216
 179:Core/Src/main.c **** 
 689              		.loc 1 179 36 is_stmt 0 view .LVU217
 690 007e 0693     		str	r3, [sp, #24]
 181:Core/Src/main.c ****   {
 691              		.loc 1 181 3 is_stmt 1 view .LVU218
 181:Core/Src/main.c ****   {
 692              		.loc 1 181 7 is_stmt 0 view .LVU219
 693 0080 0321     		movs	r1, #3
 694 0082 02A8     		add	r0, sp, #8
 695 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 696              	.LVL20:
 181:Core/Src/main.c ****   {
 697              		.loc 1 181 6 view .LVU220
 698 0088 20B9     		cbnz	r0, .L36
 185:Core/Src/main.c **** 
 699              		.loc 1 185 1 view .LVU221
 700 008a 15B0     		add	sp, sp, #84
 701              	.LCFI9:
 702              		.cfi_remember_state
 703              		.cfi_def_cfa_offset 4
 704              		@ sp needed
 705 008c 5DF804FB 		ldr	pc, [sp], #4
 706              	.L35:
 707              	.LCFI10:
 708              		.cfi_restore_state
 170:Core/Src/main.c ****   }
 709              		.loc 1 170 5 is_stmt 1 view .LVU222
 710 0090 FFF7FEFF 		bl	Error_Handler
 711              	.LVL21:
 712              	.L36:
 183:Core/Src/main.c ****   }
 713              		.loc 1 183 5 view .LVU223
 714 0094 FFF7FEFF 		bl	Error_Handler
 715              	.LVL22:
 716              	.L38:
 717              		.align	2
 718              	.L37:
 719 0098 00380240 		.word	1073887232
 720 009c 00700040 		.word	1073770496
 721              		.cfi_endproc
 722              	.LFE131:
 724              		.section	.text.main,"ax",%progbits
 725              		.align	1
 726              		.global	main
 727              		.syntax unified
 728              		.thumb
 729              		.thumb_func
 730              		.fpu fpv4-sp-d16
 732              	main:
ARM GAS  /tmp/ccLxF6z8.s 			page 26


 733              	.LFB130:
  88:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 734              		.loc 1 88 1 view -0
 735              		.cfi_startproc
 736              		@ Volatile: function does not return.
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739 0000 08B5     		push	{r3, lr}
 740              	.LCFI11:
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 3, -8
 743              		.cfi_offset 14, -4
  91:Core/Src/main.c ****   TxHeader.ExtId = 0x0;
 744              		.loc 1 91 3 view .LVU225
  91:Core/Src/main.c ****   TxHeader.ExtId = 0x0;
 745              		.loc 1 91 18 is_stmt 0 view .LVU226
 746 0002 114B     		ldr	r3, .L42
 747 0004 8222     		movs	r2, #130
 748 0006 1A60     		str	r2, [r3]
  92:Core/Src/main.c ****   TxHeader.IDE = CAN_ID_STD;
 749              		.loc 1 92 3 is_stmt 1 view .LVU227
  92:Core/Src/main.c ****   TxHeader.IDE = CAN_ID_STD;
 750              		.loc 1 92 18 is_stmt 0 view .LVU228
 751 0008 0022     		movs	r2, #0
 752 000a 5A60     		str	r2, [r3, #4]
  93:Core/Src/main.c ****   TxHeader.RTR = CAN_RTR_DATA;
 753              		.loc 1 93 3 is_stmt 1 view .LVU229
  93:Core/Src/main.c ****   TxHeader.RTR = CAN_RTR_DATA;
 754              		.loc 1 93 16 is_stmt 0 view .LVU230
 755 000c 9A60     		str	r2, [r3, #8]
  94:Core/Src/main.c ****   TxHeader.DLC = 8;
 756              		.loc 1 94 3 is_stmt 1 view .LVU231
  94:Core/Src/main.c ****   TxHeader.DLC = 8;
 757              		.loc 1 94 16 is_stmt 0 view .LVU232
 758 000e DA60     		str	r2, [r3, #12]
  95:Core/Src/main.c ****   TxHeader.TransmitGlobalTime = DISABLE;
 759              		.loc 1 95 3 is_stmt 1 view .LVU233
  95:Core/Src/main.c ****   TxHeader.TransmitGlobalTime = DISABLE;
 760              		.loc 1 95 16 is_stmt 0 view .LVU234
 761 0010 0821     		movs	r1, #8
 762 0012 1961     		str	r1, [r3, #16]
  96:Core/Src/main.c **** 
 763              		.loc 1 96 3 is_stmt 1 view .LVU235
  96:Core/Src/main.c **** 
 764              		.loc 1 96 31 is_stmt 0 view .LVU236
 765 0014 1A75     		strb	r2, [r3, #20]
 103:Core/Src/main.c **** 
 766              		.loc 1 103 3 is_stmt 1 view .LVU237
 767 0016 FFF7FEFF 		bl	HAL_Init
 768              	.LVL23:
 110:Core/Src/main.c **** 
 769              		.loc 1 110 3 view .LVU238
 770 001a FFF7FEFF 		bl	SystemClock_Config
 771              	.LVL24:
 117:Core/Src/main.c ****   MX_CAN1_Init();
 772              		.loc 1 117 3 view .LVU239
 773 001e FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  /tmp/ccLxF6z8.s 			page 27


 774              	.LVL25:
 118:Core/Src/main.c ****   MX_TIM14_Init();
 775              		.loc 1 118 3 view .LVU240
 776 0022 FFF7FEFF 		bl	MX_CAN1_Init
 777              	.LVL26:
 119:Core/Src/main.c ****   MX_TIM13_Init();
 778              		.loc 1 119 3 view .LVU241
 779 0026 FFF7FEFF 		bl	MX_TIM14_Init
 780              	.LVL27:
 120:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 781              		.loc 1 120 3 view .LVU242
 782 002a FFF7FEFF 		bl	MX_TIM13_Init
 783              	.LVL28:
 124:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 784              		.loc 1 124 3 view .LVU243
 785 002e 074C     		ldr	r4, .L42+4
 786 0030 2046     		mov	r0, r4
 787 0032 FFF7FEFF 		bl	HAL_CAN_Start
 788              	.LVL29:
 125:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim14);
 789              		.loc 1 125 3 view .LVU244
 790 0036 0221     		movs	r1, #2
 791 0038 2046     		mov	r0, r4
 792 003a FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 793              	.LVL30:
 126:Core/Src/main.c ****   // HAL_TIM_Base_Start_IT(&htim13);
 794              		.loc 1 126 3 view .LVU245
 795 003e 0448     		ldr	r0, .L42+8
 796 0040 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 797              	.LVL31:
 798              	.L40:
 133:Core/Src/main.c ****   {
 799              		.loc 1 133 3 discriminator 1 view .LVU246
 138:Core/Src/main.c ****   /* USER CODE END 3 */
 800              		.loc 1 138 3 discriminator 1 view .LVU247
 133:Core/Src/main.c ****   {
 801              		.loc 1 133 9 discriminator 1 view .LVU248
 802 0044 FEE7     		b	.L40
 803              	.L43:
 804 0046 00BF     		.align	2
 805              	.L42:
 806 0048 00000000 		.word	TxHeader
 807 004c 00000000 		.word	hcan1
 808 0050 00000000 		.word	htim14
 809              		.cfi_endproc
 810              	.LFE130:
 812              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 813              		.align	1
 814              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 815              		.syntax unified
 816              		.thumb
 817              		.thumb_func
 818              		.fpu fpv4-sp-d16
 820              	HAL_CAN_RxFifo0MsgPendingCallback:
 821              	.LVL32:
 822              	.LFB136:
 334:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK){
ARM GAS  /tmp/ccLxF6z8.s 			page 28


 823              		.loc 1 334 1 view -0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 334:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK){
 827              		.loc 1 334 1 is_stmt 0 view .LVU250
 828 0000 08B5     		push	{r3, lr}
 829              	.LCFI12:
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 3, -8
 832              		.cfi_offset 14, -4
 335:Core/Src/main.c ****     Error_Handler();
 833              		.loc 1 335 3 is_stmt 1 view .LVU251
 335:Core/Src/main.c ****     Error_Handler();
 834              		.loc 1 335 7 is_stmt 0 view .LVU252
 835 0002 094B     		ldr	r3, .L50
 836 0004 094A     		ldr	r2, .L50+4
 837 0006 0021     		movs	r1, #0
 838 0008 0948     		ldr	r0, .L50+8
 839              	.LVL33:
 335:Core/Src/main.c ****     Error_Handler();
 840              		.loc 1 335 7 view .LVU253
 841 000a FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 842              	.LVL34:
 335:Core/Src/main.c ****     Error_Handler();
 843              		.loc 1 335 6 view .LVU254
 844 000e 20B9     		cbnz	r0, .L48
 340:Core/Src/main.c ****   {
 845              		.loc 1 340 3 is_stmt 1 view .LVU255
 340:Core/Src/main.c ****   {
 846              		.loc 1 340 15 is_stmt 0 view .LVU256
 847 0010 064B     		ldr	r3, .L50+4
 848 0012 1B68     		ldr	r3, [r3]
 340:Core/Src/main.c ****   {
 849              		.loc 1 340 6 view .LVU257
 850 0014 932B     		cmp	r3, #147
 851 0016 02D0     		beq	.L49
 852              	.L44:
 345:Core/Src/main.c **** 
 853              		.loc 1 345 1 view .LVU258
 854 0018 08BD     		pop	{r3, pc}
 855              	.L48:
 336:Core/Src/main.c ****   }
 856              		.loc 1 336 5 is_stmt 1 view .LVU259
 857 001a FFF7FEFF 		bl	Error_Handler
 858              	.LVL35:
 859              	.L49:
 342:Core/Src/main.c ****       // fanSig = RxData[4];
 860              		.loc 1 342 7 view .LVU260
 342:Core/Src/main.c ****       // fanSig = RxData[4];
 861              		.loc 1 342 26 is_stmt 0 view .LVU261
 862 001e 024B     		ldr	r3, .L50
 863 0020 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 342:Core/Src/main.c ****       // fanSig = RxData[4];
 864              		.loc 1 342 18 view .LVU262
 865 0022 044B     		ldr	r3, .L50+12
 866 0024 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccLxF6z8.s 			page 29


 345:Core/Src/main.c **** 
 867              		.loc 1 345 1 view .LVU263
 868 0026 F7E7     		b	.L44
 869              	.L51:
 870              		.align	2
 871              	.L50:
 872 0028 00000000 		.word	RxData
 873 002c 00000000 		.word	RxHeader
 874 0030 00000000 		.word	hcan1
 875 0034 00000000 		.word	.LANCHOR2
 876              		.cfi_endproc
 877              	.LFE136:
 879              		.global	bmsFault
 880              		.global	imdFault
 881              		.global	fanSig
 882              		.global	brakeLight
 883              		.comm	RxData,8,4
 884              		.comm	filter0,40,4
 885              		.comm	RxHeader,28,4
 886              		.comm	TxMailbox,4,4
 887              		.comm	TxData,8,4
 888              		.comm	TxHeader,24,4
 889              		.comm	htim14,72,4
 890              		.comm	htim13,72,4
 891              		.comm	hcan1,40,4
 892              		.section	.bss.brakeLight,"aw",%nobits
 893              		.set	.LANCHOR2,. + 0
 896              	brakeLight:
 897 0000 00       		.space	1
 898              		.section	.bss.fanSig,"aw",%nobits
 901              	fanSig:
 902 0000 00       		.space	1
 903              		.section	.data.bmsFault,"aw"
 904              		.set	.LANCHOR1,. + 0
 907              	bmsFault:
 908 0000 01       		.byte	1
 909              		.section	.data.imdFault,"aw"
 910              		.set	.LANCHOR0,. + 0
 913              	imdFault:
 914 0000 01       		.byte	1
 915              		.text
 916              	.Letext0:
 917              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 918              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 919              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 920              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 921              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 922              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 923              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 924              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 925              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 926              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 927              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 928              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 929              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 930              		.file 16 "<built-in>"
ARM GAS  /tmp/ccLxF6z8.s 			page 30


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccLxF6z8.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccLxF6z8.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccLxF6z8.s:148    .text.MX_GPIO_Init:0000000000000084 $d
     /tmp/ccLxF6z8.s:155    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccLxF6z8.s:162    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccLxF6z8.s:267    .text.HAL_TIM_PeriodElapsedCallback:0000000000000068 $d
                            *COM*:0000000000000048 htim14
                            *COM*:0000000000000008 TxData
                            *COM*:0000000000000004 TxMailbox
                            *COM*:0000000000000018 TxHeader
                            *COM*:0000000000000028 hcan1
     /tmp/ccLxF6z8.s:281    .text.Error_Handler:0000000000000000 $t
     /tmp/ccLxF6z8.s:288    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccLxF6z8.s:320    .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccLxF6z8.s:326    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccLxF6z8.s:432    .text.MX_CAN1_Init:0000000000000058 $d
                            *COM*:0000000000000028 filter0
     /tmp/ccLxF6z8.s:439    .text.MX_TIM14_Init:0000000000000000 $t
     /tmp/ccLxF6z8.s:445    .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
     /tmp/ccLxF6z8.s:494    .text.MX_TIM14_Init:0000000000000028 $d
     /tmp/ccLxF6z8.s:500    .text.MX_TIM13_Init:0000000000000000 $t
     /tmp/ccLxF6z8.s:506    .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
     /tmp/ccLxF6z8.s:555    .text.MX_TIM13_Init:0000000000000028 $d
                            *COM*:0000000000000048 htim13
     /tmp/ccLxF6z8.s:561    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccLxF6z8.s:568    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccLxF6z8.s:719    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccLxF6z8.s:725    .text.main:0000000000000000 $t
     /tmp/ccLxF6z8.s:732    .text.main:0000000000000000 main
     /tmp/ccLxF6z8.s:806    .text.main:0000000000000048 $d
     /tmp/ccLxF6z8.s:813    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccLxF6z8.s:820    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccLxF6z8.s:872    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000028 $d
                            *COM*:0000000000000008 RxData
                            *COM*:000000000000001c RxHeader
     /tmp/ccLxF6z8.s:907    .data.bmsFault:0000000000000000 bmsFault
     /tmp/ccLxF6z8.s:913    .data.imdFault:0000000000000000 imdFault
     /tmp/ccLxF6z8.s:901    .bss.fanSig:0000000000000000 fanSig
     /tmp/ccLxF6z8.s:896    .bss.brakeLight:0000000000000000 brakeLight
     /tmp/ccLxF6z8.s:897    .bss.brakeLight:0000000000000000 $d
     /tmp/ccLxF6z8.s:902    .bss.fanSig:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_GPIO_ReadPin
HAL_CAN_AddTxMessage
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_TIM_Base_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_CAN_Start
ARM GAS  /tmp/ccLxF6z8.s 			page 31


HAL_CAN_ActivateNotification
HAL_TIM_Base_Start_IT
HAL_CAN_GetRxMessage
