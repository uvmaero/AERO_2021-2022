ARM GAS  /tmp/cchEMpbF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB223:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/cchEMpbF.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** #define ADC_BUF_LEN 4
  35:Core/Src/main.c **** #define MAX_PEDAL_SKEW 100
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  46:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** TIM_HandleTypeDef htim13;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** CAN_TxHeaderTypeDef TxHeader;
  56:Core/Src/main.c **** CAN_TxHeaderTypeDef TxHeader2; // rinehart command message
  57:Core/Src/main.c **** uint8_t TxData[8];
  58:Core/Src/main.c **** uint32_t TxMailbox;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** CAN_RxHeaderTypeDef RxHeader;
  61:Core/Src/main.c **** uint8_t RxData[8];
  62:Core/Src/main.c **** CAN_FilterTypeDef filter0;
  63:Core/Src/main.c **** CAN_FilterTypeDef filter1;
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** // signal variables
  66:Core/Src/main.c **** uint8_t imdFault = 0;
  67:Core/Src/main.c **** uint8_t bmsFault = 0;
  68:Core/Src/main.c **** uint8_t switch_cooling = 0;
  69:Core/Src/main.c **** uint8_t switch_direction = 0;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** // analog pins
  72:Core/Src/main.c **** uint16_t adc_buf[ADC_BUF_LEN];
  73:Core/Src/main.c **** uint16_t pedal0 = 0;
  74:Core/Src/main.c **** uint16_t pedal1 = 1;
  75:Core/Src/main.c **** uint16_t pedalAverage = 0;
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** uint8_t ready_to_drive = 0;                // false until precharge is done. press button now
  78:Core/Src/main.c **** uint8_t buzzer_signal = 0;          // Turn on for 
  79:Core/Src/main.c **** uint8_t startButtonState = 0;       // RTD button LED toggle (0 is off)
  80:Core/Src/main.c **** uint8_t buzzerState = 0;            // for controlling the buzzer (0 = off | 1 = on)
  81:Core/Src/main.c **** uint8_t buzzerCounter = 0;          // counter for how long the buzzer has been on
  82:Core/Src/main.c **** uint8_t enableInverter = 0;         // stores state of inverter, can only be 1 after buzzer is done
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** // rinehart commands
  85:Core/Src/main.c **** uint16_t command_torque_limit = 100;
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* USER CODE END PV */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/cchEMpbF.s 			page 3


  89:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  90:Core/Src/main.c **** void SystemClock_Config(void);
  91:Core/Src/main.c **** static void MX_GPIO_Init(void);
  92:Core/Src/main.c **** static void MX_CAN1_Init(void);
  93:Core/Src/main.c **** static void MX_DMA_Init(void);
  94:Core/Src/main.c **** static void MX_ADC1_Init(void);
  95:Core/Src/main.c **** static void MX_TIM14_Init(void);
  96:Core/Src/main.c **** static void MX_TIM13_Init(void);
  97:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  98:Core/Src/main.c **** uint16_t pedal_conversion(uint16_t pedal0, uint16_t pedal1);
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* USER CODE END PFP */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 103:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* USER CODE END 0 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /**
 108:Core/Src/main.c ****   * @brief  The application entry point.
 109:Core/Src/main.c ****   * @retval int
 110:Core/Src/main.c ****   */
 111:Core/Src/main.c **** int main(void)
 112:Core/Src/main.c **** {
 113:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   // define TX header
 116:Core/Src/main.c ****   TxHeader.StdId = 0x093;
 117:Core/Src/main.c ****   TxHeader.ExtId = 0x0;
 118:Core/Src/main.c ****   TxHeader.IDE = CAN_ID_STD;
 119:Core/Src/main.c ****   TxHeader.RTR = CAN_RTR_DATA;
 120:Core/Src/main.c ****   TxHeader.DLC = 8;
 121:Core/Src/main.c ****   TxHeader.TransmitGlobalTime = DISABLE;
 122:Core/Src/main.c ****   
 123:Core/Src/main.c ****   // Rinehart command message
 124:Core/Src/main.c ****   TxHeader2.StdId = 0x0C0;
 125:Core/Src/main.c ****   TxHeader2.ExtId = 0x0;
 126:Core/Src/main.c ****   TxHeader2.IDE = CAN_ID_STD;
 127:Core/Src/main.c ****   TxHeader2.RTR = CAN_RTR_DATA;
 128:Core/Src/main.c ****   TxHeader2.DLC = 8;
 129:Core/Src/main.c ****   TxHeader2.TransmitGlobalTime = DISABLE;
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE END 1 */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 136:Core/Src/main.c ****   HAL_Init();
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   /* USER CODE END Init */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Configure the system clock */
 143:Core/Src/main.c ****   SystemClock_Config();
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/cchEMpbF.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* USER CODE END SysInit */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* Initialize all configured peripherals */
 150:Core/Src/main.c ****   MX_GPIO_Init();
 151:Core/Src/main.c ****   MX_CAN1_Init();
 152:Core/Src/main.c ****   MX_DMA_Init();
 153:Core/Src/main.c ****   MX_ADC1_Init();
 154:Core/Src/main.c ****   MX_TIM14_Init();
 155:Core/Src/main.c ****   MX_TIM13_Init();
 156:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   // start interrupts
 159:Core/Src/main.c ****   HAL_CAN_Start(&hcan1);
 160:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 161:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim14);
 162:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim13);
 163:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc_buf, ADC_BUF_LEN);
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /* USER CODE END 2 */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   /* Infinite loop */
 168:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 169:Core/Src/main.c ****   while (1)
 170:Core/Src/main.c ****   {
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****     /* USER CODE END WHILE */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 175:Core/Src/main.c ****   }
 176:Core/Src/main.c ****   /* USER CODE END 3 */
 177:Core/Src/main.c **** }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /**
 180:Core/Src/main.c ****   * @brief System Clock Configuration
 181:Core/Src/main.c ****   * @retval None
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c **** void SystemClock_Config(void)
 184:Core/Src/main.c **** {
 185:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 186:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 189:Core/Src/main.c ****   */
 190:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 191:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 192:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 193:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 194:Core/Src/main.c ****   */
 195:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 197:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
ARM GAS  /tmp/cchEMpbF.s 			page 5


 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 204:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 205:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 210:Core/Src/main.c ****   */
 211:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 212:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 213:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 214:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 215:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 216:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 219:Core/Src/main.c ****   {
 220:Core/Src/main.c ****     Error_Handler();
 221:Core/Src/main.c ****   }
 222:Core/Src/main.c **** }
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** /**
 225:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 226:Core/Src/main.c ****   * @param None
 227:Core/Src/main.c ****   * @retval None
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c **** static void MX_ADC1_Init(void)
 230:Core/Src/main.c **** {
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 241:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 242:Core/Src/main.c ****   */
 243:Core/Src/main.c ****   hadc1.Instance = ADC1;
 244:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 245:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 246:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ENABLE;
 247:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 248:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 249:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 250:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 251:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 252:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 4;
 253:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 254:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 255:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 256:Core/Src/main.c ****   {
 257:Core/Src/main.c ****     Error_Handler();
 258:Core/Src/main.c ****   }
 259:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
ARM GAS  /tmp/cchEMpbF.s 			page 6


 260:Core/Src/main.c ****   */
 261:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_4;
 262:Core/Src/main.c ****   sConfig.Rank = 1;
 263:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 264:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 265:Core/Src/main.c ****   {
 266:Core/Src/main.c ****     Error_Handler();
 267:Core/Src/main.c ****   }
 268:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 269:Core/Src/main.c ****   */
 270:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 271:Core/Src/main.c ****   sConfig.Rank = 2;
 272:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 277:Core/Src/main.c ****   */
 278:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_6;
 279:Core/Src/main.c ****   sConfig.Rank = 3;
 280:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 281:Core/Src/main.c ****   {
 282:Core/Src/main.c ****     Error_Handler();
 283:Core/Src/main.c ****   }
 284:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 285:Core/Src/main.c ****   */
 286:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 287:Core/Src/main.c ****   sConfig.Rank = 4;
 288:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 289:Core/Src/main.c ****   {
 290:Core/Src/main.c ****     Error_Handler();
 291:Core/Src/main.c ****   }
 292:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 295:Core/Src/main.c **** 
 296:Core/Src/main.c **** }
 297:Core/Src/main.c **** 
 298:Core/Src/main.c **** /**
 299:Core/Src/main.c ****   * @brief CAN1 Initialization Function
 300:Core/Src/main.c ****   * @param None
 301:Core/Src/main.c ****   * @retval None
 302:Core/Src/main.c ****   */
 303:Core/Src/main.c **** static void MX_CAN1_Init(void)
 304:Core/Src/main.c **** {
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 313:Core/Src/main.c ****   hcan1.Instance = CAN1;
 314:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 315:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 316:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
ARM GAS  /tmp/cchEMpbF.s 			page 7


 317:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_2TQ;
 318:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 319:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 320:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 321:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = ENABLE;
 322:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 323:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 324:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 325:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 326:Core/Src/main.c ****   {
 327:Core/Src/main.c ****     Error_Handler();
 328:Core/Src/main.c ****   }
 329:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   filter0.FilterIdHigh = 0x082 << 5;
 332:Core/Src/main.c ****   filter0.FilterIdLow = 0x000;
 333:Core/Src/main.c ****   filter0.FilterMaskIdHigh = 0x082 << 5;
 334:Core/Src/main.c ****   filter0.FilterMaskIdLow = 0x000;
 335:Core/Src/main.c ****   filter0.FilterFIFOAssignment =  CAN_RX_FIFO0;
 336:Core/Src/main.c ****   filter0.FilterBank = 1;
 337:Core/Src/main.c ****   filter0.FilterMode = CAN_FILTERMODE_IDMASK;
 338:Core/Src/main.c ****   filter0.FilterScale = CAN_FILTERSCALE_32BIT;
 339:Core/Src/main.c ****   filter0.FilterActivation = ENABLE;
 340:Core/Src/main.c ****   filter0.SlaveStartFilterBank = 0;
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan1, &filter0);
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   // listen for HVB
 345:Core/Src/main.c ****   filter1.FilterIdHigh = 0x087 << 5;
 346:Core/Src/main.c ****   filter1.FilterIdLow = 0x000;
 347:Core/Src/main.c ****   filter1.FilterMaskIdHigh = 0x087 << 5;
 348:Core/Src/main.c ****   filter1.FilterMaskIdLow = 0x000;
 349:Core/Src/main.c ****   filter1.FilterFIFOAssignment =  CAN_RX_FIFO0;
 350:Core/Src/main.c ****   filter1.FilterBank = 2;
 351:Core/Src/main.c ****   filter1.FilterMode = CAN_FILTERMODE_IDMASK;
 352:Core/Src/main.c ****   filter1.FilterScale = CAN_FILTERSCALE_32BIT;
 353:Core/Src/main.c ****   filter1.FilterActivation = ENABLE;
 354:Core/Src/main.c ****   filter1.SlaveStartFilterBank = 0;
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   HAL_CAN_ConfigFilter(&hcan1, &filter1);
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** }
 361:Core/Src/main.c **** 
 362:Core/Src/main.c **** /**
 363:Core/Src/main.c ****   * @brief TIM13 Initialization Function
 364:Core/Src/main.c ****   * @param None
 365:Core/Src/main.c ****   * @retval None
 366:Core/Src/main.c ****   */
 367:Core/Src/main.c **** static void MX_TIM13_Init(void)
 368:Core/Src/main.c **** {
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 0 */
 371:Core/Src/main.c **** 
 372:Core/Src/main.c ****   /* USER CODE END TIM13_Init 0 */
 373:Core/Src/main.c **** 
ARM GAS  /tmp/cchEMpbF.s 			page 8


 374:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 1 */
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /* USER CODE END TIM13_Init 1 */
 377:Core/Src/main.c ****   htim13.Instance = TIM13;
 378:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 379:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 380:Core/Src/main.c ****   htim13.Init.Period = 500-1;
 381:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 382:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 383:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 384:Core/Src/main.c ****   {
 385:Core/Src/main.c ****     Error_Handler();
 386:Core/Src/main.c ****   }
 387:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 2 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE END TIM13_Init 2 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c **** }
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** /**
 394:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 395:Core/Src/main.c ****   * @param None
 396:Core/Src/main.c ****   * @retval None
 397:Core/Src/main.c ****   */
 398:Core/Src/main.c **** static void MX_TIM14_Init(void)
 399:Core/Src/main.c **** {
 400:Core/Src/main.c **** 
 401:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 408:Core/Src/main.c ****   htim14.Instance = TIM14;
 409:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 410:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 411:Core/Src/main.c ****   htim14.Init.Period = 1000-1;
 412:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 413:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 414:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 415:Core/Src/main.c ****   {
 416:Core/Src/main.c ****     Error_Handler();
 417:Core/Src/main.c ****   }
 418:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 421:Core/Src/main.c **** 
 422:Core/Src/main.c **** }
 423:Core/Src/main.c **** 
 424:Core/Src/main.c **** /**
 425:Core/Src/main.c ****   * Enable DMA controller clock
 426:Core/Src/main.c ****   */
 427:Core/Src/main.c **** static void MX_DMA_Init(void)
 428:Core/Src/main.c **** {
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /* DMA controller clock enable */
ARM GAS  /tmp/cchEMpbF.s 			page 9


 431:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /* DMA interrupt init */
 434:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 435:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 436:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 437:Core/Src/main.c **** 
 438:Core/Src/main.c **** }
 439:Core/Src/main.c **** 
 440:Core/Src/main.c **** /**
 441:Core/Src/main.c ****   * @brief GPIO Initialization Function
 442:Core/Src/main.c ****   * @param None
 443:Core/Src/main.c ****   * @retval None
 444:Core/Src/main.c ****   */
 445:Core/Src/main.c **** static void MX_GPIO_Init(void)
 446:Core/Src/main.c **** {
  28              		.loc 1 446 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 56
 447:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 447 3 view .LVU1
  44              		.loc 1 447 20 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0394     		str	r4, [sp, #12]
  47 0008 0494     		str	r4, [sp, #16]
  48 000a 0594     		str	r4, [sp, #20]
  49 000c 0694     		str	r4, [sp, #24]
  50 000e 0794     		str	r4, [sp, #28]
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 450:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  51              		.loc 1 450 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 450 3 view .LVU4
  54 0010 0094     		str	r4, [sp]
  55              		.loc 1 450 3 view .LVU5
  56 0012 2B4B     		ldr	r3, .L3
  57 0014 1A6B     		ldr	r2, [r3, #48]
  58 0016 42F08002 		orr	r2, r2, #128
  59 001a 1A63     		str	r2, [r3, #48]
  60              		.loc 1 450 3 view .LVU6
  61 001c 1A6B     		ldr	r2, [r3, #48]
  62 001e 02F08002 		and	r2, r2, #128
  63 0022 0092     		str	r2, [sp]
  64              		.loc 1 450 3 view .LVU7
ARM GAS  /tmp/cchEMpbF.s 			page 10


  65 0024 009A     		ldr	r2, [sp]
  66              	.LBE4:
  67              		.loc 1 450 3 view .LVU8
 451:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 451 3 view .LVU9
  69              	.LBB5:
  70              		.loc 1 451 3 view .LVU10
  71 0026 0194     		str	r4, [sp, #4]
  72              		.loc 1 451 3 view .LVU11
  73 0028 1A6B     		ldr	r2, [r3, #48]
  74 002a 42F00102 		orr	r2, r2, #1
  75 002e 1A63     		str	r2, [r3, #48]
  76              		.loc 1 451 3 view .LVU12
  77 0030 1A6B     		ldr	r2, [r3, #48]
  78 0032 02F00102 		and	r2, r2, #1
  79 0036 0192     		str	r2, [sp, #4]
  80              		.loc 1 451 3 view .LVU13
  81 0038 019A     		ldr	r2, [sp, #4]
  82              	.LBE5:
  83              		.loc 1 451 3 view .LVU14
 452:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  84              		.loc 1 452 3 view .LVU15
  85              	.LBB6:
  86              		.loc 1 452 3 view .LVU16
  87 003a 0294     		str	r4, [sp, #8]
  88              		.loc 1 452 3 view .LVU17
  89 003c 1A6B     		ldr	r2, [r3, #48]
  90 003e 42F00202 		orr	r2, r2, #2
  91 0042 1A63     		str	r2, [r3, #48]
  92              		.loc 1 452 3 view .LVU18
  93 0044 1B6B     		ldr	r3, [r3, #48]
  94 0046 03F00203 		and	r3, r3, #2
  95 004a 0293     		str	r3, [sp, #8]
  96              		.loc 1 452 3 view .LVU19
  97 004c 029B     		ldr	r3, [sp, #8]
  98              	.LBE6:
  99              		.loc 1 452 3 view .LVU20
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 455:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2|GPIO_PIN_8, GPIO_PIN_RESET);
 100              		.loc 1 455 3 view .LVU21
 101 004e 1D4D     		ldr	r5, .L3+4
 102 0050 2246     		mov	r2, r4
 103 0052 4FF48271 		mov	r1, #260
 104 0056 2846     		mov	r0, r5
 105 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 106              	.LVL0:
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 458:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, GPIO_PIN_RESET);
 107              		.loc 1 458 3 view .LVU22
 108 005c 1A4E     		ldr	r6, .L3+8
 109 005e 2246     		mov	r2, r4
 110 0060 4FF48061 		mov	r1, #1024
 111 0064 3046     		mov	r0, r6
 112 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 113              	.LVL1:
ARM GAS  /tmp/cchEMpbF.s 			page 11


 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   /*Configure GPIO pins : PB2 PB8 */
 461:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_8;
 114              		.loc 1 461 3 view .LVU23
 115              		.loc 1 461 23 is_stmt 0 view .LVU24
 116 006a 4FF48273 		mov	r3, #260
 117 006e 0393     		str	r3, [sp, #12]
 462:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 118              		.loc 1 462 3 is_stmt 1 view .LVU25
 119              		.loc 1 462 24 is_stmt 0 view .LVU26
 120 0070 0127     		movs	r7, #1
 121 0072 0497     		str	r7, [sp, #16]
 463:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 122              		.loc 1 463 3 is_stmt 1 view .LVU27
 123              		.loc 1 463 24 is_stmt 0 view .LVU28
 124 0074 0594     		str	r4, [sp, #20]
 464:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 125              		.loc 1 464 3 is_stmt 1 view .LVU29
 126              		.loc 1 464 25 is_stmt 0 view .LVU30
 127 0076 0694     		str	r4, [sp, #24]
 465:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 128              		.loc 1 465 3 is_stmt 1 view .LVU31
 129 0078 03A9     		add	r1, sp, #12
 130 007a 2846     		mov	r0, r5
 131 007c FFF7FEFF 		bl	HAL_GPIO_Init
 132              	.LVL2:
 466:Core/Src/main.c **** 
 467:Core/Src/main.c ****   /*Configure GPIO pin : PB15 */
 468:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
 133              		.loc 1 468 3 view .LVU32
 134              		.loc 1 468 23 is_stmt 0 view .LVU33
 135 0080 4FF40043 		mov	r3, #32768
 136 0084 0393     		str	r3, [sp, #12]
 469:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 137              		.loc 1 469 3 is_stmt 1 view .LVU34
 138              		.loc 1 469 24 is_stmt 0 view .LVU35
 139 0086 4FF48813 		mov	r3, #1114112
 140 008a 0493     		str	r3, [sp, #16]
 470:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 141              		.loc 1 470 3 is_stmt 1 view .LVU36
 142              		.loc 1 470 24 is_stmt 0 view .LVU37
 143 008c 0594     		str	r4, [sp, #20]
 471:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 144              		.loc 1 471 3 is_stmt 1 view .LVU38
 145 008e 03A9     		add	r1, sp, #12
 146 0090 2846     		mov	r0, r5
 147 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 148              	.LVL3:
 472:Core/Src/main.c **** 
 473:Core/Src/main.c ****   /*Configure GPIO pin : PA10 */
 474:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10;
 149              		.loc 1 474 3 view .LVU39
 150              		.loc 1 474 23 is_stmt 0 view .LVU40
 151 0096 4FF48063 		mov	r3, #1024
 152 009a 0393     		str	r3, [sp, #12]
 475:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 153              		.loc 1 475 3 is_stmt 1 view .LVU41
ARM GAS  /tmp/cchEMpbF.s 			page 12


 154              		.loc 1 475 24 is_stmt 0 view .LVU42
 155 009c 0497     		str	r7, [sp, #16]
 476:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 156              		.loc 1 476 3 is_stmt 1 view .LVU43
 157              		.loc 1 476 24 is_stmt 0 view .LVU44
 158 009e 0594     		str	r4, [sp, #20]
 477:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 159              		.loc 1 477 3 is_stmt 1 view .LVU45
 160              		.loc 1 477 25 is_stmt 0 view .LVU46
 161 00a0 0694     		str	r4, [sp, #24]
 478:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 162              		.loc 1 478 3 is_stmt 1 view .LVU47
 163 00a2 03A9     		add	r1, sp, #12
 164 00a4 3046     		mov	r0, r6
 165 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 166              	.LVL4:
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****   /* EXTI interrupt init*/
 481:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 167              		.loc 1 481 3 view .LVU48
 168 00aa 2246     		mov	r2, r4
 169 00ac 2146     		mov	r1, r4
 170 00ae 2820     		movs	r0, #40
 171 00b0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 172              	.LVL5:
 482:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 173              		.loc 1 482 3 view .LVU49
 174 00b4 2820     		movs	r0, #40
 175 00b6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 176              	.LVL6:
 483:Core/Src/main.c **** 
 484:Core/Src/main.c **** }
 177              		.loc 1 484 1 is_stmt 0 view .LVU50
 178 00ba 09B0     		add	sp, sp, #36
 179              	.LCFI2:
 180              		.cfi_def_cfa_offset 20
 181              		@ sp needed
 182 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 183              	.L4:
 184 00be 00BF     		.align	2
 185              	.L3:
 186 00c0 00380240 		.word	1073887232
 187 00c4 00040240 		.word	1073873920
 188 00c8 00000240 		.word	1073872896
 189              		.cfi_endproc
 190              	.LFE223:
 192              		.section	.text.MX_DMA_Init,"ax",%progbits
 193              		.align	1
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	MX_DMA_Init:
 200              	.LFB222:
 428:Core/Src/main.c **** 
 201              		.loc 1 428 1 is_stmt 1 view -0
 202              		.cfi_startproc
ARM GAS  /tmp/cchEMpbF.s 			page 13


 203              		@ args = 0, pretend = 0, frame = 8
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 00B5     		push	{lr}
 206              	.LCFI3:
 207              		.cfi_def_cfa_offset 4
 208              		.cfi_offset 14, -4
 209 0002 83B0     		sub	sp, sp, #12
 210              	.LCFI4:
 211              		.cfi_def_cfa_offset 16
 431:Core/Src/main.c **** 
 212              		.loc 1 431 3 view .LVU52
 213              	.LBB7:
 431:Core/Src/main.c **** 
 214              		.loc 1 431 3 view .LVU53
 215 0004 0021     		movs	r1, #0
 216 0006 0191     		str	r1, [sp, #4]
 431:Core/Src/main.c **** 
 217              		.loc 1 431 3 view .LVU54
 218 0008 094B     		ldr	r3, .L7
 219 000a 1A6B     		ldr	r2, [r3, #48]
 220 000c 42F48002 		orr	r2, r2, #4194304
 221 0010 1A63     		str	r2, [r3, #48]
 431:Core/Src/main.c **** 
 222              		.loc 1 431 3 view .LVU55
 223 0012 1B6B     		ldr	r3, [r3, #48]
 224 0014 03F48003 		and	r3, r3, #4194304
 225 0018 0193     		str	r3, [sp, #4]
 431:Core/Src/main.c **** 
 226              		.loc 1 431 3 view .LVU56
 227 001a 019B     		ldr	r3, [sp, #4]
 228              	.LBE7:
 431:Core/Src/main.c **** 
 229              		.loc 1 431 3 view .LVU57
 435:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 230              		.loc 1 435 3 view .LVU58
 231 001c 0A46     		mov	r2, r1
 232 001e 3820     		movs	r0, #56
 233 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 234              	.LVL7:
 436:Core/Src/main.c **** 
 235              		.loc 1 436 3 view .LVU59
 236 0024 3820     		movs	r0, #56
 237 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 238              	.LVL8:
 438:Core/Src/main.c **** 
 239              		.loc 1 438 1 is_stmt 0 view .LVU60
 240 002a 03B0     		add	sp, sp, #12
 241              	.LCFI5:
 242              		.cfi_def_cfa_offset 4
 243              		@ sp needed
 244 002c 5DF804FB 		ldr	pc, [sp], #4
 245              	.L8:
 246              		.align	2
 247              	.L7:
 248 0030 00380240 		.word	1073887232
 249              		.cfi_endproc
 250              	.LFE222:
ARM GAS  /tmp/cchEMpbF.s 			page 14


 252              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 253              		.align	1
 254              		.global	HAL_GPIO_EXTI_Callback
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 258              		.fpu fpv4-sp-d16
 260              	HAL_GPIO_EXTI_Callback:
 261              	.LVL9:
 262              	.LFB225:
 485:Core/Src/main.c **** 
 486:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 487:Core/Src/main.c **** 
 488:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan){
 489:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK){
 490:Core/Src/main.c ****     Error_Handler();
 491:Core/Src/main.c ****   }
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   if (RxHeader.StdId == 0x082){
 494:Core/Src/main.c ****       imdFault = RxData[0];
 495:Core/Src/main.c ****       bmsFault = RxData[1];
 496:Core/Src/main.c ****   }
 497:Core/Src/main.c ****   if (RxHeader.StdId == 0x087){
 498:Core/Src/main.c ****       ready_to_drive = RxData[0];
 499:Core/Src/main.c ****   }
 500:Core/Src/main.c **** 
 501:Core/Src/main.c **** }
 502:Core/Src/main.c **** 
 503:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 263              		.loc 1 503 47 is_stmt 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              		@ link register save eliminated.
 504:Core/Src/main.c **** 
 505:Core/Src/main.c ****   if (GPIO_Pin == GPIO_PIN_15){
 268              		.loc 1 505 3 view .LVU62
 269              		.loc 1 505 6 is_stmt 0 view .LVU63
 270 0000 B0F5004F 		cmp	r0, #32768
 271 0004 00D0     		beq	.L11
 272              	.L9:
 506:Core/Src/main.c ****     if (ready_to_drive){
 507:Core/Src/main.c ****       buzzerState = 1;
 508:Core/Src/main.c ****     }
 509:Core/Src/main.c ****   }
 510:Core/Src/main.c **** }
 273              		.loc 1 510 1 view .LVU64
 274 0006 7047     		bx	lr
 275              	.L11:
 506:Core/Src/main.c ****     if (ready_to_drive){
 276              		.loc 1 506 5 is_stmt 1 view .LVU65
 506:Core/Src/main.c ****     if (ready_to_drive){
 277              		.loc 1 506 9 is_stmt 0 view .LVU66
 278 0008 034B     		ldr	r3, .L12
 279 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 506:Core/Src/main.c ****     if (ready_to_drive){
 280              		.loc 1 506 8 view .LVU67
ARM GAS  /tmp/cchEMpbF.s 			page 15


 281 000c 002B     		cmp	r3, #0
 282 000e FAD0     		beq	.L9
 507:Core/Src/main.c ****     }
 283              		.loc 1 507 7 is_stmt 1 view .LVU68
 507:Core/Src/main.c ****     }
 284              		.loc 1 507 19 is_stmt 0 view .LVU69
 285 0010 024B     		ldr	r3, .L12+4
 286 0012 0122     		movs	r2, #1
 287 0014 1A70     		strb	r2, [r3]
 288              		.loc 1 510 1 view .LVU70
 289 0016 F6E7     		b	.L9
 290              	.L13:
 291              		.align	2
 292              	.L12:
 293 0018 00000000 		.word	.LANCHOR0
 294 001c 00000000 		.word	.LANCHOR1
 295              		.cfi_endproc
 296              	.LFE225:
 298              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 299              		.align	1
 300              		.global	HAL_ADC_ConvCpltCallback
 301              		.syntax unified
 302              		.thumb
 303              		.thumb_func
 304              		.fpu fpv4-sp-d16
 306              	HAL_ADC_ConvCpltCallback:
 307              	.LVL10:
 308              	.LFB227:
 511:Core/Src/main.c **** 
 512:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 513:Core/Src/main.c ****   
 514:Core/Src/main.c ****   if (htim == &htim13){
 515:Core/Src/main.c ****     pedalAverage = pedal_conversion(pedal0, pedal1);
 516:Core/Src/main.c ****     
 517:Core/Src/main.c ****     TxData[0] = pedalAverage & 0xFF;
 518:Core/Src/main.c ****     TxData[1] = pedalAverage >> 8;
 519:Core/Src/main.c ****     TxData[2] = 0;
 520:Core/Src/main.c ****     TxData[3] = 0;
 521:Core/Src/main.c ****     TxData[4] = switch_direction;
 522:Core/Src/main.c ****     TxData[5] = enableInverter;
 523:Core/Src/main.c ****     TxData[6] = command_torque_limit & 0xFF;
 524:Core/Src/main.c ****     TxData[7] = command_torque_limit >>8;
 525:Core/Src/main.c **** 
 526:Core/Src/main.c ****     HAL_CAN_AddTxMessage(&hcan1, &TxHeader2, TxData, &TxMailbox);
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****   }
 529:Core/Src/main.c ****   
 530:Core/Src/main.c ****   
 531:Core/Src/main.c ****   if (htim == &htim14){
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****     switch_cooling = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_12);
 534:Core/Src/main.c ****     switch_direction = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13);
 535:Core/Src/main.c **** 
 536:Core/Src/main.c ****     if (buzzerState==1){
 537:Core/Src/main.c ****       buzzerCounter++;
 538:Core/Src/main.c ****       if (buzzerCounter >= 20)   // buzzerCounter is being updated on a 10Hz interval, so after 20 
 539:Core/Src/main.c ****       {
ARM GAS  /tmp/cchEMpbF.s 			page 16


 540:Core/Src/main.c ****         buzzerState = 0;
 541:Core/Src/main.c ****         buzzerCounter = 0;
 542:Core/Src/main.c ****         enableInverter = 1;       // enable the inverter so that we can tell rinehart to turn inver
 543:Core/Src/main.c ****       }
 544:Core/Src/main.c ****     }
 545:Core/Src/main.c **** 
 546:Core/Src/main.c ****     TxData[0] = pedal1 & 0xFF;
 547:Core/Src/main.c ****     TxData[1] = pedal1 >> 8;
 548:Core/Src/main.c ****     TxData[2] = switch_cooling;
 549:Core/Src/main.c ****     TxData[3] = pedalAverage & 0xFF;
 550:Core/Src/main.c ****     TxData[4] = switch_direction;
 551:Core/Src/main.c ****     TxData[6] = pedal0 & 0xFF;
 552:Core/Src/main.c ****     TxData[5] = pedal0 >> 8;
 553:Core/Src/main.c ****     TxData[7] = pedalAverage >>8;
 554:Core/Src/main.c **** 
 555:Core/Src/main.c **** 
 556:Core/Src/main.c ****     HAL_CAN_AddTxMessage(&hcan1, &TxHeader, TxData, &TxMailbox);
 557:Core/Src/main.c **** 
 558:Core/Src/main.c ****     // HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_0);
 559:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, imdFault);
 560:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, bmsFault);
 561:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, switch_direction);
 562:Core/Src/main.c ****     // HAL_Delay(500);
 563:Core/Src/main.c ****   }
 564:Core/Src/main.c **** }
 565:Core/Src/main.c **** 
 566:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
 309              		.loc 1 566 55 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 567:Core/Src/main.c **** 
 568:Core/Src/main.c ****     pedal0 = adc_buf[2];
 314              		.loc 1 568 5 view .LVU72
 315              		.loc 1 568 21 is_stmt 0 view .LVU73
 316 0000 034B     		ldr	r3, .L15
 317 0002 9988     		ldrh	r1, [r3, #4]
 318              		.loc 1 568 12 view .LVU74
 319 0004 034A     		ldr	r2, .L15+4
 320 0006 1180     		strh	r1, [r2]	@ movhi
 569:Core/Src/main.c ****     pedal1 = adc_buf[3];
 321              		.loc 1 569 5 is_stmt 1 view .LVU75
 322              		.loc 1 569 21 is_stmt 0 view .LVU76
 323 0008 DA88     		ldrh	r2, [r3, #6]
 324              		.loc 1 569 12 view .LVU77
 325 000a 034B     		ldr	r3, .L15+8
 326 000c 1A80     		strh	r2, [r3]	@ movhi
 570:Core/Src/main.c **** 
 571:Core/Src/main.c **** }
 327              		.loc 1 571 1 view .LVU78
 328 000e 7047     		bx	lr
 329              	.L16:
 330              		.align	2
 331              	.L15:
 332 0010 00000000 		.word	adc_buf
 333 0014 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/cchEMpbF.s 			page 17


 334 0018 00000000 		.word	.LANCHOR3
 335              		.cfi_endproc
 336              	.LFE227:
 338              		.section	.text.pedal_conversion,"ax",%progbits
 339              		.align	1
 340              		.global	pedal_conversion
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv4-sp-d16
 346              	pedal_conversion:
 347              	.LVL11:
 348              	.LFB228:
 572:Core/Src/main.c **** 
 573:Core/Src/main.c **** uint16_t pedal_conversion(uint16_t pedal0, uint16_t pedal1){
 349              		.loc 1 573 60 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 574:Core/Src/main.c **** 
 575:Core/Src/main.c **** 
 576:Core/Src/main.c ****   // 
 577:Core/Src/main.c **** 
 578:Core/Src/main.c ****     pedalAverage = (pedal0 + pedal1) / 2;
 354              		.loc 1 578 5 view .LVU80
 355              		.loc 1 578 38 is_stmt 0 view .LVU81
 356 0000 0844     		add	r0, r0, r1
 357              	.LVL12:
 358              		.loc 1 578 18 view .LVU82
 359 0002 4008     		lsrs	r0, r0, #1
 360 0004 014B     		ldr	r3, .L18
 361 0006 1880     		strh	r0, [r3]	@ movhi
 579:Core/Src/main.c **** 
 580:Core/Src/main.c ****     // if (pow(pedal0 - pedalAverage, 2) > MAX_PEDAL_SKEW || 
 581:Core/Src/main.c ****     //     pow(pedal1 - pedalAverage, 2) > MAX_PEDAL_SKEW ){
 582:Core/Src/main.c ****     //     pedalAverage = 0;
 583:Core/Src/main.c ****     // }
 584:Core/Src/main.c **** 
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****     return pedalAverage;
 362              		.loc 1 586 5 is_stmt 1 view .LVU83
 587:Core/Src/main.c **** }
 363              		.loc 1 587 1 is_stmt 0 view .LVU84
 364 0008 7047     		bx	lr
 365              	.L19:
 366 000a 00BF     		.align	2
 367              	.L18:
 368 000c 00000000 		.word	.LANCHOR4
 369              		.cfi_endproc
 370              	.LFE228:
 372              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 373              		.align	1
 374              		.global	HAL_TIM_PeriodElapsedCallback
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
ARM GAS  /tmp/cchEMpbF.s 			page 18


 378              		.fpu fpv4-sp-d16
 380              	HAL_TIM_PeriodElapsedCallback:
 381              	.LVL13:
 382              	.LFB226:
 512:Core/Src/main.c ****   
 383              		.loc 1 512 60 is_stmt 1 view -0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 512:Core/Src/main.c ****   
 387              		.loc 1 512 60 is_stmt 0 view .LVU86
 388 0000 10B5     		push	{r4, lr}
 389              	.LCFI6:
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 4, -8
 392              		.cfi_offset 14, -4
 393 0002 0446     		mov	r4, r0
 514:Core/Src/main.c ****     pedalAverage = pedal_conversion(pedal0, pedal1);
 394              		.loc 1 514 3 is_stmt 1 view .LVU87
 514:Core/Src/main.c ****     pedalAverage = pedal_conversion(pedal0, pedal1);
 395              		.loc 1 514 6 is_stmt 0 view .LVU88
 396 0004 3C4B     		ldr	r3, .L28
 397 0006 9842     		cmp	r0, r3
 398 0008 03D0     		beq	.L25
 399              	.LVL14:
 400              	.L21:
 531:Core/Src/main.c **** 
 401              		.loc 1 531 3 is_stmt 1 view .LVU89
 531:Core/Src/main.c **** 
 402              		.loc 1 531 6 is_stmt 0 view .LVU90
 403 000a 3C4B     		ldr	r3, .L28+4
 404 000c 9C42     		cmp	r4, r3
 405 000e 20D0     		beq	.L26
 406              	.LVL15:
 407              	.L20:
 564:Core/Src/main.c **** 
 408              		.loc 1 564 1 view .LVU91
 409 0010 10BD     		pop	{r4, pc}
 410              	.LVL16:
 411              	.L25:
 515:Core/Src/main.c ****     
 412              		.loc 1 515 5 is_stmt 1 view .LVU92
 515:Core/Src/main.c ****     
 413              		.loc 1 515 20 is_stmt 0 view .LVU93
 414 0012 3B4B     		ldr	r3, .L28+8
 415 0014 1988     		ldrh	r1, [r3]
 416 0016 3B4B     		ldr	r3, .L28+12
 417 0018 1888     		ldrh	r0, [r3]
 418              	.LVL17:
 515:Core/Src/main.c ****     
 419              		.loc 1 515 20 view .LVU94
 420 001a FFF7FEFF 		bl	pedal_conversion
 421              	.LVL18:
 515:Core/Src/main.c ****     
 422              		.loc 1 515 18 view .LVU95
 423 001e 3A4B     		ldr	r3, .L28+16
 424 0020 1880     		strh	r0, [r3]	@ movhi
ARM GAS  /tmp/cchEMpbF.s 			page 19


 517:Core/Src/main.c ****     TxData[1] = pedalAverage >> 8;
 425              		.loc 1 517 5 is_stmt 1 view .LVU96
 517:Core/Src/main.c ****     TxData[1] = pedalAverage >> 8;
 426              		.loc 1 517 15 is_stmt 0 view .LVU97
 427 0022 3A4A     		ldr	r2, .L28+20
 428 0024 1070     		strb	r0, [r2]
 518:Core/Src/main.c ****     TxData[2] = 0;
 429              		.loc 1 518 5 is_stmt 1 view .LVU98
 518:Core/Src/main.c ****     TxData[2] = 0;
 430              		.loc 1 518 15 is_stmt 0 view .LVU99
 431 0026 000A     		lsrs	r0, r0, #8
 432 0028 5070     		strb	r0, [r2, #1]
 519:Core/Src/main.c ****     TxData[3] = 0;
 433              		.loc 1 519 5 is_stmt 1 view .LVU100
 519:Core/Src/main.c ****     TxData[3] = 0;
 434              		.loc 1 519 15 is_stmt 0 view .LVU101
 435 002a 0023     		movs	r3, #0
 436 002c 9370     		strb	r3, [r2, #2]
 520:Core/Src/main.c ****     TxData[4] = switch_direction;
 437              		.loc 1 520 5 is_stmt 1 view .LVU102
 520:Core/Src/main.c ****     TxData[4] = switch_direction;
 438              		.loc 1 520 15 is_stmt 0 view .LVU103
 439 002e D370     		strb	r3, [r2, #3]
 521:Core/Src/main.c ****     TxData[5] = enableInverter;
 440              		.loc 1 521 5 is_stmt 1 view .LVU104
 521:Core/Src/main.c ****     TxData[5] = enableInverter;
 441              		.loc 1 521 15 is_stmt 0 view .LVU105
 442 0030 374B     		ldr	r3, .L28+24
 443 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 444 0034 1371     		strb	r3, [r2, #4]
 522:Core/Src/main.c ****     TxData[6] = command_torque_limit & 0xFF;
 445              		.loc 1 522 5 is_stmt 1 view .LVU106
 522:Core/Src/main.c ****     TxData[6] = command_torque_limit & 0xFF;
 446              		.loc 1 522 15 is_stmt 0 view .LVU107
 447 0036 374B     		ldr	r3, .L28+28
 448 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 449 003a 5371     		strb	r3, [r2, #5]
 523:Core/Src/main.c ****     TxData[7] = command_torque_limit >>8;
 450              		.loc 1 523 5 is_stmt 1 view .LVU108
 523:Core/Src/main.c ****     TxData[7] = command_torque_limit >>8;
 451              		.loc 1 523 15 is_stmt 0 view .LVU109
 452 003c 364B     		ldr	r3, .L28+32
 453 003e 1B88     		ldrh	r3, [r3]
 454 0040 9371     		strb	r3, [r2, #6]
 524:Core/Src/main.c **** 
 455              		.loc 1 524 5 is_stmt 1 view .LVU110
 524:Core/Src/main.c **** 
 456              		.loc 1 524 15 is_stmt 0 view .LVU111
 457 0042 1B0A     		lsrs	r3, r3, #8
 458 0044 D371     		strb	r3, [r2, #7]
 526:Core/Src/main.c **** 
 459              		.loc 1 526 5 is_stmt 1 view .LVU112
 460 0046 354B     		ldr	r3, .L28+36
 461 0048 3549     		ldr	r1, .L28+40
 462 004a 3648     		ldr	r0, .L28+44
 463 004c FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 464              	.LVL19:
ARM GAS  /tmp/cchEMpbF.s 			page 20


 465 0050 DBE7     		b	.L21
 466              	.L26:
 533:Core/Src/main.c ****     switch_direction = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13);
 467              		.loc 1 533 5 view .LVU113
 533:Core/Src/main.c ****     switch_direction = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13);
 468              		.loc 1 533 22 is_stmt 0 view .LVU114
 469 0052 354C     		ldr	r4, .L28+48
 470              	.LVL20:
 533:Core/Src/main.c ****     switch_direction = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13);
 471              		.loc 1 533 22 view .LVU115
 472 0054 4FF48051 		mov	r1, #4096
 473 0058 2046     		mov	r0, r4
 474 005a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 475              	.LVL21:
 533:Core/Src/main.c ****     switch_direction = HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_13);
 476              		.loc 1 533 20 view .LVU116
 477 005e 334B     		ldr	r3, .L28+52
 478 0060 1870     		strb	r0, [r3]
 534:Core/Src/main.c **** 
 479              		.loc 1 534 5 is_stmt 1 view .LVU117
 534:Core/Src/main.c **** 
 480              		.loc 1 534 24 is_stmt 0 view .LVU118
 481 0062 4FF40051 		mov	r1, #8192
 482 0066 2046     		mov	r0, r4
 483 0068 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 484              	.LVL22:
 534:Core/Src/main.c **** 
 485              		.loc 1 534 22 view .LVU119
 486 006c 284B     		ldr	r3, .L28+24
 487 006e 1870     		strb	r0, [r3]
 536:Core/Src/main.c ****       buzzerCounter++;
 488              		.loc 1 536 5 is_stmt 1 view .LVU120
 536:Core/Src/main.c ****       buzzerCounter++;
 489              		.loc 1 536 20 is_stmt 0 view .LVU121
 490 0070 2F4B     		ldr	r3, .L28+56
 491 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 536:Core/Src/main.c ****       buzzerCounter++;
 492              		.loc 1 536 8 view .LVU122
 493 0074 012B     		cmp	r3, #1
 494 0076 2ED0     		beq	.L27
 495              	.L23:
 546:Core/Src/main.c ****     TxData[1] = pedal1 >> 8;
 496              		.loc 1 546 5 is_stmt 1 view .LVU123
 546:Core/Src/main.c ****     TxData[1] = pedal1 >> 8;
 497              		.loc 1 546 15 is_stmt 0 view .LVU124
 498 0078 214B     		ldr	r3, .L28+8
 499 007a 1B88     		ldrh	r3, [r3]
 500 007c 234A     		ldr	r2, .L28+20
 501 007e 1370     		strb	r3, [r2]
 547:Core/Src/main.c ****     TxData[2] = switch_cooling;
 502              		.loc 1 547 5 is_stmt 1 view .LVU125
 547:Core/Src/main.c ****     TxData[2] = switch_cooling;
 503              		.loc 1 547 15 is_stmt 0 view .LVU126
 504 0080 1B0A     		lsrs	r3, r3, #8
 505 0082 5370     		strb	r3, [r2, #1]
 548:Core/Src/main.c ****     TxData[3] = pedalAverage & 0xFF;
 506              		.loc 1 548 5 is_stmt 1 view .LVU127
ARM GAS  /tmp/cchEMpbF.s 			page 21


 548:Core/Src/main.c ****     TxData[3] = pedalAverage & 0xFF;
 507              		.loc 1 548 15 is_stmt 0 view .LVU128
 508 0084 294B     		ldr	r3, .L28+52
 509 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 510 0088 9370     		strb	r3, [r2, #2]
 549:Core/Src/main.c ****     TxData[4] = switch_direction;
 511              		.loc 1 549 5 is_stmt 1 view .LVU129
 549:Core/Src/main.c ****     TxData[4] = switch_direction;
 512              		.loc 1 549 15 is_stmt 0 view .LVU130
 513 008a 1F4B     		ldr	r3, .L28+16
 514 008c 1B88     		ldrh	r3, [r3]
 515 008e D370     		strb	r3, [r2, #3]
 550:Core/Src/main.c ****     TxData[6] = pedal0 & 0xFF;
 516              		.loc 1 550 5 is_stmt 1 view .LVU131
 550:Core/Src/main.c ****     TxData[6] = pedal0 & 0xFF;
 517              		.loc 1 550 15 is_stmt 0 view .LVU132
 518 0090 1071     		strb	r0, [r2, #4]
 551:Core/Src/main.c ****     TxData[5] = pedal0 >> 8;
 519              		.loc 1 551 5 is_stmt 1 view .LVU133
 551:Core/Src/main.c ****     TxData[5] = pedal0 >> 8;
 520              		.loc 1 551 15 is_stmt 0 view .LVU134
 521 0092 1C49     		ldr	r1, .L28+12
 522 0094 0988     		ldrh	r1, [r1]
 523 0096 9171     		strb	r1, [r2, #6]
 552:Core/Src/main.c ****     TxData[7] = pedalAverage >>8;
 524              		.loc 1 552 5 is_stmt 1 view .LVU135
 552:Core/Src/main.c ****     TxData[7] = pedalAverage >>8;
 525              		.loc 1 552 15 is_stmt 0 view .LVU136
 526 0098 090A     		lsrs	r1, r1, #8
 527 009a 5171     		strb	r1, [r2, #5]
 553:Core/Src/main.c **** 
 528              		.loc 1 553 5 is_stmt 1 view .LVU137
 553:Core/Src/main.c **** 
 529              		.loc 1 553 15 is_stmt 0 view .LVU138
 530 009c 1B0A     		lsrs	r3, r3, #8
 531 009e D371     		strb	r3, [r2, #7]
 556:Core/Src/main.c **** 
 532              		.loc 1 556 5 is_stmt 1 view .LVU139
 533 00a0 1E4B     		ldr	r3, .L28+36
 534 00a2 2449     		ldr	r1, .L28+60
 535 00a4 1F48     		ldr	r0, .L28+44
 536 00a6 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 537              	.LVL23:
 559:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10, bmsFault);
 538              		.loc 1 559 5 view .LVU140
 539 00aa 1F4C     		ldr	r4, .L28+48
 540 00ac 224B     		ldr	r3, .L28+64
 541 00ae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 542 00b0 0221     		movs	r1, #2
 543 00b2 2046     		mov	r0, r4
 544 00b4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 545              	.LVL24:
 560:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, switch_direction);
 546              		.loc 1 560 5 view .LVU141
 547 00b8 204B     		ldr	r3, .L28+68
 548 00ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 549 00bc 4FF48061 		mov	r1, #1024
ARM GAS  /tmp/cchEMpbF.s 			page 22


 550 00c0 1F48     		ldr	r0, .L28+72
 551 00c2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 552              	.LVL25:
 561:Core/Src/main.c ****     // HAL_Delay(500);
 553              		.loc 1 561 5 view .LVU142
 554 00c6 124B     		ldr	r3, .L28+24
 555 00c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 556 00ca 4FF48071 		mov	r1, #256
 557 00ce 2046     		mov	r0, r4
 558 00d0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 559              	.LVL26:
 564:Core/Src/main.c **** 
 560              		.loc 1 564 1 is_stmt 0 view .LVU143
 561 00d4 9CE7     		b	.L20
 562              	.L27:
 537:Core/Src/main.c ****       if (buzzerCounter >= 20)   // buzzerCounter is being updated on a 10Hz interval, so after 20 
 563              		.loc 1 537 7 is_stmt 1 view .LVU144
 537:Core/Src/main.c ****       if (buzzerCounter >= 20)   // buzzerCounter is being updated on a 10Hz interval, so after 20 
 564              		.loc 1 537 20 is_stmt 0 view .LVU145
 565 00d6 1B4A     		ldr	r2, .L28+76
 566 00d8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 567 00da 0133     		adds	r3, r3, #1
 568 00dc DBB2     		uxtb	r3, r3
 569 00de 1370     		strb	r3, [r2]
 538:Core/Src/main.c ****       {
 570              		.loc 1 538 7 is_stmt 1 view .LVU146
 538:Core/Src/main.c ****       {
 571              		.loc 1 538 10 is_stmt 0 view .LVU147
 572 00e0 132B     		cmp	r3, #19
 573 00e2 C9D9     		bls	.L23
 540:Core/Src/main.c ****         buzzerCounter = 0;
 574              		.loc 1 540 9 is_stmt 1 view .LVU148
 540:Core/Src/main.c ****         buzzerCounter = 0;
 575              		.loc 1 540 21 is_stmt 0 view .LVU149
 576 00e4 0023     		movs	r3, #0
 577 00e6 124A     		ldr	r2, .L28+56
 578 00e8 1370     		strb	r3, [r2]
 541:Core/Src/main.c ****         enableInverter = 1;       // enable the inverter so that we can tell rinehart to turn inver
 579              		.loc 1 541 9 is_stmt 1 view .LVU150
 541:Core/Src/main.c ****         enableInverter = 1;       // enable the inverter so that we can tell rinehart to turn inver
 580              		.loc 1 541 23 is_stmt 0 view .LVU151
 581 00ea 164A     		ldr	r2, .L28+76
 582 00ec 1370     		strb	r3, [r2]
 542:Core/Src/main.c ****       }
 583              		.loc 1 542 9 is_stmt 1 view .LVU152
 542:Core/Src/main.c ****       }
 584              		.loc 1 542 24 is_stmt 0 view .LVU153
 585 00ee 094B     		ldr	r3, .L28+28
 586 00f0 0122     		movs	r2, #1
 587 00f2 1A70     		strb	r2, [r3]
 588 00f4 C0E7     		b	.L23
 589              	.L29:
 590 00f6 00BF     		.align	2
 591              	.L28:
 592 00f8 00000000 		.word	htim13
 593 00fc 00000000 		.word	htim14
 594 0100 00000000 		.word	.LANCHOR3
ARM GAS  /tmp/cchEMpbF.s 			page 23


 595 0104 00000000 		.word	.LANCHOR2
 596 0108 00000000 		.word	.LANCHOR4
 597 010c 00000000 		.word	TxData
 598 0110 00000000 		.word	.LANCHOR5
 599 0114 00000000 		.word	.LANCHOR6
 600 0118 00000000 		.word	.LANCHOR7
 601 011c 00000000 		.word	TxMailbox
 602 0120 00000000 		.word	TxHeader2
 603 0124 00000000 		.word	hcan1
 604 0128 00040240 		.word	1073873920
 605 012c 00000000 		.word	.LANCHOR8
 606 0130 00000000 		.word	.LANCHOR1
 607 0134 00000000 		.word	TxHeader
 608 0138 00000000 		.word	.LANCHOR10
 609 013c 00000000 		.word	.LANCHOR11
 610 0140 00000240 		.word	1073872896
 611 0144 00000000 		.word	.LANCHOR9
 612              		.cfi_endproc
 613              	.LFE226:
 615              		.section	.text.Error_Handler,"ax",%progbits
 616              		.align	1
 617              		.global	Error_Handler
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
 621              		.fpu fpv4-sp-d16
 623              	Error_Handler:
 624              	.LFB229:
 588:Core/Src/main.c **** 
 589:Core/Src/main.c **** /* USER CODE END 4 */
 590:Core/Src/main.c **** 
 591:Core/Src/main.c **** /**
 592:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 593:Core/Src/main.c ****   * @retval None
 594:Core/Src/main.c ****   */
 595:Core/Src/main.c **** void Error_Handler(void)
 596:Core/Src/main.c **** {
 625              		.loc 1 596 1 is_stmt 1 view -0
 626              		.cfi_startproc
 627              		@ Volatile: function does not return.
 628              		@ args = 0, pretend = 0, frame = 0
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630              		@ link register save eliminated.
 597:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 598:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 599:Core/Src/main.c ****   __disable_irq();
 631              		.loc 1 599 3 view .LVU155
 632              	.LBB8:
 633              	.LBI8:
 634              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
ARM GAS  /tmp/cchEMpbF.s 			page 24


   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
ARM GAS  /tmp/cchEMpbF.s 			page 25


  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  /tmp/cchEMpbF.s 			page 26


 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 635              		.loc 2 140 27 view .LVU156
 636              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 637              		.loc 2 142 3 view .LVU157
 638              		.syntax unified
 639              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 640 0000 72B6     		cpsid i
 641              	@ 0 "" 2
 642              		.thumb
 643              		.syntax unified
 644              	.L31:
 645              	.LBE9:
 646              	.LBE8:
 600:Core/Src/main.c ****   while (1)
 647              		.loc 1 600 3 discriminator 1 view .LVU158
 601:Core/Src/main.c ****   {
 602:Core/Src/main.c ****   }
 648              		.loc 1 602 3 discriminator 1 view .LVU159
 600:Core/Src/main.c ****   while (1)
 649              		.loc 1 600 9 discriminator 1 view .LVU160
 650 0002 FEE7     		b	.L31
 651              		.cfi_endproc
 652              	.LFE229:
 654              		.section	.text.MX_CAN1_Init,"ax",%progbits
 655              		.align	1
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 659              		.fpu fpv4-sp-d16
 661              	MX_CAN1_Init:
 662              	.LFB219:
 304:Core/Src/main.c **** 
 663              		.loc 1 304 1 view -0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/cchEMpbF.s 			page 27


 668              	.LCFI7:
 669              		.cfi_def_cfa_offset 16
 670              		.cfi_offset 4, -16
 671              		.cfi_offset 5, -12
 672              		.cfi_offset 6, -8
 673              		.cfi_offset 14, -4
 313:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 674              		.loc 1 313 3 view .LVU162
 313:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 675              		.loc 1 313 18 is_stmt 0 view .LVU163
 676 0002 1F48     		ldr	r0, .L36
 677 0004 1F4B     		ldr	r3, .L36+4
 678 0006 0360     		str	r3, [r0]
 314:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 679              		.loc 1 314 3 is_stmt 1 view .LVU164
 314:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 680              		.loc 1 314 24 is_stmt 0 view .LVU165
 681 0008 1223     		movs	r3, #18
 682 000a 4360     		str	r3, [r0, #4]
 315:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 683              		.loc 1 315 3 is_stmt 1 view .LVU166
 315:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 684              		.loc 1 315 19 is_stmt 0 view .LVU167
 685 000c 0023     		movs	r3, #0
 686 000e 8360     		str	r3, [r0, #8]
 316:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_2TQ;
 687              		.loc 1 316 3 is_stmt 1 view .LVU168
 316:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_2TQ;
 688              		.loc 1 316 28 is_stmt 0 view .LVU169
 689 0010 C360     		str	r3, [r0, #12]
 317:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 690              		.loc 1 317 3 is_stmt 1 view .LVU170
 317:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 691              		.loc 1 317 23 is_stmt 0 view .LVU171
 692 0012 4FF48032 		mov	r2, #65536
 693 0016 0261     		str	r2, [r0, #16]
 318:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 694              		.loc 1 318 3 is_stmt 1 view .LVU172
 318:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 695              		.loc 1 318 23 is_stmt 0 view .LVU173
 696 0018 4FF48012 		mov	r2, #1048576
 697 001c 4261     		str	r2, [r0, #20]
 319:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 698              		.loc 1 319 3 is_stmt 1 view .LVU174
 319:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 699              		.loc 1 319 32 is_stmt 0 view .LVU175
 700 001e 0376     		strb	r3, [r0, #24]
 320:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = ENABLE;
 701              		.loc 1 320 3 is_stmt 1 view .LVU176
 320:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = ENABLE;
 702              		.loc 1 320 25 is_stmt 0 view .LVU177
 703 0020 4376     		strb	r3, [r0, #25]
 321:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 704              		.loc 1 321 3 is_stmt 1 view .LVU178
 321:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 705              		.loc 1 321 25 is_stmt 0 view .LVU179
 706 0022 0122     		movs	r2, #1
ARM GAS  /tmp/cchEMpbF.s 			page 28


 707 0024 8276     		strb	r2, [r0, #26]
 322:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 708              		.loc 1 322 3 is_stmt 1 view .LVU180
 322:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 709              		.loc 1 322 33 is_stmt 0 view .LVU181
 710 0026 C276     		strb	r2, [r0, #27]
 323:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 711              		.loc 1 323 3 is_stmt 1 view .LVU182
 323:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 712              		.loc 1 323 32 is_stmt 0 view .LVU183
 713 0028 0377     		strb	r3, [r0, #28]
 324:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 714              		.loc 1 324 3 is_stmt 1 view .LVU184
 324:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 715              		.loc 1 324 35 is_stmt 0 view .LVU185
 716 002a 4377     		strb	r3, [r0, #29]
 325:Core/Src/main.c ****   {
 717              		.loc 1 325 3 is_stmt 1 view .LVU186
 325:Core/Src/main.c ****   {
 718              		.loc 1 325 7 is_stmt 0 view .LVU187
 719 002c FFF7FEFF 		bl	HAL_CAN_Init
 720              	.LVL27:
 325:Core/Src/main.c ****   {
 721              		.loc 1 325 6 view .LVU188
 722 0030 20BB     		cbnz	r0, .L35
 331:Core/Src/main.c ****   filter0.FilterIdLow = 0x000;
 723              		.loc 1 331 3 is_stmt 1 view .LVU189
 331:Core/Src/main.c ****   filter0.FilterIdLow = 0x000;
 724              		.loc 1 331 24 is_stmt 0 view .LVU190
 725 0032 1549     		ldr	r1, .L36+8
 726 0034 4FF48253 		mov	r3, #4160
 727 0038 0B60     		str	r3, [r1]
 332:Core/Src/main.c ****   filter0.FilterMaskIdHigh = 0x082 << 5;
 728              		.loc 1 332 3 is_stmt 1 view .LVU191
 332:Core/Src/main.c ****   filter0.FilterMaskIdHigh = 0x082 << 5;
 729              		.loc 1 332 23 is_stmt 0 view .LVU192
 730 003a 0024     		movs	r4, #0
 731 003c 4C60     		str	r4, [r1, #4]
 333:Core/Src/main.c ****   filter0.FilterMaskIdLow = 0x000;
 732              		.loc 1 333 3 is_stmt 1 view .LVU193
 333:Core/Src/main.c ****   filter0.FilterMaskIdLow = 0x000;
 733              		.loc 1 333 28 is_stmt 0 view .LVU194
 734 003e 8B60     		str	r3, [r1, #8]
 334:Core/Src/main.c ****   filter0.FilterFIFOAssignment =  CAN_RX_FIFO0;
 735              		.loc 1 334 3 is_stmt 1 view .LVU195
 334:Core/Src/main.c ****   filter0.FilterFIFOAssignment =  CAN_RX_FIFO0;
 736              		.loc 1 334 27 is_stmt 0 view .LVU196
 737 0040 CC60     		str	r4, [r1, #12]
 335:Core/Src/main.c ****   filter0.FilterBank = 1;
 738              		.loc 1 335 3 is_stmt 1 view .LVU197
 335:Core/Src/main.c ****   filter0.FilterBank = 1;
 739              		.loc 1 335 32 is_stmt 0 view .LVU198
 740 0042 0C61     		str	r4, [r1, #16]
 336:Core/Src/main.c ****   filter0.FilterMode = CAN_FILTERMODE_IDMASK;
 741              		.loc 1 336 3 is_stmt 1 view .LVU199
 336:Core/Src/main.c ****   filter0.FilterMode = CAN_FILTERMODE_IDMASK;
 742              		.loc 1 336 22 is_stmt 0 view .LVU200
ARM GAS  /tmp/cchEMpbF.s 			page 29


 743 0044 0125     		movs	r5, #1
 744 0046 4D61     		str	r5, [r1, #20]
 337:Core/Src/main.c ****   filter0.FilterScale = CAN_FILTERSCALE_32BIT;
 745              		.loc 1 337 3 is_stmt 1 view .LVU201
 337:Core/Src/main.c ****   filter0.FilterScale = CAN_FILTERSCALE_32BIT;
 746              		.loc 1 337 22 is_stmt 0 view .LVU202
 747 0048 8C61     		str	r4, [r1, #24]
 338:Core/Src/main.c ****   filter0.FilterActivation = ENABLE;
 748              		.loc 1 338 3 is_stmt 1 view .LVU203
 338:Core/Src/main.c ****   filter0.FilterActivation = ENABLE;
 749              		.loc 1 338 23 is_stmt 0 view .LVU204
 750 004a CD61     		str	r5, [r1, #28]
 339:Core/Src/main.c ****   filter0.SlaveStartFilterBank = 0;
 751              		.loc 1 339 3 is_stmt 1 view .LVU205
 339:Core/Src/main.c ****   filter0.SlaveStartFilterBank = 0;
 752              		.loc 1 339 28 is_stmt 0 view .LVU206
 753 004c 0D62     		str	r5, [r1, #32]
 340:Core/Src/main.c **** 
 754              		.loc 1 340 3 is_stmt 1 view .LVU207
 340:Core/Src/main.c **** 
 755              		.loc 1 340 32 is_stmt 0 view .LVU208
 756 004e 4C62     		str	r4, [r1, #36]
 342:Core/Src/main.c **** 
 757              		.loc 1 342 3 is_stmt 1 view .LVU209
 758 0050 0B4E     		ldr	r6, .L36
 759 0052 3046     		mov	r0, r6
 760 0054 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 761              	.LVL28:
 345:Core/Src/main.c ****   filter1.FilterIdLow = 0x000;
 762              		.loc 1 345 3 view .LVU210
 345:Core/Src/main.c ****   filter1.FilterIdLow = 0x000;
 763              		.loc 1 345 24 is_stmt 0 view .LVU211
 764 0058 0C49     		ldr	r1, .L36+12
 765 005a 4FF48753 		mov	r3, #4320
 766 005e 0B60     		str	r3, [r1]
 346:Core/Src/main.c ****   filter1.FilterMaskIdHigh = 0x087 << 5;
 767              		.loc 1 346 3 is_stmt 1 view .LVU212
 346:Core/Src/main.c ****   filter1.FilterMaskIdHigh = 0x087 << 5;
 768              		.loc 1 346 23 is_stmt 0 view .LVU213
 769 0060 4C60     		str	r4, [r1, #4]
 347:Core/Src/main.c ****   filter1.FilterMaskIdLow = 0x000;
 770              		.loc 1 347 3 is_stmt 1 view .LVU214
 347:Core/Src/main.c ****   filter1.FilterMaskIdLow = 0x000;
 771              		.loc 1 347 28 is_stmt 0 view .LVU215
 772 0062 8B60     		str	r3, [r1, #8]
 348:Core/Src/main.c ****   filter1.FilterFIFOAssignment =  CAN_RX_FIFO0;
 773              		.loc 1 348 3 is_stmt 1 view .LVU216
 348:Core/Src/main.c ****   filter1.FilterFIFOAssignment =  CAN_RX_FIFO0;
 774              		.loc 1 348 27 is_stmt 0 view .LVU217
 775 0064 CC60     		str	r4, [r1, #12]
 349:Core/Src/main.c ****   filter1.FilterBank = 2;
 776              		.loc 1 349 3 is_stmt 1 view .LVU218
 349:Core/Src/main.c ****   filter1.FilterBank = 2;
 777              		.loc 1 349 32 is_stmt 0 view .LVU219
 778 0066 0C61     		str	r4, [r1, #16]
 350:Core/Src/main.c ****   filter1.FilterMode = CAN_FILTERMODE_IDMASK;
 779              		.loc 1 350 3 is_stmt 1 view .LVU220
ARM GAS  /tmp/cchEMpbF.s 			page 30


 350:Core/Src/main.c ****   filter1.FilterMode = CAN_FILTERMODE_IDMASK;
 780              		.loc 1 350 22 is_stmt 0 view .LVU221
 781 0068 0223     		movs	r3, #2
 782 006a 4B61     		str	r3, [r1, #20]
 351:Core/Src/main.c ****   filter1.FilterScale = CAN_FILTERSCALE_32BIT;
 783              		.loc 1 351 3 is_stmt 1 view .LVU222
 351:Core/Src/main.c ****   filter1.FilterScale = CAN_FILTERSCALE_32BIT;
 784              		.loc 1 351 22 is_stmt 0 view .LVU223
 785 006c 8C61     		str	r4, [r1, #24]
 352:Core/Src/main.c ****   filter1.FilterActivation = ENABLE;
 786              		.loc 1 352 3 is_stmt 1 view .LVU224
 352:Core/Src/main.c ****   filter1.FilterActivation = ENABLE;
 787              		.loc 1 352 23 is_stmt 0 view .LVU225
 788 006e CD61     		str	r5, [r1, #28]
 353:Core/Src/main.c ****   filter1.SlaveStartFilterBank = 0;
 789              		.loc 1 353 3 is_stmt 1 view .LVU226
 353:Core/Src/main.c ****   filter1.SlaveStartFilterBank = 0;
 790              		.loc 1 353 28 is_stmt 0 view .LVU227
 791 0070 0D62     		str	r5, [r1, #32]
 354:Core/Src/main.c **** 
 792              		.loc 1 354 3 is_stmt 1 view .LVU228
 354:Core/Src/main.c **** 
 793              		.loc 1 354 32 is_stmt 0 view .LVU229
 794 0072 4C62     		str	r4, [r1, #36]
 356:Core/Src/main.c **** 
 795              		.loc 1 356 3 is_stmt 1 view .LVU230
 796 0074 3046     		mov	r0, r6
 797 0076 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 798              	.LVL29:
 360:Core/Src/main.c **** 
 799              		.loc 1 360 1 is_stmt 0 view .LVU231
 800 007a 70BD     		pop	{r4, r5, r6, pc}
 801              	.L35:
 327:Core/Src/main.c ****   }
 802              		.loc 1 327 5 is_stmt 1 view .LVU232
 803 007c FFF7FEFF 		bl	Error_Handler
 804              	.LVL30:
 805              	.L37:
 806              		.align	2
 807              	.L36:
 808 0080 00000000 		.word	hcan1
 809 0084 00640040 		.word	1073767424
 810 0088 00000000 		.word	filter0
 811 008c 00000000 		.word	filter1
 812              		.cfi_endproc
 813              	.LFE219:
 815              		.section	.text.MX_ADC1_Init,"ax",%progbits
 816              		.align	1
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 820              		.fpu fpv4-sp-d16
 822              	MX_ADC1_Init:
 823              	.LFB218:
 230:Core/Src/main.c **** 
 824              		.loc 1 230 1 view -0
 825              		.cfi_startproc
ARM GAS  /tmp/cchEMpbF.s 			page 31


 826              		@ args = 0, pretend = 0, frame = 16
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828 0000 00B5     		push	{lr}
 829              	.LCFI8:
 830              		.cfi_def_cfa_offset 4
 831              		.cfi_offset 14, -4
 832 0002 85B0     		sub	sp, sp, #20
 833              	.LCFI9:
 834              		.cfi_def_cfa_offset 24
 236:Core/Src/main.c **** 
 835              		.loc 1 236 3 view .LVU234
 236:Core/Src/main.c **** 
 836              		.loc 1 236 26 is_stmt 0 view .LVU235
 837 0004 0023     		movs	r3, #0
 838 0006 0093     		str	r3, [sp]
 839 0008 0193     		str	r3, [sp, #4]
 840 000a 0293     		str	r3, [sp, #8]
 841 000c 0393     		str	r3, [sp, #12]
 243:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 842              		.loc 1 243 3 is_stmt 1 view .LVU236
 243:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 843              		.loc 1 243 18 is_stmt 0 view .LVU237
 844 000e 2548     		ldr	r0, .L50
 845 0010 254A     		ldr	r2, .L50+4
 846 0012 0260     		str	r2, [r0]
 244:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 847              		.loc 1 244 3 is_stmt 1 view .LVU238
 244:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 848              		.loc 1 244 29 is_stmt 0 view .LVU239
 849 0014 4FF48032 		mov	r2, #65536
 850 0018 4260     		str	r2, [r0, #4]
 245:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ENABLE;
 851              		.loc 1 245 3 is_stmt 1 view .LVU240
 245:Core/Src/main.c ****   hadc1.Init.ScanConvMode = ENABLE;
 852              		.loc 1 245 25 is_stmt 0 view .LVU241
 853 001a 8360     		str	r3, [r0, #8]
 246:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 854              		.loc 1 246 3 is_stmt 1 view .LVU242
 246:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 855              		.loc 1 246 27 is_stmt 0 view .LVU243
 856 001c 0122     		movs	r2, #1
 857 001e 0261     		str	r2, [r0, #16]
 247:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 858              		.loc 1 247 3 is_stmt 1 view .LVU244
 247:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 859              		.loc 1 247 33 is_stmt 0 view .LVU245
 860 0020 0276     		strb	r2, [r0, #24]
 248:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 861              		.loc 1 248 3 is_stmt 1 view .LVU246
 248:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 862              		.loc 1 248 36 is_stmt 0 view .LVU247
 863 0022 80F82030 		strb	r3, [r0, #32]
 249:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 864              		.loc 1 249 3 is_stmt 1 view .LVU248
 249:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 865              		.loc 1 249 35 is_stmt 0 view .LVU249
 866 0026 C362     		str	r3, [r0, #44]
ARM GAS  /tmp/cchEMpbF.s 			page 32


 250:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 867              		.loc 1 250 3 is_stmt 1 view .LVU250
 250:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 868              		.loc 1 250 31 is_stmt 0 view .LVU251
 869 0028 2049     		ldr	r1, .L50+8
 870 002a 8162     		str	r1, [r0, #40]
 251:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 4;
 871              		.loc 1 251 3 is_stmt 1 view .LVU252
 251:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 4;
 872              		.loc 1 251 24 is_stmt 0 view .LVU253
 873 002c C360     		str	r3, [r0, #12]
 252:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 874              		.loc 1 252 3 is_stmt 1 view .LVU254
 252:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 875              		.loc 1 252 30 is_stmt 0 view .LVU255
 876 002e 0423     		movs	r3, #4
 877 0030 C361     		str	r3, [r0, #28]
 253:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 878              		.loc 1 253 3 is_stmt 1 view .LVU256
 253:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 879              		.loc 1 253 36 is_stmt 0 view .LVU257
 880 0032 80F83020 		strb	r2, [r0, #48]
 254:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 881              		.loc 1 254 3 is_stmt 1 view .LVU258
 254:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 882              		.loc 1 254 27 is_stmt 0 view .LVU259
 883 0036 4261     		str	r2, [r0, #20]
 255:Core/Src/main.c ****   {
 884              		.loc 1 255 3 is_stmt 1 view .LVU260
 255:Core/Src/main.c ****   {
 885              		.loc 1 255 7 is_stmt 0 view .LVU261
 886 0038 FFF7FEFF 		bl	HAL_ADC_Init
 887              	.LVL31:
 255:Core/Src/main.c ****   {
 888              		.loc 1 255 6 view .LVU262
 889 003c 40BB     		cbnz	r0, .L45
 261:Core/Src/main.c ****   sConfig.Rank = 1;
 890              		.loc 1 261 3 is_stmt 1 view .LVU263
 261:Core/Src/main.c ****   sConfig.Rank = 1;
 891              		.loc 1 261 19 is_stmt 0 view .LVU264
 892 003e 0423     		movs	r3, #4
 893 0040 0093     		str	r3, [sp]
 262:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 894              		.loc 1 262 3 is_stmt 1 view .LVU265
 262:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 895              		.loc 1 262 16 is_stmt 0 view .LVU266
 896 0042 0123     		movs	r3, #1
 897 0044 0193     		str	r3, [sp, #4]
 263:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 898              		.loc 1 263 3 is_stmt 1 view .LVU267
 263:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 899              		.loc 1 263 24 is_stmt 0 view .LVU268
 900 0046 0023     		movs	r3, #0
 901 0048 0293     		str	r3, [sp, #8]
 264:Core/Src/main.c ****   {
 902              		.loc 1 264 3 is_stmt 1 view .LVU269
 264:Core/Src/main.c ****   {
ARM GAS  /tmp/cchEMpbF.s 			page 33


 903              		.loc 1 264 7 is_stmt 0 view .LVU270
 904 004a 6946     		mov	r1, sp
 905 004c 1548     		ldr	r0, .L50
 906 004e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 907              	.LVL32:
 264:Core/Src/main.c ****   {
 908              		.loc 1 264 6 view .LVU271
 909 0052 F8B9     		cbnz	r0, .L46
 270:Core/Src/main.c ****   sConfig.Rank = 2;
 910              		.loc 1 270 3 is_stmt 1 view .LVU272
 270:Core/Src/main.c ****   sConfig.Rank = 2;
 911              		.loc 1 270 19 is_stmt 0 view .LVU273
 912 0054 0523     		movs	r3, #5
 913 0056 0093     		str	r3, [sp]
 271:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 914              		.loc 1 271 3 is_stmt 1 view .LVU274
 271:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 915              		.loc 1 271 16 is_stmt 0 view .LVU275
 916 0058 0223     		movs	r3, #2
 917 005a 0193     		str	r3, [sp, #4]
 272:Core/Src/main.c ****   {
 918              		.loc 1 272 3 is_stmt 1 view .LVU276
 272:Core/Src/main.c ****   {
 919              		.loc 1 272 7 is_stmt 0 view .LVU277
 920 005c 6946     		mov	r1, sp
 921 005e 1148     		ldr	r0, .L50
 922 0060 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 923              	.LVL33:
 272:Core/Src/main.c ****   {
 924              		.loc 1 272 6 view .LVU278
 925 0064 C0B9     		cbnz	r0, .L47
 278:Core/Src/main.c ****   sConfig.Rank = 3;
 926              		.loc 1 278 3 is_stmt 1 view .LVU279
 278:Core/Src/main.c ****   sConfig.Rank = 3;
 927              		.loc 1 278 19 is_stmt 0 view .LVU280
 928 0066 0623     		movs	r3, #6
 929 0068 0093     		str	r3, [sp]
 279:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 930              		.loc 1 279 3 is_stmt 1 view .LVU281
 279:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 931              		.loc 1 279 16 is_stmt 0 view .LVU282
 932 006a 0323     		movs	r3, #3
 933 006c 0193     		str	r3, [sp, #4]
 280:Core/Src/main.c ****   {
 934              		.loc 1 280 3 is_stmt 1 view .LVU283
 280:Core/Src/main.c ****   {
 935              		.loc 1 280 7 is_stmt 0 view .LVU284
 936 006e 6946     		mov	r1, sp
 937 0070 0C48     		ldr	r0, .L50
 938 0072 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 939              	.LVL34:
 280:Core/Src/main.c ****   {
 940              		.loc 1 280 6 view .LVU285
 941 0076 88B9     		cbnz	r0, .L48
 286:Core/Src/main.c ****   sConfig.Rank = 4;
 942              		.loc 1 286 3 is_stmt 1 view .LVU286
 286:Core/Src/main.c ****   sConfig.Rank = 4;
ARM GAS  /tmp/cchEMpbF.s 			page 34


 943              		.loc 1 286 19 is_stmt 0 view .LVU287
 944 0078 0723     		movs	r3, #7
 945 007a 0093     		str	r3, [sp]
 287:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 946              		.loc 1 287 3 is_stmt 1 view .LVU288
 287:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 947              		.loc 1 287 16 is_stmt 0 view .LVU289
 948 007c 0423     		movs	r3, #4
 949 007e 0193     		str	r3, [sp, #4]
 288:Core/Src/main.c ****   {
 950              		.loc 1 288 3 is_stmt 1 view .LVU290
 288:Core/Src/main.c ****   {
 951              		.loc 1 288 7 is_stmt 0 view .LVU291
 952 0080 6946     		mov	r1, sp
 953 0082 0848     		ldr	r0, .L50
 954 0084 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 955              	.LVL35:
 288:Core/Src/main.c ****   {
 956              		.loc 1 288 6 view .LVU292
 957 0088 50B9     		cbnz	r0, .L49
 296:Core/Src/main.c **** 
 958              		.loc 1 296 1 view .LVU293
 959 008a 05B0     		add	sp, sp, #20
 960              	.LCFI10:
 961              		.cfi_remember_state
 962              		.cfi_def_cfa_offset 4
 963              		@ sp needed
 964 008c 5DF804FB 		ldr	pc, [sp], #4
 965              	.L45:
 966              	.LCFI11:
 967              		.cfi_restore_state
 257:Core/Src/main.c ****   }
 968              		.loc 1 257 5 is_stmt 1 view .LVU294
 969 0090 FFF7FEFF 		bl	Error_Handler
 970              	.LVL36:
 971              	.L46:
 266:Core/Src/main.c ****   }
 972              		.loc 1 266 5 view .LVU295
 973 0094 FFF7FEFF 		bl	Error_Handler
 974              	.LVL37:
 975              	.L47:
 274:Core/Src/main.c ****   }
 976              		.loc 1 274 5 view .LVU296
 977 0098 FFF7FEFF 		bl	Error_Handler
 978              	.LVL38:
 979              	.L48:
 282:Core/Src/main.c ****   }
 980              		.loc 1 282 5 view .LVU297
 981 009c FFF7FEFF 		bl	Error_Handler
 982              	.LVL39:
 983              	.L49:
 290:Core/Src/main.c ****   }
 984              		.loc 1 290 5 view .LVU298
 985 00a0 FFF7FEFF 		bl	Error_Handler
 986              	.LVL40:
 987              	.L51:
 988              		.align	2
ARM GAS  /tmp/cchEMpbF.s 			page 35


 989              	.L50:
 990 00a4 00000000 		.word	hadc1
 991 00a8 00200140 		.word	1073815552
 992 00ac 0100000F 		.word	251658241
 993              		.cfi_endproc
 994              	.LFE218:
 996              		.section	.text.MX_TIM14_Init,"ax",%progbits
 997              		.align	1
 998              		.syntax unified
 999              		.thumb
 1000              		.thumb_func
 1001              		.fpu fpv4-sp-d16
 1003              	MX_TIM14_Init:
 1004              	.LFB221:
 399:Core/Src/main.c **** 
 1005              		.loc 1 399 1 view -0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 0
 1008              		@ frame_needed = 0, uses_anonymous_args = 0
 1009 0000 08B5     		push	{r3, lr}
 1010              	.LCFI12:
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 3, -8
 1013              		.cfi_offset 14, -4
 408:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 1014              		.loc 1 408 3 view .LVU300
 408:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 1015              		.loc 1 408 19 is_stmt 0 view .LVU301
 1016 0002 0948     		ldr	r0, .L56
 1017 0004 094B     		ldr	r3, .L56+4
 1018 0006 0360     		str	r3, [r0]
 409:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 1019              		.loc 1 409 3 is_stmt 1 view .LVU302
 409:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 1020              		.loc 1 409 25 is_stmt 0 view .LVU303
 1021 0008 42F22733 		movw	r3, #8999
 1022 000c 4360     		str	r3, [r0, #4]
 410:Core/Src/main.c ****   htim14.Init.Period = 1000-1;
 1023              		.loc 1 410 3 is_stmt 1 view .LVU304
 410:Core/Src/main.c ****   htim14.Init.Period = 1000-1;
 1024              		.loc 1 410 27 is_stmt 0 view .LVU305
 1025 000e 0023     		movs	r3, #0
 1026 0010 8360     		str	r3, [r0, #8]
 411:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1027              		.loc 1 411 3 is_stmt 1 view .LVU306
 411:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1028              		.loc 1 411 22 is_stmt 0 view .LVU307
 1029 0012 40F2E732 		movw	r2, #999
 1030 0016 C260     		str	r2, [r0, #12]
 412:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1031              		.loc 1 412 3 is_stmt 1 view .LVU308
 412:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1032              		.loc 1 412 29 is_stmt 0 view .LVU309
 1033 0018 0361     		str	r3, [r0, #16]
 413:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 1034              		.loc 1 413 3 is_stmt 1 view .LVU310
 413:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
ARM GAS  /tmp/cchEMpbF.s 			page 36


 1035              		.loc 1 413 33 is_stmt 0 view .LVU311
 1036 001a 8361     		str	r3, [r0, #24]
 414:Core/Src/main.c ****   {
 1037              		.loc 1 414 3 is_stmt 1 view .LVU312
 414:Core/Src/main.c ****   {
 1038              		.loc 1 414 7 is_stmt 0 view .LVU313
 1039 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1040              	.LVL41:
 414:Core/Src/main.c ****   {
 1041              		.loc 1 414 6 view .LVU314
 1042 0020 00B9     		cbnz	r0, .L55
 422:Core/Src/main.c **** 
 1043              		.loc 1 422 1 view .LVU315
 1044 0022 08BD     		pop	{r3, pc}
 1045              	.L55:
 416:Core/Src/main.c ****   }
 1046              		.loc 1 416 5 is_stmt 1 view .LVU316
 1047 0024 FFF7FEFF 		bl	Error_Handler
 1048              	.LVL42:
 1049              	.L57:
 1050              		.align	2
 1051              	.L56:
 1052 0028 00000000 		.word	htim14
 1053 002c 00200040 		.word	1073750016
 1054              		.cfi_endproc
 1055              	.LFE221:
 1057              		.section	.text.MX_TIM13_Init,"ax",%progbits
 1058              		.align	1
 1059              		.syntax unified
 1060              		.thumb
 1061              		.thumb_func
 1062              		.fpu fpv4-sp-d16
 1064              	MX_TIM13_Init:
 1065              	.LFB220:
 368:Core/Src/main.c **** 
 1066              		.loc 1 368 1 view -0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 0
 1069              		@ frame_needed = 0, uses_anonymous_args = 0
 1070 0000 08B5     		push	{r3, lr}
 1071              	.LCFI13:
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 3, -8
 1074              		.cfi_offset 14, -4
 377:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 1075              		.loc 1 377 3 view .LVU318
 377:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 1076              		.loc 1 377 19 is_stmt 0 view .LVU319
 1077 0002 0948     		ldr	r0, .L62
 1078 0004 094B     		ldr	r3, .L62+4
 1079 0006 0360     		str	r3, [r0]
 378:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 1080              		.loc 1 378 3 is_stmt 1 view .LVU320
 378:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 1081              		.loc 1 378 25 is_stmt 0 view .LVU321
 1082 0008 42F22733 		movw	r3, #8999
 1083 000c 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/cchEMpbF.s 			page 37


 379:Core/Src/main.c ****   htim13.Init.Period = 500-1;
 1084              		.loc 1 379 3 is_stmt 1 view .LVU322
 379:Core/Src/main.c ****   htim13.Init.Period = 500-1;
 1085              		.loc 1 379 27 is_stmt 0 view .LVU323
 1086 000e 0023     		movs	r3, #0
 1087 0010 8360     		str	r3, [r0, #8]
 380:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1088              		.loc 1 380 3 is_stmt 1 view .LVU324
 380:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1089              		.loc 1 380 22 is_stmt 0 view .LVU325
 1090 0012 40F2F312 		movw	r2, #499
 1091 0016 C260     		str	r2, [r0, #12]
 381:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1092              		.loc 1 381 3 is_stmt 1 view .LVU326
 381:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1093              		.loc 1 381 29 is_stmt 0 view .LVU327
 1094 0018 0361     		str	r3, [r0, #16]
 382:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 1095              		.loc 1 382 3 is_stmt 1 view .LVU328
 382:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 1096              		.loc 1 382 33 is_stmt 0 view .LVU329
 1097 001a 8361     		str	r3, [r0, #24]
 383:Core/Src/main.c ****   {
 1098              		.loc 1 383 3 is_stmt 1 view .LVU330
 383:Core/Src/main.c ****   {
 1099              		.loc 1 383 7 is_stmt 0 view .LVU331
 1100 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1101              	.LVL43:
 383:Core/Src/main.c ****   {
 1102              		.loc 1 383 6 view .LVU332
 1103 0020 00B9     		cbnz	r0, .L61
 391:Core/Src/main.c **** 
 1104              		.loc 1 391 1 view .LVU333
 1105 0022 08BD     		pop	{r3, pc}
 1106              	.L61:
 385:Core/Src/main.c ****   }
 1107              		.loc 1 385 5 is_stmt 1 view .LVU334
 1108 0024 FFF7FEFF 		bl	Error_Handler
 1109              	.LVL44:
 1110              	.L63:
 1111              		.align	2
 1112              	.L62:
 1113 0028 00000000 		.word	htim13
 1114 002c 001C0040 		.word	1073748992
 1115              		.cfi_endproc
 1116              	.LFE220:
 1118              		.section	.text.SystemClock_Config,"ax",%progbits
 1119              		.align	1
 1120              		.global	SystemClock_Config
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1124              		.fpu fpv4-sp-d16
 1126              	SystemClock_Config:
 1127              	.LFB217:
 184:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1128              		.loc 1 184 1 view -0
ARM GAS  /tmp/cchEMpbF.s 			page 38


 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 80
 1131              		@ frame_needed = 0, uses_anonymous_args = 0
 1132 0000 00B5     		push	{lr}
 1133              	.LCFI14:
 1134              		.cfi_def_cfa_offset 4
 1135              		.cfi_offset 14, -4
 1136 0002 95B0     		sub	sp, sp, #84
 1137              	.LCFI15:
 1138              		.cfi_def_cfa_offset 88
 185:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1139              		.loc 1 185 3 view .LVU336
 185:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1140              		.loc 1 185 22 is_stmt 0 view .LVU337
 1141 0004 3422     		movs	r2, #52
 1142 0006 0021     		movs	r1, #0
 1143 0008 07A8     		add	r0, sp, #28
 1144 000a FFF7FEFF 		bl	memset
 1145              	.LVL45:
 186:Core/Src/main.c **** 
 1146              		.loc 1 186 3 is_stmt 1 view .LVU338
 186:Core/Src/main.c **** 
 1147              		.loc 1 186 22 is_stmt 0 view .LVU339
 1148 000e 0023     		movs	r3, #0
 1149 0010 0293     		str	r3, [sp, #8]
 1150 0012 0393     		str	r3, [sp, #12]
 1151 0014 0493     		str	r3, [sp, #16]
 1152 0016 0593     		str	r3, [sp, #20]
 1153 0018 0693     		str	r3, [sp, #24]
 190:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1154              		.loc 1 190 3 is_stmt 1 view .LVU340
 1155              	.LBB10:
 190:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1156              		.loc 1 190 3 view .LVU341
 1157 001a 0093     		str	r3, [sp]
 190:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1158              		.loc 1 190 3 view .LVU342
 1159 001c 1E4A     		ldr	r2, .L70
 1160 001e 116C     		ldr	r1, [r2, #64]
 1161 0020 41F08051 		orr	r1, r1, #268435456
 1162 0024 1164     		str	r1, [r2, #64]
 190:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1163              		.loc 1 190 3 view .LVU343
 1164 0026 126C     		ldr	r2, [r2, #64]
 1165 0028 02F08052 		and	r2, r2, #268435456
 1166 002c 0092     		str	r2, [sp]
 190:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1167              		.loc 1 190 3 view .LVU344
 1168 002e 009A     		ldr	r2, [sp]
 1169              	.LBE10:
 190:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1170              		.loc 1 190 3 view .LVU345
 191:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1171              		.loc 1 191 3 view .LVU346
 1172              	.LBB11:
 191:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1173              		.loc 1 191 3 view .LVU347
ARM GAS  /tmp/cchEMpbF.s 			page 39


 1174 0030 0193     		str	r3, [sp, #4]
 191:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1175              		.loc 1 191 3 view .LVU348
 1176 0032 1A4A     		ldr	r2, .L70+4
 1177 0034 1168     		ldr	r1, [r2]
 1178 0036 41F44041 		orr	r1, r1, #49152
 1179 003a 1160     		str	r1, [r2]
 191:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1180              		.loc 1 191 3 view .LVU349
 1181 003c 1268     		ldr	r2, [r2]
 1182 003e 02F44042 		and	r2, r2, #49152
 1183 0042 0192     		str	r2, [sp, #4]
 191:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1184              		.loc 1 191 3 view .LVU350
 1185 0044 019A     		ldr	r2, [sp, #4]
 1186              	.LBE11:
 191:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1187              		.loc 1 191 3 view .LVU351
 195:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1188              		.loc 1 195 3 view .LVU352
 195:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1189              		.loc 1 195 36 is_stmt 0 view .LVU353
 1190 0046 0222     		movs	r2, #2
 1191 0048 0792     		str	r2, [sp, #28]
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1192              		.loc 1 196 3 is_stmt 1 view .LVU354
 196:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1193              		.loc 1 196 30 is_stmt 0 view .LVU355
 1194 004a 0121     		movs	r1, #1
 1195 004c 0A91     		str	r1, [sp, #40]
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1196              		.loc 1 197 3 is_stmt 1 view .LVU356
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1197              		.loc 1 197 41 is_stmt 0 view .LVU357
 1198 004e 1021     		movs	r1, #16
 1199 0050 0B91     		str	r1, [sp, #44]
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1200              		.loc 1 198 3 is_stmt 1 view .LVU358
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1201              		.loc 1 198 34 is_stmt 0 view .LVU359
 1202 0052 0D92     		str	r2, [sp, #52]
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1203              		.loc 1 199 3 is_stmt 1 view .LVU360
 199:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1204              		.loc 1 199 35 is_stmt 0 view .LVU361
 1205 0054 0E93     		str	r3, [sp, #56]
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 1206              		.loc 1 200 3 is_stmt 1 view .LVU362
 200:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 1207              		.loc 1 200 30 is_stmt 0 view .LVU363
 1208 0056 0823     		movs	r3, #8
 1209 0058 0F93     		str	r3, [sp, #60]
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1210              		.loc 1 201 3 is_stmt 1 view .LVU364
 201:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1211              		.loc 1 201 30 is_stmt 0 view .LVU365
 1212 005a 5A23     		movs	r3, #90
ARM GAS  /tmp/cchEMpbF.s 			page 40


 1213 005c 1093     		str	r3, [sp, #64]
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1214              		.loc 1 202 3 is_stmt 1 view .LVU366
 202:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1215              		.loc 1 202 30 is_stmt 0 view .LVU367
 1216 005e 1192     		str	r2, [sp, #68]
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1217              		.loc 1 203 3 is_stmt 1 view .LVU368
 203:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1218              		.loc 1 203 30 is_stmt 0 view .LVU369
 1219 0060 1292     		str	r2, [sp, #72]
 204:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1220              		.loc 1 204 3 is_stmt 1 view .LVU370
 204:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1221              		.loc 1 204 30 is_stmt 0 view .LVU371
 1222 0062 1392     		str	r2, [sp, #76]
 205:Core/Src/main.c ****   {
 1223              		.loc 1 205 3 is_stmt 1 view .LVU372
 205:Core/Src/main.c ****   {
 1224              		.loc 1 205 7 is_stmt 0 view .LVU373
 1225 0064 07A8     		add	r0, sp, #28
 1226 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1227              	.LVL46:
 205:Core/Src/main.c ****   {
 1228              		.loc 1 205 6 view .LVU374
 1229 006a 88B9     		cbnz	r0, .L68
 211:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1230              		.loc 1 211 3 is_stmt 1 view .LVU375
 211:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1231              		.loc 1 211 31 is_stmt 0 view .LVU376
 1232 006c 0F23     		movs	r3, #15
 1233 006e 0293     		str	r3, [sp, #8]
 213:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1234              		.loc 1 213 3 is_stmt 1 view .LVU377
 213:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1235              		.loc 1 213 34 is_stmt 0 view .LVU378
 1236 0070 0223     		movs	r3, #2
 1237 0072 0393     		str	r3, [sp, #12]
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1238              		.loc 1 214 3 is_stmt 1 view .LVU379
 214:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1239              		.loc 1 214 35 is_stmt 0 view .LVU380
 1240 0074 0023     		movs	r3, #0
 1241 0076 0493     		str	r3, [sp, #16]
 215:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1242              		.loc 1 215 3 is_stmt 1 view .LVU381
 215:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1243              		.loc 1 215 36 is_stmt 0 view .LVU382
 1244 0078 4FF48052 		mov	r2, #4096
 1245 007c 0592     		str	r2, [sp, #20]
 216:Core/Src/main.c **** 
 1246              		.loc 1 216 3 is_stmt 1 view .LVU383
 216:Core/Src/main.c **** 
 1247              		.loc 1 216 36 is_stmt 0 view .LVU384
 1248 007e 0693     		str	r3, [sp, #24]
 218:Core/Src/main.c ****   {
 1249              		.loc 1 218 3 is_stmt 1 view .LVU385
ARM GAS  /tmp/cchEMpbF.s 			page 41


 218:Core/Src/main.c ****   {
 1250              		.loc 1 218 7 is_stmt 0 view .LVU386
 1251 0080 0321     		movs	r1, #3
 1252 0082 02A8     		add	r0, sp, #8
 1253 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1254              	.LVL47:
 218:Core/Src/main.c ****   {
 1255              		.loc 1 218 6 view .LVU387
 1256 0088 20B9     		cbnz	r0, .L69
 222:Core/Src/main.c **** 
 1257              		.loc 1 222 1 view .LVU388
 1258 008a 15B0     		add	sp, sp, #84
 1259              	.LCFI16:
 1260              		.cfi_remember_state
 1261              		.cfi_def_cfa_offset 4
 1262              		@ sp needed
 1263 008c 5DF804FB 		ldr	pc, [sp], #4
 1264              	.L68:
 1265              	.LCFI17:
 1266              		.cfi_restore_state
 207:Core/Src/main.c ****   }
 1267              		.loc 1 207 5 is_stmt 1 view .LVU389
 1268 0090 FFF7FEFF 		bl	Error_Handler
 1269              	.LVL48:
 1270              	.L69:
 220:Core/Src/main.c ****   }
 1271              		.loc 1 220 5 view .LVU390
 1272 0094 FFF7FEFF 		bl	Error_Handler
 1273              	.LVL49:
 1274              	.L71:
 1275              		.align	2
 1276              	.L70:
 1277 0098 00380240 		.word	1073887232
 1278 009c 00700040 		.word	1073770496
 1279              		.cfi_endproc
 1280              	.LFE217:
 1282              		.section	.text.main,"ax",%progbits
 1283              		.align	1
 1284              		.global	main
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1288              		.fpu fpv4-sp-d16
 1290              	main:
 1291              	.LFB216:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1292              		.loc 1 112 1 view -0
 1293              		.cfi_startproc
 1294              		@ Volatile: function does not return.
 1295              		@ args = 0, pretend = 0, frame = 0
 1296              		@ frame_needed = 0, uses_anonymous_args = 0
 1297 0000 08B5     		push	{r3, lr}
 1298              	.LCFI18:
 1299              		.cfi_def_cfa_offset 8
 1300              		.cfi_offset 3, -8
 1301              		.cfi_offset 14, -4
 116:Core/Src/main.c ****   TxHeader.ExtId = 0x0;
ARM GAS  /tmp/cchEMpbF.s 			page 42


 1302              		.loc 1 116 3 view .LVU392
 116:Core/Src/main.c ****   TxHeader.ExtId = 0x0;
 1303              		.loc 1 116 18 is_stmt 0 view .LVU393
 1304 0002 1B4A     		ldr	r2, .L75
 1305 0004 9323     		movs	r3, #147
 1306 0006 1360     		str	r3, [r2]
 117:Core/Src/main.c ****   TxHeader.IDE = CAN_ID_STD;
 1307              		.loc 1 117 3 is_stmt 1 view .LVU394
 117:Core/Src/main.c ****   TxHeader.IDE = CAN_ID_STD;
 1308              		.loc 1 117 18 is_stmt 0 view .LVU395
 1309 0008 0023     		movs	r3, #0
 1310 000a 5360     		str	r3, [r2, #4]
 118:Core/Src/main.c ****   TxHeader.RTR = CAN_RTR_DATA;
 1311              		.loc 1 118 3 is_stmt 1 view .LVU396
 118:Core/Src/main.c ****   TxHeader.RTR = CAN_RTR_DATA;
 1312              		.loc 1 118 16 is_stmt 0 view .LVU397
 1313 000c 9360     		str	r3, [r2, #8]
 119:Core/Src/main.c ****   TxHeader.DLC = 8;
 1314              		.loc 1 119 3 is_stmt 1 view .LVU398
 119:Core/Src/main.c ****   TxHeader.DLC = 8;
 1315              		.loc 1 119 16 is_stmt 0 view .LVU399
 1316 000e D360     		str	r3, [r2, #12]
 120:Core/Src/main.c ****   TxHeader.TransmitGlobalTime = DISABLE;
 1317              		.loc 1 120 3 is_stmt 1 view .LVU400
 120:Core/Src/main.c ****   TxHeader.TransmitGlobalTime = DISABLE;
 1318              		.loc 1 120 16 is_stmt 0 view .LVU401
 1319 0010 0821     		movs	r1, #8
 1320 0012 1161     		str	r1, [r2, #16]
 121:Core/Src/main.c ****   
 1321              		.loc 1 121 3 is_stmt 1 view .LVU402
 121:Core/Src/main.c ****   
 1322              		.loc 1 121 31 is_stmt 0 view .LVU403
 1323 0014 1375     		strb	r3, [r2, #20]
 124:Core/Src/main.c ****   TxHeader2.ExtId = 0x0;
 1324              		.loc 1 124 3 is_stmt 1 view .LVU404
 124:Core/Src/main.c ****   TxHeader2.ExtId = 0x0;
 1325              		.loc 1 124 19 is_stmt 0 view .LVU405
 1326 0016 174A     		ldr	r2, .L75+4
 1327 0018 C020     		movs	r0, #192
 1328 001a 1060     		str	r0, [r2]
 125:Core/Src/main.c ****   TxHeader2.IDE = CAN_ID_STD;
 1329              		.loc 1 125 3 is_stmt 1 view .LVU406
 125:Core/Src/main.c ****   TxHeader2.IDE = CAN_ID_STD;
 1330              		.loc 1 125 19 is_stmt 0 view .LVU407
 1331 001c 5360     		str	r3, [r2, #4]
 126:Core/Src/main.c ****   TxHeader2.RTR = CAN_RTR_DATA;
 1332              		.loc 1 126 3 is_stmt 1 view .LVU408
 126:Core/Src/main.c ****   TxHeader2.RTR = CAN_RTR_DATA;
 1333              		.loc 1 126 17 is_stmt 0 view .LVU409
 1334 001e 9360     		str	r3, [r2, #8]
 127:Core/Src/main.c ****   TxHeader2.DLC = 8;
 1335              		.loc 1 127 3 is_stmt 1 view .LVU410
 127:Core/Src/main.c ****   TxHeader2.DLC = 8;
 1336              		.loc 1 127 17 is_stmt 0 view .LVU411
 1337 0020 D360     		str	r3, [r2, #12]
 128:Core/Src/main.c ****   TxHeader2.TransmitGlobalTime = DISABLE;
 1338              		.loc 1 128 3 is_stmt 1 view .LVU412
ARM GAS  /tmp/cchEMpbF.s 			page 43


 128:Core/Src/main.c ****   TxHeader2.TransmitGlobalTime = DISABLE;
 1339              		.loc 1 128 17 is_stmt 0 view .LVU413
 1340 0022 1161     		str	r1, [r2, #16]
 129:Core/Src/main.c **** 
 1341              		.loc 1 129 3 is_stmt 1 view .LVU414
 129:Core/Src/main.c **** 
 1342              		.loc 1 129 32 is_stmt 0 view .LVU415
 1343 0024 1375     		strb	r3, [r2, #20]
 136:Core/Src/main.c **** 
 1344              		.loc 1 136 3 is_stmt 1 view .LVU416
 1345 0026 FFF7FEFF 		bl	HAL_Init
 1346              	.LVL50:
 143:Core/Src/main.c **** 
 1347              		.loc 1 143 3 view .LVU417
 1348 002a FFF7FEFF 		bl	SystemClock_Config
 1349              	.LVL51:
 150:Core/Src/main.c ****   MX_CAN1_Init();
 1350              		.loc 1 150 3 view .LVU418
 1351 002e FFF7FEFF 		bl	MX_GPIO_Init
 1352              	.LVL52:
 151:Core/Src/main.c ****   MX_DMA_Init();
 1353              		.loc 1 151 3 view .LVU419
 1354 0032 FFF7FEFF 		bl	MX_CAN1_Init
 1355              	.LVL53:
 152:Core/Src/main.c ****   MX_ADC1_Init();
 1356              		.loc 1 152 3 view .LVU420
 1357 0036 FFF7FEFF 		bl	MX_DMA_Init
 1358              	.LVL54:
 153:Core/Src/main.c ****   MX_TIM14_Init();
 1359              		.loc 1 153 3 view .LVU421
 1360 003a FFF7FEFF 		bl	MX_ADC1_Init
 1361              	.LVL55:
 154:Core/Src/main.c ****   MX_TIM13_Init();
 1362              		.loc 1 154 3 view .LVU422
 1363 003e FFF7FEFF 		bl	MX_TIM14_Init
 1364              	.LVL56:
 155:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1365              		.loc 1 155 3 view .LVU423
 1366 0042 FFF7FEFF 		bl	MX_TIM13_Init
 1367              	.LVL57:
 159:Core/Src/main.c ****   HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 1368              		.loc 1 159 3 view .LVU424
 1369 0046 0C4C     		ldr	r4, .L75+8
 1370 0048 2046     		mov	r0, r4
 1371 004a FFF7FEFF 		bl	HAL_CAN_Start
 1372              	.LVL58:
 160:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim14);
 1373              		.loc 1 160 3 view .LVU425
 1374 004e 0221     		movs	r1, #2
 1375 0050 2046     		mov	r0, r4
 1376 0052 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 1377              	.LVL59:
 161:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim13);
 1378              		.loc 1 161 3 view .LVU426
 1379 0056 0948     		ldr	r0, .L75+12
 1380 0058 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1381              	.LVL60:
ARM GAS  /tmp/cchEMpbF.s 			page 44


 162:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc_buf, ADC_BUF_LEN);
 1382              		.loc 1 162 3 view .LVU427
 1383 005c 0848     		ldr	r0, .L75+16
 1384 005e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1385              	.LVL61:
 163:Core/Src/main.c **** 
 1386              		.loc 1 163 3 view .LVU428
 1387 0062 0422     		movs	r2, #4
 1388 0064 0749     		ldr	r1, .L75+20
 1389 0066 0848     		ldr	r0, .L75+24
 1390 0068 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1391              	.LVL62:
 1392              	.L73:
 169:Core/Src/main.c ****   {
 1393              		.loc 1 169 3 discriminator 1 view .LVU429
 175:Core/Src/main.c ****   /* USER CODE END 3 */
 1394              		.loc 1 175 3 discriminator 1 view .LVU430
 169:Core/Src/main.c ****   {
 1395              		.loc 1 169 9 discriminator 1 view .LVU431
 1396 006c FEE7     		b	.L73
 1397              	.L76:
 1398 006e 00BF     		.align	2
 1399              	.L75:
 1400 0070 00000000 		.word	TxHeader
 1401 0074 00000000 		.word	TxHeader2
 1402 0078 00000000 		.word	hcan1
 1403 007c 00000000 		.word	htim14
 1404 0080 00000000 		.word	htim13
 1405 0084 00000000 		.word	adc_buf
 1406 0088 00000000 		.word	hadc1
 1407              		.cfi_endproc
 1408              	.LFE216:
 1410              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 1411              		.align	1
 1412              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 1413              		.syntax unified
 1414              		.thumb
 1415              		.thumb_func
 1416              		.fpu fpv4-sp-d16
 1418              	HAL_CAN_RxFifo0MsgPendingCallback:
 1419              	.LVL63:
 1420              	.LFB224:
 488:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK){
 1421              		.loc 1 488 64 view -0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 488:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &RxHeader, RxData) != HAL_OK){
 1425              		.loc 1 488 64 is_stmt 0 view .LVU433
 1426 0000 08B5     		push	{r3, lr}
 1427              	.LCFI19:
 1428              		.cfi_def_cfa_offset 8
 1429              		.cfi_offset 3, -8
 1430              		.cfi_offset 14, -4
 489:Core/Src/main.c ****     Error_Handler();
 1431              		.loc 1 489 3 is_stmt 1 view .LVU434
 489:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/cchEMpbF.s 			page 45


 1432              		.loc 1 489 7 is_stmt 0 view .LVU435
 1433 0002 0E4B     		ldr	r3, .L85
 1434 0004 0E4A     		ldr	r2, .L85+4
 1435 0006 0021     		movs	r1, #0
 1436 0008 0E48     		ldr	r0, .L85+8
 1437              	.LVL64:
 489:Core/Src/main.c ****     Error_Handler();
 1438              		.loc 1 489 7 view .LVU436
 1439 000a FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 1440              	.LVL65:
 489:Core/Src/main.c ****     Error_Handler();
 1441              		.loc 1 489 6 view .LVU437
 1442 000e 30B9     		cbnz	r0, .L82
 493:Core/Src/main.c ****       imdFault = RxData[0];
 1443              		.loc 1 493 3 is_stmt 1 view .LVU438
 493:Core/Src/main.c ****       imdFault = RxData[0];
 1444              		.loc 1 493 15 is_stmt 0 view .LVU439
 1445 0010 0B4B     		ldr	r3, .L85+4
 1446 0012 1B68     		ldr	r3, [r3]
 493:Core/Src/main.c ****       imdFault = RxData[0];
 1447              		.loc 1 493 6 view .LVU440
 1448 0014 822B     		cmp	r3, #130
 1449 0016 04D0     		beq	.L83
 1450              	.L79:
 497:Core/Src/main.c ****       ready_to_drive = RxData[0];
 1451              		.loc 1 497 3 is_stmt 1 view .LVU441
 497:Core/Src/main.c ****       ready_to_drive = RxData[0];
 1452              		.loc 1 497 6 is_stmt 0 view .LVU442
 1453 0018 872B     		cmp	r3, #135
 1454 001a 0AD0     		beq	.L84
 1455              	.L77:
 501:Core/Src/main.c **** 
 1456              		.loc 1 501 1 view .LVU443
 1457 001c 08BD     		pop	{r3, pc}
 1458              	.L82:
 490:Core/Src/main.c ****   }
 1459              		.loc 1 490 5 is_stmt 1 view .LVU444
 1460 001e FFF7FEFF 		bl	Error_Handler
 1461              	.LVL66:
 1462              	.L83:
 494:Core/Src/main.c ****       bmsFault = RxData[1];
 1463              		.loc 1 494 7 view .LVU445
 494:Core/Src/main.c ****       bmsFault = RxData[1];
 1464              		.loc 1 494 24 is_stmt 0 view .LVU446
 1465 0022 064A     		ldr	r2, .L85
 1466 0024 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 494:Core/Src/main.c ****       bmsFault = RxData[1];
 1467              		.loc 1 494 16 view .LVU447
 1468 0026 0849     		ldr	r1, .L85+12
 1469 0028 0870     		strb	r0, [r1]
 495:Core/Src/main.c ****   }
 1470              		.loc 1 495 7 is_stmt 1 view .LVU448
 495:Core/Src/main.c ****   }
 1471              		.loc 1 495 24 is_stmt 0 view .LVU449
 1472 002a 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 495:Core/Src/main.c ****   }
 1473              		.loc 1 495 16 view .LVU450
ARM GAS  /tmp/cchEMpbF.s 			page 46


 1474 002c 074A     		ldr	r2, .L85+16
 1475 002e 1170     		strb	r1, [r2]
 1476 0030 F2E7     		b	.L79
 1477              	.L84:
 498:Core/Src/main.c ****   }
 1478              		.loc 1 498 7 is_stmt 1 view .LVU451
 498:Core/Src/main.c ****   }
 1479              		.loc 1 498 30 is_stmt 0 view .LVU452
 1480 0032 024B     		ldr	r3, .L85
 1481 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 498:Core/Src/main.c ****   }
 1482              		.loc 1 498 22 view .LVU453
 1483 0036 064B     		ldr	r3, .L85+20
 1484 0038 1A70     		strb	r2, [r3]
 501:Core/Src/main.c **** 
 1485              		.loc 1 501 1 view .LVU454
 1486 003a EFE7     		b	.L77
 1487              	.L86:
 1488              		.align	2
 1489              	.L85:
 1490 003c 00000000 		.word	RxData
 1491 0040 00000000 		.word	RxHeader
 1492 0044 00000000 		.word	hcan1
 1493 0048 00000000 		.word	.LANCHOR10
 1494 004c 00000000 		.word	.LANCHOR11
 1495 0050 00000000 		.word	.LANCHOR0
 1496              		.cfi_endproc
 1497              	.LFE224:
 1499              		.global	command_torque_limit
 1500              		.global	enableInverter
 1501              		.global	buzzerCounter
 1502              		.global	buzzerState
 1503              		.global	startButtonState
 1504              		.global	buzzer_signal
 1505              		.global	ready_to_drive
 1506              		.global	pedalAverage
 1507              		.global	pedal1
 1508              		.global	pedal0
 1509              		.comm	adc_buf,8,4
 1510              		.global	switch_direction
 1511              		.global	switch_cooling
 1512              		.global	bmsFault
 1513              		.global	imdFault
 1514              		.comm	filter1,40,4
 1515              		.comm	filter0,40,4
 1516              		.comm	RxData,8,4
 1517              		.comm	RxHeader,28,4
 1518              		.comm	TxMailbox,4,4
 1519              		.comm	TxData,8,4
 1520              		.comm	TxHeader2,24,4
 1521              		.comm	TxHeader,24,4
 1522              		.comm	htim14,72,4
 1523              		.comm	htim13,72,4
 1524              		.comm	hcan1,40,4
 1525              		.comm	hdma_adc1,96,4
 1526              		.comm	hadc1,72,4
 1527              		.section	.bss.bmsFault,"aw",%nobits
ARM GAS  /tmp/cchEMpbF.s 			page 47


 1528              		.set	.LANCHOR11,. + 0
 1531              	bmsFault:
 1532 0000 00       		.space	1
 1533              		.section	.bss.buzzerCounter,"aw",%nobits
 1534              		.set	.LANCHOR9,. + 0
 1537              	buzzerCounter:
 1538 0000 00       		.space	1
 1539              		.section	.bss.buzzerState,"aw",%nobits
 1540              		.set	.LANCHOR1,. + 0
 1543              	buzzerState:
 1544 0000 00       		.space	1
 1545              		.section	.bss.buzzer_signal,"aw",%nobits
 1548              	buzzer_signal:
 1549 0000 00       		.space	1
 1550              		.section	.bss.enableInverter,"aw",%nobits
 1551              		.set	.LANCHOR6,. + 0
 1554              	enableInverter:
 1555 0000 00       		.space	1
 1556              		.section	.bss.imdFault,"aw",%nobits
 1557              		.set	.LANCHOR10,. + 0
 1560              	imdFault:
 1561 0000 00       		.space	1
 1562              		.section	.bss.pedal0,"aw",%nobits
 1563              		.align	1
 1564              		.set	.LANCHOR2,. + 0
 1567              	pedal0:
 1568 0000 0000     		.space	2
 1569              		.section	.bss.pedalAverage,"aw",%nobits
 1570              		.align	1
 1571              		.set	.LANCHOR4,. + 0
 1574              	pedalAverage:
 1575 0000 0000     		.space	2
 1576              		.section	.bss.ready_to_drive,"aw",%nobits
 1577              		.set	.LANCHOR0,. + 0
 1580              	ready_to_drive:
 1581 0000 00       		.space	1
 1582              		.section	.bss.startButtonState,"aw",%nobits
 1585              	startButtonState:
 1586 0000 00       		.space	1
 1587              		.section	.bss.switch_cooling,"aw",%nobits
 1588              		.set	.LANCHOR8,. + 0
 1591              	switch_cooling:
 1592 0000 00       		.space	1
 1593              		.section	.bss.switch_direction,"aw",%nobits
 1594              		.set	.LANCHOR5,. + 0
 1597              	switch_direction:
 1598 0000 00       		.space	1
 1599              		.section	.data.command_torque_limit,"aw"
 1600              		.align	1
 1601              		.set	.LANCHOR7,. + 0
 1604              	command_torque_limit:
 1605 0000 6400     		.short	100
 1606              		.section	.data.pedal1,"aw"
 1607              		.align	1
 1608              		.set	.LANCHOR3,. + 0
 1611              	pedal1:
 1612 0000 0100     		.short	1
ARM GAS  /tmp/cchEMpbF.s 			page 48


 1613              		.text
 1614              	.Letext0:
 1615              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1616              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1617              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1618              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 1619              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1620              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1621              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1622              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1623              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1624              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1625              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1626              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1627              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1628              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1629              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1630              		.file 18 "<built-in>"
ARM GAS  /tmp/cchEMpbF.s 			page 49


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cchEMpbF.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cchEMpbF.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cchEMpbF.s:186    .text.MX_GPIO_Init:00000000000000c0 $d
     /tmp/cchEMpbF.s:193    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/cchEMpbF.s:199    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/cchEMpbF.s:248    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/cchEMpbF.s:253    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
     /tmp/cchEMpbF.s:260    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
     /tmp/cchEMpbF.s:293    .text.HAL_GPIO_EXTI_Callback:0000000000000018 $d
     /tmp/cchEMpbF.s:299    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/cchEMpbF.s:306    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/cchEMpbF.s:332    .text.HAL_ADC_ConvCpltCallback:0000000000000010 $d
                            *COM*:0000000000000008 adc_buf
     /tmp/cchEMpbF.s:339    .text.pedal_conversion:0000000000000000 $t
     /tmp/cchEMpbF.s:346    .text.pedal_conversion:0000000000000000 pedal_conversion
     /tmp/cchEMpbF.s:368    .text.pedal_conversion:000000000000000c $d
     /tmp/cchEMpbF.s:373    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cchEMpbF.s:380    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cchEMpbF.s:592    .text.HAL_TIM_PeriodElapsedCallback:00000000000000f8 $d
                            *COM*:0000000000000048 htim13
                            *COM*:0000000000000048 htim14
                            *COM*:0000000000000008 TxData
                            *COM*:0000000000000004 TxMailbox
                            *COM*:0000000000000018 TxHeader2
                            *COM*:0000000000000028 hcan1
                            *COM*:0000000000000018 TxHeader
     /tmp/cchEMpbF.s:616    .text.Error_Handler:0000000000000000 $t
     /tmp/cchEMpbF.s:623    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cchEMpbF.s:655    .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/cchEMpbF.s:661    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/cchEMpbF.s:808    .text.MX_CAN1_Init:0000000000000080 $d
                            *COM*:0000000000000028 filter0
                            *COM*:0000000000000028 filter1
     /tmp/cchEMpbF.s:816    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/cchEMpbF.s:822    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/cchEMpbF.s:990    .text.MX_ADC1_Init:00000000000000a4 $d
                            *COM*:0000000000000048 hadc1
     /tmp/cchEMpbF.s:997    .text.MX_TIM14_Init:0000000000000000 $t
     /tmp/cchEMpbF.s:1003   .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
     /tmp/cchEMpbF.s:1052   .text.MX_TIM14_Init:0000000000000028 $d
     /tmp/cchEMpbF.s:1058   .text.MX_TIM13_Init:0000000000000000 $t
     /tmp/cchEMpbF.s:1064   .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
     /tmp/cchEMpbF.s:1113   .text.MX_TIM13_Init:0000000000000028 $d
     /tmp/cchEMpbF.s:1119   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cchEMpbF.s:1126   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cchEMpbF.s:1277   .text.SystemClock_Config:0000000000000098 $d
     /tmp/cchEMpbF.s:1283   .text.main:0000000000000000 $t
     /tmp/cchEMpbF.s:1290   .text.main:0000000000000000 main
     /tmp/cchEMpbF.s:1400   .text.main:0000000000000070 $d
     /tmp/cchEMpbF.s:1411   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/cchEMpbF.s:1418   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/cchEMpbF.s:1490   .text.HAL_CAN_RxFifo0MsgPendingCallback:000000000000003c $d
                            *COM*:0000000000000008 RxData
                            *COM*:000000000000001c RxHeader
     /tmp/cchEMpbF.s:1604   .data.command_torque_limit:0000000000000000 command_torque_limit
ARM GAS  /tmp/cchEMpbF.s 			page 50


     /tmp/cchEMpbF.s:1554   .bss.enableInverter:0000000000000000 enableInverter
     /tmp/cchEMpbF.s:1537   .bss.buzzerCounter:0000000000000000 buzzerCounter
     /tmp/cchEMpbF.s:1543   .bss.buzzerState:0000000000000000 buzzerState
     /tmp/cchEMpbF.s:1585   .bss.startButtonState:0000000000000000 startButtonState
     /tmp/cchEMpbF.s:1548   .bss.buzzer_signal:0000000000000000 buzzer_signal
     /tmp/cchEMpbF.s:1580   .bss.ready_to_drive:0000000000000000 ready_to_drive
     /tmp/cchEMpbF.s:1574   .bss.pedalAverage:0000000000000000 pedalAverage
     /tmp/cchEMpbF.s:1611   .data.pedal1:0000000000000000 pedal1
     /tmp/cchEMpbF.s:1567   .bss.pedal0:0000000000000000 pedal0
     /tmp/cchEMpbF.s:1597   .bss.switch_direction:0000000000000000 switch_direction
     /tmp/cchEMpbF.s:1591   .bss.switch_cooling:0000000000000000 switch_cooling
     /tmp/cchEMpbF.s:1531   .bss.bmsFault:0000000000000000 bmsFault
     /tmp/cchEMpbF.s:1560   .bss.imdFault:0000000000000000 imdFault
                            *COM*:0000000000000060 hdma_adc1
     /tmp/cchEMpbF.s:1532   .bss.bmsFault:0000000000000000 $d
     /tmp/cchEMpbF.s:1538   .bss.buzzerCounter:0000000000000000 $d
     /tmp/cchEMpbF.s:1544   .bss.buzzerState:0000000000000000 $d
     /tmp/cchEMpbF.s:1549   .bss.buzzer_signal:0000000000000000 $d
     /tmp/cchEMpbF.s:1555   .bss.enableInverter:0000000000000000 $d
     /tmp/cchEMpbF.s:1561   .bss.imdFault:0000000000000000 $d
     /tmp/cchEMpbF.s:1563   .bss.pedal0:0000000000000000 $d
     /tmp/cchEMpbF.s:1570   .bss.pedalAverage:0000000000000000 $d
     /tmp/cchEMpbF.s:1581   .bss.ready_to_drive:0000000000000000 $d
     /tmp/cchEMpbF.s:1586   .bss.startButtonState:0000000000000000 $d
     /tmp/cchEMpbF.s:1592   .bss.switch_cooling:0000000000000000 $d
     /tmp/cchEMpbF.s:1598   .bss.switch_direction:0000000000000000 $d
     /tmp/cchEMpbF.s:1600   .data.command_torque_limit:0000000000000000 $d
     /tmp/cchEMpbF.s:1607   .data.pedal1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_CAN_AddTxMessage
HAL_GPIO_ReadPin
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_TIM_Base_Start_IT
HAL_ADC_Start_DMA
HAL_CAN_GetRxMessage
