ARM GAS  /tmp/cc4EFlgW.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB223:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** /* USER CODE END PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/cc4EFlgW.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN PD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** // analog buffer
  35:Core/Src/main.c **** #define ADC_BUF_LEN 4086
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** // precharge
  38:Core/Src/main.c **** #define PRECHARGE_COEFFICIENT       0.95          // 95% complete with precharge so it's probably s
  39:Core/Src/main.c **** #define NUM_COMMAND_MSG             10            // number of command messages we see from rinehar
  40:Core/Src/main.c **** #define NUM_VOLTAGE_CHECKS          500           // since we're checking at 10ms Interrupts, 500 w
  41:Core/Src/main.c ****                                                   // precharge should be done in less than 2 second
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  50:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** TIM_HandleTypeDef htim13;
  55:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** // counters for Rinehart message sending in precharge
  60:Core/Src/main.c **** uint8_t rinehart_send_command_count = 0;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** // inputs
  63:Core/Src/main.c **** uint32_t rinehartVoltage = 0;                 // read from CAN
  64:Core/Src/main.c **** uint32_t bmsVoltage = 0;					            // read from CAN
  65:Core/Src/main.c **** int vicoreTemp = 0;					                  // read from DMA, vicore temp
  66:Core/Src/main.c **** int DCDCEnable = 0;                           // dc-dc enable (0 = disabled, 1 = enabled)
  67:Core/Src/main.c **** int RTDButtonPressed = 0;                     // read this from CAN, if it's 1 we can finish precha
  68:Core/Src/main.c **** uint32_t adc_buf[ADC_BUF_LEN];				        // adc read buffer
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** // output
  71:Core/Src/main.c **** int DCDCFault = 0;                            // the dc-dc fault indicator (0 = no fault, 1 = fault
  72:Core/Src/main.c **** int readyToDrive = 0;					                // the car is ready to drive! (0 = not ready, 1 = ready)
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** // precharge states
  75:Core/Src/main.c **** enum prechargeStates
  76:Core/Src/main.c **** {
  77:Core/Src/main.c **** 	PRECHARGE_OFF,
  78:Core/Src/main.c **** 	PRECHARGE_ON,
  79:Core/Src/main.c **** 	PRECHARGE_DONE,
  80:Core/Src/main.c **** 	PRECHARGE_ERROR
  81:Core/Src/main.c **** };
  82:Core/Src/main.c **** uint8_t prechargeState = PRECHARGE_OFF;			  // set initial precharge state to OFF
  83:Core/Src/main.c **** uint8_t lastPrechargeState = PRECHARGE_OFF;
  84:Core/Src/main.c **** uint8_t voltageCheckCount = 0;
  85:Core/Src/main.c **** uint8_t rinehartUpdate = 0; // listens for rinehart receive parameter success message
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** // CAN transmit 
  88:Core/Src/main.c **** uint32_t TxMailbox; 							            // CAN Bus Mail box variable
ARM GAS  /tmp/cc4EFlgW.s 			page 3


  89:Core/Src/main.c **** CAN_TxHeaderTypeDef txHeader0; 					      // CAN Bus Transmit Header BASE
  90:Core/Src/main.c **** CAN_TxHeaderTypeDef txHeader1; 					      // CAN Bus Transmit Header DATA
  91:Core/Src/main.c **** CAN_TxHeaderTypeDef txHeader2; 					      // CAN Bus Transmit Header DATA
  92:Core/Src/main.c **** CAN_TxHeaderTypeDef TxHeader3; 					      // CAN Bus Transmit Header DATA
  93:Core/Src/main.c **** uint8_t TxData[8];                            // CAN transmit buffer
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** // CAN recive
  96:Core/Src/main.c **** CAN_RxHeaderTypeDef rxHeader; 					      // CAN Bus Receive Header
  97:Core/Src/main.c **** uint8_t canRX[8] = {0, 0, 0, 0, 0, 0, 0, 0}; 	// CAN Bus Receive Buffer
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** CAN_FilterTypeDef canFilter0; 					      // CAN Bus Filter for BMS
 100:Core/Src/main.c **** CAN_FilterTypeDef canFilter1;                 // CAN Bus Filter for Rinehart
 101:Core/Src/main.c **** CAN_FilterTypeDef canFilter2;                 // CAN Bus Filter for Rinehart
 102:Core/Src/main.c **** /* USER CODE END PV */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 105:Core/Src/main.c **** void SystemClock_Config(void);
 106:Core/Src/main.c **** static void MX_GPIO_Init(void);
 107:Core/Src/main.c **** static void MX_CAN1_Init(void);
 108:Core/Src/main.c **** static void MX_DMA_Init(void);
 109:Core/Src/main.c **** static void MX_ADC1_Init(void);
 110:Core/Src/main.c **** static void MX_TIM14_Init(void);
 111:Core/Src/main.c **** static void MX_TIM13_Init(void);
 112:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 113:Core/Src/main.c **** void prechargeControl();
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /* USER CODE END PFP */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 118:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 119:Core/Src/main.c **** /* USER CODE END 0 */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /**
 122:Core/Src/main.c ****   * @brief  The application entry point.
 123:Core/Src/main.c ****   * @retval int
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c **** int main(void)
 126:Core/Src/main.c **** {
 127:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE END 1 */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 134:Core/Src/main.c ****   HAL_Init();
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 137:Core/Src/main.c ****   /* USER CODE END Init */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* Configure the system clock */
 140:Core/Src/main.c ****   SystemClock_Config();
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 143:Core/Src/main.c ****   /* USER CODE END SysInit */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/cc4EFlgW.s 			page 4


 146:Core/Src/main.c ****   MX_GPIO_Init();
 147:Core/Src/main.c ****   MX_CAN1_Init();
 148:Core/Src/main.c ****   MX_DMA_Init();
 149:Core/Src/main.c ****   MX_ADC1_Init();
 150:Core/Src/main.c ****   MX_TIM14_Init();
 151:Core/Src/main.c ****   MX_TIM13_Init();
 152:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   // init the CAN mailbox for BASE
 155:Core/Src/main.c ****   txHeader0.DLC = 8; // Number of bites to be transmitted max- 8
 156:Core/Src/main.c ****   txHeader0.IDE = CAN_ID_STD;
 157:Core/Src/main.c ****   txHeader0.RTR = CAN_RTR_DATA;
 158:Core/Src/main.c ****   txHeader0.StdId = 0x086;
 159:Core/Src/main.c ****   txHeader0.ExtId = 0x00;
 160:Core/Src/main.c ****   txHeader0.TransmitGlobalTime = DISABLE;
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   // init the CAN mailbox for DATA
 163:Core/Src/main.c ****   txHeader1.DLC = 8; // Number of bites to be transmitted max- 8
 164:Core/Src/main.c ****   txHeader1.IDE = CAN_ID_STD;
 165:Core/Src/main.c ****   txHeader1.RTR = CAN_RTR_DATA;
 166:Core/Src/main.c ****   txHeader1.StdId = 0x087;
 167:Core/Src/main.c ****   txHeader1.ExtId = 0x00;
 168:Core/Src/main.c ****   txHeader1.TransmitGlobalTime = DISABLE;
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   // header for rinehart (Parameter Command Message)
 171:Core/Src/main.c ****   txHeader2.DLC = 8; // Number of bites to be transmitted max- 8
 172:Core/Src/main.c ****   txHeader2.IDE = CAN_ID_STD;
 173:Core/Src/main.c ****   txHeader2.RTR = CAN_RTR_DATA;
 174:Core/Src/main.c ****   txHeader2.StdId = 0x0C1;
 175:Core/Src/main.c ****   txHeader2.ExtId = 0x00;
 176:Core/Src/main.c ****   txHeader2.TransmitGlobalTime = DISABLE;
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   // Rinehart command message
 179:Core/Src/main.c ****   TxHeader3.StdId = 0x0C0;
 180:Core/Src/main.c ****   TxHeader3.ExtId = 0x000;
 181:Core/Src/main.c ****   TxHeader3.IDE = CAN_ID_STD;
 182:Core/Src/main.c ****   TxHeader3.RTR = CAN_RTR_DATA;
 183:Core/Src/main.c ****   TxHeader3.DLC = 8;
 184:Core/Src/main.c ****   TxHeader3.TransmitGlobalTime = DISABLE;
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** 	// HAL_CAN_Start(&hcan1); // Initialize CAN Bus
 187:Core/Src/main.c **** 	// HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);   // Initialize CAN Bus Rx I
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   // start timers
 190:Core/Src/main.c ****   // HAL_TIM_Base_Start_IT(&htim14);
 191:Core/Src/main.c ****   // HAL_TIM_Base_Start_IT(&htim13);
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** 	// start ADC DMA
 194:Core/Src/main.c **** 	// HAL_ADC_Start_DMA(&hadc1, adc_buf, ADC_BUF_LEN);
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE END 2 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* Infinite loop */
 199:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 200:Core/Src/main.c ****   while (1)
 201:Core/Src/main.c ****   {
 202:Core/Src/main.c ****     /* USER CODE END WHILE */
ARM GAS  /tmp/cc4EFlgW.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 205:Core/Src/main.c ****   }
 206:Core/Src/main.c ****   /* USER CODE END 3 */
 207:Core/Src/main.c **** }
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** /**
 210:Core/Src/main.c ****   * @brief System Clock Configuration
 211:Core/Src/main.c ****   * @retval None
 212:Core/Src/main.c ****   */
 213:Core/Src/main.c **** void SystemClock_Config(void)
 214:Core/Src/main.c **** {
 215:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 216:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 221:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 222:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 223:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 226:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 227:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 234:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 235:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 236:Core/Src/main.c ****   {
 237:Core/Src/main.c ****     Error_Handler();
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 240:Core/Src/main.c ****   */
 241:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 242:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 243:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 244:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 245:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 246:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 249:Core/Src/main.c ****   {
 250:Core/Src/main.c ****     Error_Handler();
 251:Core/Src/main.c ****   }
 252:Core/Src/main.c **** }
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /**
 255:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 256:Core/Src/main.c ****   * @param None
 257:Core/Src/main.c ****   * @retval None
 258:Core/Src/main.c ****   */
 259:Core/Src/main.c **** static void MX_ADC1_Init(void)
ARM GAS  /tmp/cc4EFlgW.s 			page 6


 260:Core/Src/main.c **** {
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 263:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 268:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 269:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 270:Core/Src/main.c ****   */
 271:Core/Src/main.c ****   hadc1.Instance = ADC1;
 272:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 273:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 274:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 275:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 276:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 277:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 278:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 279:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 280:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 281:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 282:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 283:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 284:Core/Src/main.c ****   {
 285:Core/Src/main.c ****     Error_Handler();
 286:Core/Src/main.c ****   }
 287:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 288:Core/Src/main.c ****   */
 289:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 290:Core/Src/main.c ****   sConfig.Rank = 1;
 291:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 292:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 293:Core/Src/main.c ****   {
 294:Core/Src/main.c ****     Error_Handler();
 295:Core/Src/main.c ****   }
 296:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 297:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** }
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** /**
 302:Core/Src/main.c ****   * @brief CAN1 Initialization Function
 303:Core/Src/main.c ****   * @param None
 304:Core/Src/main.c ****   * @retval None
 305:Core/Src/main.c ****   */
 306:Core/Src/main.c **** static void MX_CAN1_Init(void)
 307:Core/Src/main.c **** {
 308:Core/Src/main.c **** 
 309:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 310:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 313:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 314:Core/Src/main.c ****   hcan1.Instance = CAN1;
 315:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 316:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
ARM GAS  /tmp/cc4EFlgW.s 			page 7


 317:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 318:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 319:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 320:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 321:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 322:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 323:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 324:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 325:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 326:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 327:Core/Src/main.c ****   {
 328:Core/Src/main.c ****     Error_Handler();
 329:Core/Src/main.c ****   }
 330:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   // init the CAN filter for BMS messages
 333:Core/Src/main.c ****     canFilter0.FilterIdHigh = 0x6B0 << 5;   // Orion ID: 0x6B0
 334:Core/Src/main.c ****   	canFilter0.FilterIdLow = 0x000;
 335:Core/Src/main.c ****     canFilter0.FilterMaskIdHigh = 0x6B0 << 5;
 336:Core/Src/main.c ****   	canFilter0.FilterMaskIdLow = 0x000;
 337:Core/Src/main.c ****     canFilter0.FilterBank = 0;
 338:Core/Src/main.c ****   	canFilter0.FilterMode = CAN_FILTERMODE_IDMASK;
 339:Core/Src/main.c ****   	canFilter0.FilterFIFOAssignment = CAN_RX_FIFO0;
 340:Core/Src/main.c ****   	canFilter0.FilterScale = CAN_FILTERSCALE_32BIT;
 341:Core/Src/main.c ****   	canFilter0.FilterActivation = ENABLE;
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****     HAL_CAN_ConfigFilter(&hcan1, &canFilter0);
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****     // init the CAN filter for Rinehart voltage messages
 346:Core/Src/main.c ****     canFilter1.FilterIdHigh = 0x0A7 << 5;      // Rinehart IDs: 0xA0 - 0xB1
 347:Core/Src/main.c ****   	canFilter1.FilterIdLow = 0x000;
 348:Core/Src/main.c ****     canFilter1.FilterMaskIdHigh = 0x0A7 << 5;
 349:Core/Src/main.c ****   	canFilter1.FilterMaskIdLow = 0x000;
 350:Core/Src/main.c ****     canFilter1.FilterBank = 1;
 351:Core/Src/main.c ****   	canFilter1.FilterMode = CAN_FILTERMODE_IDMASK;
 352:Core/Src/main.c ****   	canFilter1.FilterFIFOAssignment = CAN_RX_FIFO0;
 353:Core/Src/main.c ****   	canFilter1.FilterScale = CAN_FILTERSCALE_32BIT;
 354:Core/Src/main.c ****   	canFilter1.FilterActivation = ENABLE;
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****     HAL_CAN_ConfigFilter(&hcan1, &canFilter1);
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****     // init the CAN filter for Rinehart Parameter Success messages
 359:Core/Src/main.c ****     canFilter2.FilterIdHigh = 0x0C2 << 5;      // Rinehart IDs: 0xA0 - 0xB1
 360:Core/Src/main.c ****   	canFilter2.FilterIdLow = 0x000;
 361:Core/Src/main.c ****     canFilter2.FilterMaskIdHigh = 0x0C2 << 5;
 362:Core/Src/main.c ****   	canFilter2.FilterMaskIdLow = 0x000;
 363:Core/Src/main.c ****     canFilter2.FilterBank = 2;
 364:Core/Src/main.c ****   	canFilter2.FilterMode = CAN_FILTERMODE_IDMASK;
 365:Core/Src/main.c ****   	canFilter2.FilterFIFOAssignment = CAN_RX_FIFO0;
 366:Core/Src/main.c ****   	canFilter2.FilterScale = CAN_FILTERSCALE_32BIT;
 367:Core/Src/main.c ****   	canFilter2.FilterActivation = ENABLE;
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****     HAL_CAN_ConfigFilter(&hcan1, &canFilter2);
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** }
ARM GAS  /tmp/cc4EFlgW.s 			page 8


 374:Core/Src/main.c **** 
 375:Core/Src/main.c **** /**
 376:Core/Src/main.c ****   * @brief TIM13 Initialization Function
 377:Core/Src/main.c ****   * @param None
 378:Core/Src/main.c ****   * @retval None
 379:Core/Src/main.c ****   */
 380:Core/Src/main.c **** static void MX_TIM13_Init(void)
 381:Core/Src/main.c **** {
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 0 */
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE END TIM13_Init 0 */
 386:Core/Src/main.c **** 
 387:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 1 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE END TIM13_Init 1 */
 390:Core/Src/main.c ****   htim13.Instance = TIM13;
 391:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 392:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 393:Core/Src/main.c ****   htim13.Init.Period = 1000-1;
 394:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 395:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 396:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 397:Core/Src/main.c ****   {
 398:Core/Src/main.c ****     Error_Handler();
 399:Core/Src/main.c ****   }
 400:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 2 */
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* USER CODE END TIM13_Init 2 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c **** }
 405:Core/Src/main.c **** 
 406:Core/Src/main.c **** /**
 407:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 408:Core/Src/main.c ****   * @param None
 409:Core/Src/main.c ****   * @retval None
 410:Core/Src/main.c ****   */
 411:Core/Src/main.c **** static void MX_TIM14_Init(void)
 412:Core/Src/main.c **** {
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 421:Core/Src/main.c ****   htim14.Instance = TIM14;
 422:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 423:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 424:Core/Src/main.c ****   htim14.Init.Period = 500-1;
 425:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 426:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 427:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 428:Core/Src/main.c ****   {
 429:Core/Src/main.c ****     Error_Handler();
 430:Core/Src/main.c ****   }
ARM GAS  /tmp/cc4EFlgW.s 			page 9


 431:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 434:Core/Src/main.c **** 
 435:Core/Src/main.c **** }
 436:Core/Src/main.c **** 
 437:Core/Src/main.c **** /**
 438:Core/Src/main.c ****   * Enable DMA controller clock
 439:Core/Src/main.c ****   */
 440:Core/Src/main.c **** static void MX_DMA_Init(void)
 441:Core/Src/main.c **** {
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /* DMA controller clock enable */
 444:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   /* DMA interrupt init */
 447:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 448:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 449:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 450:Core/Src/main.c **** 
 451:Core/Src/main.c **** }
 452:Core/Src/main.c **** 
 453:Core/Src/main.c **** /**
 454:Core/Src/main.c ****   * @brief GPIO Initialization Function
 455:Core/Src/main.c ****   * @param None
 456:Core/Src/main.c ****   * @retval None
 457:Core/Src/main.c ****   */
 458:Core/Src/main.c **** static void MX_GPIO_Init(void)
 459:Core/Src/main.c **** {
  28              		.loc 1 459 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 56
 460:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 460 3 view .LVU1
  44              		.loc 1 460 20 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0394     		str	r4, [sp, #12]
  47 0008 0494     		str	r4, [sp, #16]
  48 000a 0594     		str	r4, [sp, #20]
  49 000c 0694     		str	r4, [sp, #24]
  50 000e 0794     		str	r4, [sp, #28]
 461:Core/Src/main.c **** 
 462:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 463:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  51              		.loc 1 463 3 is_stmt 1 view .LVU3
ARM GAS  /tmp/cc4EFlgW.s 			page 10


  52              	.LBB4:
  53              		.loc 1 463 3 view .LVU4
  54 0010 0194     		str	r4, [sp, #4]
  55              		.loc 1 463 3 view .LVU5
  56 0012 1B4B     		ldr	r3, .L3
  57 0014 1A6B     		ldr	r2, [r3, #48]
  58 0016 42F08002 		orr	r2, r2, #128
  59 001a 1A63     		str	r2, [r3, #48]
  60              		.loc 1 463 3 view .LVU6
  61 001c 1A6B     		ldr	r2, [r3, #48]
  62 001e 02F08002 		and	r2, r2, #128
  63 0022 0192     		str	r2, [sp, #4]
  64              		.loc 1 463 3 view .LVU7
  65 0024 019A     		ldr	r2, [sp, #4]
  66              	.LBE4:
  67              		.loc 1 463 3 view .LVU8
 464:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 464 3 view .LVU9
  69              	.LBB5:
  70              		.loc 1 464 3 view .LVU10
  71 0026 0294     		str	r4, [sp, #8]
  72              		.loc 1 464 3 view .LVU11
  73 0028 1A6B     		ldr	r2, [r3, #48]
  74 002a 42F00102 		orr	r2, r2, #1
  75 002e 1A63     		str	r2, [r3, #48]
  76              		.loc 1 464 3 view .LVU12
  77 0030 1B6B     		ldr	r3, [r3, #48]
  78 0032 03F00103 		and	r3, r3, #1
  79 0036 0293     		str	r3, [sp, #8]
  80              		.loc 1 464 3 view .LVU13
  81 0038 029B     		ldr	r3, [sp, #8]
  82              	.LBE5:
  83              		.loc 1 464 3 view .LVU14
 465:Core/Src/main.c **** 
 466:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 467:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  84              		.loc 1 467 3 view .LVU15
  85 003a 124D     		ldr	r5, .L3+4
  86 003c 2246     		mov	r2, r4
  87 003e 0321     		movs	r1, #3
  88 0040 2846     		mov	r0, r5
  89 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  90              	.LVL0:
 468:Core/Src/main.c **** 
 469:Core/Src/main.c ****   /*Configure GPIO pin : PA0 */
 470:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
  91              		.loc 1 470 3 view .LVU16
  92              		.loc 1 470 23 is_stmt 0 view .LVU17
  93 0046 0126     		movs	r6, #1
  94 0048 0396     		str	r6, [sp, #12]
 471:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  95              		.loc 1 471 3 is_stmt 1 view .LVU18
  96              		.loc 1 471 24 is_stmt 0 view .LVU19
  97 004a 0496     		str	r6, [sp, #16]
 472:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  98              		.loc 1 472 3 is_stmt 1 view .LVU20
  99              		.loc 1 472 24 is_stmt 0 view .LVU21
ARM GAS  /tmp/cc4EFlgW.s 			page 11


 100 004c 0227     		movs	r7, #2
 101 004e 0597     		str	r7, [sp, #20]
 473:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 102              		.loc 1 473 3 is_stmt 1 view .LVU22
 103              		.loc 1 473 25 is_stmt 0 view .LVU23
 104 0050 0694     		str	r4, [sp, #24]
 474:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 105              		.loc 1 474 3 is_stmt 1 view .LVU24
 106 0052 03A9     		add	r1, sp, #12
 107 0054 2846     		mov	r0, r5
 108 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 109              	.LVL1:
 475:Core/Src/main.c **** 
 476:Core/Src/main.c ****   /*Configure GPIO pin : PA1 */
 477:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
 110              		.loc 1 477 3 view .LVU25
 111              		.loc 1 477 23 is_stmt 0 view .LVU26
 112 005a 0397     		str	r7, [sp, #12]
 478:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 113              		.loc 1 478 3 is_stmt 1 view .LVU27
 114              		.loc 1 478 24 is_stmt 0 view .LVU28
 115 005c 0496     		str	r6, [sp, #16]
 479:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 116              		.loc 1 479 3 is_stmt 1 view .LVU29
 117              		.loc 1 479 24 is_stmt 0 view .LVU30
 118 005e 0596     		str	r6, [sp, #20]
 480:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 119              		.loc 1 480 3 is_stmt 1 view .LVU31
 120              		.loc 1 480 25 is_stmt 0 view .LVU32
 121 0060 0694     		str	r4, [sp, #24]
 481:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 122              		.loc 1 481 3 is_stmt 1 view .LVU33
 123 0062 03A9     		add	r1, sp, #12
 124 0064 2846     		mov	r0, r5
 125 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL2:
 482:Core/Src/main.c **** 
 483:Core/Src/main.c ****   /*Configure GPIO pin : PA2 */
 484:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 127              		.loc 1 484 3 view .LVU34
 128              		.loc 1 484 23 is_stmt 0 view .LVU35
 129 006a 0423     		movs	r3, #4
 130 006c 0393     		str	r3, [sp, #12]
 485:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 131              		.loc 1 485 3 is_stmt 1 view .LVU36
 132              		.loc 1 485 24 is_stmt 0 view .LVU37
 133 006e 0494     		str	r4, [sp, #16]
 486:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 134              		.loc 1 486 3 is_stmt 1 view .LVU38
 135              		.loc 1 486 24 is_stmt 0 view .LVU39
 136 0070 0594     		str	r4, [sp, #20]
 487:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 137              		.loc 1 487 3 is_stmt 1 view .LVU40
 138 0072 03A9     		add	r1, sp, #12
 139 0074 2846     		mov	r0, r5
 140 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 141              	.LVL3:
ARM GAS  /tmp/cc4EFlgW.s 			page 12


 488:Core/Src/main.c **** 
 489:Core/Src/main.c **** }
 142              		.loc 1 489 1 is_stmt 0 view .LVU41
 143 007a 09B0     		add	sp, sp, #36
 144              	.LCFI2:
 145              		.cfi_def_cfa_offset 20
 146              		@ sp needed
 147 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 148              	.L4:
 149 007e 00BF     		.align	2
 150              	.L3:
 151 0080 00380240 		.word	1073887232
 152 0084 00000240 		.word	1073872896
 153              		.cfi_endproc
 154              	.LFE223:
 156              		.section	.text.MX_DMA_Init,"ax",%progbits
 157              		.align	1
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	MX_DMA_Init:
 164              	.LFB222:
 441:Core/Src/main.c **** 
 165              		.loc 1 441 1 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 8
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 00B5     		push	{lr}
 170              	.LCFI3:
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 14, -4
 173 0002 83B0     		sub	sp, sp, #12
 174              	.LCFI4:
 175              		.cfi_def_cfa_offset 16
 444:Core/Src/main.c **** 
 176              		.loc 1 444 3 view .LVU43
 177              	.LBB6:
 444:Core/Src/main.c **** 
 178              		.loc 1 444 3 view .LVU44
 179 0004 0021     		movs	r1, #0
 180 0006 0191     		str	r1, [sp, #4]
 444:Core/Src/main.c **** 
 181              		.loc 1 444 3 view .LVU45
 182 0008 094B     		ldr	r3, .L7
 183 000a 1A6B     		ldr	r2, [r3, #48]
 184 000c 42F48002 		orr	r2, r2, #4194304
 185 0010 1A63     		str	r2, [r3, #48]
 444:Core/Src/main.c **** 
 186              		.loc 1 444 3 view .LVU46
 187 0012 1B6B     		ldr	r3, [r3, #48]
 188 0014 03F48003 		and	r3, r3, #4194304
 189 0018 0193     		str	r3, [sp, #4]
 444:Core/Src/main.c **** 
 190              		.loc 1 444 3 view .LVU47
 191 001a 019B     		ldr	r3, [sp, #4]
 192              	.LBE6:
ARM GAS  /tmp/cc4EFlgW.s 			page 13


 444:Core/Src/main.c **** 
 193              		.loc 1 444 3 view .LVU48
 448:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 194              		.loc 1 448 3 view .LVU49
 195 001c 0A46     		mov	r2, r1
 196 001e 3820     		movs	r0, #56
 197 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 198              	.LVL4:
 449:Core/Src/main.c **** 
 199              		.loc 1 449 3 view .LVU50
 200 0024 3820     		movs	r0, #56
 201 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 202              	.LVL5:
 451:Core/Src/main.c **** 
 203              		.loc 1 451 1 is_stmt 0 view .LVU51
 204 002a 03B0     		add	sp, sp, #12
 205              	.LCFI5:
 206              		.cfi_def_cfa_offset 4
 207              		@ sp needed
 208 002c 5DF804FB 		ldr	pc, [sp], #4
 209              	.L8:
 210              		.align	2
 211              	.L7:
 212 0030 00380240 		.word	1073887232
 213              		.cfi_endproc
 214              	.LFE222:
 216              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 217              		.align	1
 218              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	HAL_CAN_RxFifo0MsgPendingCallback:
 225              	.LVL6:
 226              	.LFB224:
 490:Core/Src/main.c **** 
 491:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 492:Core/Src/main.c **** 
 493:Core/Src/main.c **** // *** functions *** //
 494:Core/Src/main.c **** 
 495:Core/Src/main.c **** 
 496:Core/Src/main.c **** /**
 497:Core/Src/main.c ****  * overwriting the weak function defined in the includes which is the ISR for the CAN interrupt
 498:Core/Src/main.c ****  */
 499:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan1)
 500:Core/Src/main.c **** {
 227              		.loc 1 500 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 501:Core/Src/main.c ****   // if (HAL_CAN_GetRxMessage(hcan1, CAN_RX_FIFO0, &rxHeader, canRX) != HAL_OK)
 502:Core/Src/main.c ****   //   Error_Handler();
 503:Core/Src/main.c **** 
 504:Core/Src/main.c ****   // // get rinehart bus voltage
 505:Core/Src/main.c ****   // if (rxHeader.StdId == 0x0A7)    // TODO: sometimes rinehart sends 0 length messages so only re
ARM GAS  /tmp/cc4EFlgW.s 			page 14


 506:Core/Src/main.c ****   // {
 507:Core/Src/main.c ****   //   // rinehart voltage is spread across the first 2 bytes
 508:Core/Src/main.c **** 	//   int rine1 = canRX[0];
 509:Core/Src/main.c ****   //   int rine2 = canRX[1];
 510:Core/Src/main.c **** 
 511:Core/Src/main.c ****   //   // combine the first two bytes and assign that to the rinehart voltage
 512:Core/Src/main.c ****   //   rinehartVoltage = (rine2 << 8) | rine1;
 513:Core/Src/main.c ****   // }
 514:Core/Src/main.c **** 
 515:Core/Src/main.c ****   // // get BMS total voltages
 516:Core/Src/main.c ****   // if (rxHeader.StdId == 0x6B0)
 517:Core/Src/main.c ****   // {
 518:Core/Src/main.c ****   //   // BMS voltage is spread across the first 2 bytes
 519:Core/Src/main.c **** 	//   int volt1 = canRX[2];
 520:Core/Src/main.c ****   //   int volt2 = canRX[3];
 521:Core/Src/main.c **** 
 522:Core/Src/main.c ****   //   // combine the first two bytes and assign that to the BMS voltage
 523:Core/Src/main.c ****   //   bmsVoltage = (volt1 << 8) | volt2; // orion has a pre-scaller of *10
 524:Core/Src/main.c ****   // }
 525:Core/Src/main.c ****   
 526:Core/Src/main.c ****   // // update the value based on the rinehart parameter update message
 527:Core/Src/main.c ****   // if (rxHeader.StdId == 0x0C2){
 528:Core/Src/main.c ****   //   rinehartUpdate = canRX[2];
 529:Core/Src/main.c ****   // }
 530:Core/Src/main.c **** }
 232              		.loc 1 530 1 view .LVU53
 233 0000 7047     		bx	lr
 234              		.cfi_endproc
 235              	.LFE224:
 237              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 238              		.align	1
 239              		.global	HAL_TIM_PeriodElapsedCallback
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu fpv4-sp-d16
 245              	HAL_TIM_PeriodElapsedCallback:
 246              	.LVL7:
 247              	.LFB225:
 531:Core/Src/main.c **** 
 532:Core/Src/main.c **** 
 533:Core/Src/main.c **** /**
 534:Core/Src/main.c ****  * @brief 
 535:Core/Src/main.c ****  * 
 536:Core/Src/main.c ****  */
 537:Core/Src/main.c **** 
 538:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 539:Core/Src/main.c **** {
 248              		.loc 1 539 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 540:Core/Src/main.c ****   // // on __Hz interval
 541:Core/Src/main.c ****   // if (htim == &htim14)
 542:Core/Src/main.c ****   // {
 543:Core/Src/main.c ****   //   // build message for _____
ARM GAS  /tmp/cc4EFlgW.s 			page 15


 544:Core/Src/main.c ****   //   TxData[0] = readyToDrive;               // controled by precharge
 545:Core/Src/main.c ****   //   TxData[1] = DCDCFault;                  // 0 for now TODO: implement fault detection
 546:Core/Src/main.c ****   //   TxData[2] = vicoreTemp;                 // DMA update
 547:Core/Src/main.c ****   //   TxData[3] = rinehartVoltage & 0xFF;     // update on CAN message LSB
 548:Core/Src/main.c ****   //   TxData[4] = rinehartVoltage >> 8;       // update on CAN message MSB
 549:Core/Src/main.c ****   //   TxData[5] = bmsVoltage & 0xFF;          // update on CAN message LSB
 550:Core/Src/main.c ****   //   TxData[6] = bmsVoltage >> 8;            // update on CAN message MSB
 551:Core/Src/main.c ****   //   TxData[7] = prechargeState;             // show which state of precharge / driving we're in,
 552:Core/Src/main.c **** 
 553:Core/Src/main.c ****   //   // send message
 554:Core/Src/main.c ****   //   HAL_CAN_AddTxMessage(&hcan1, &txHeader1, TxData, &TxMailbox);
 555:Core/Src/main.c ****   // }
 556:Core/Src/main.c **** 
 557:Core/Src/main.c ****   // // // on __Hz interval 
 558:Core/Src/main.c ****   // // if(htim == &htim13)
 559:Core/Src/main.c ****   // // {
 560:Core/Src/main.c ****   // //   // check precharge status
 561:Core/Src/main.c ****   // //   prechargeControl();
 562:Core/Src/main.c ****   // // }
 563:Core/Src/main.c **** }
 253              		.loc 1 563 1 view .LVU55
 254 0000 7047     		bx	lr
 255              		.cfi_endproc
 256              	.LFE225:
 258              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 259              		.align	1
 260              		.global	HAL_ADC_ConvCpltCallback
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu fpv4-sp-d16
 266              	HAL_ADC_ConvCpltCallback:
 267              	.LVL8:
 268              	.LFB226:
 564:Core/Src/main.c **** 
 565:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 566:Core/Src/main.c **** {
 269              		.loc 1 566 1 view -0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 567:Core/Src/main.c ****   // TODO: check analog values for the temperature conversion
 568:Core/Src/main.c ****   // Define threshold for when the fan should turn on
 569:Core/Src/main.c **** 
 570:Core/Src/main.c ****   // update vicor temp
 571:Core/Src/main.c ****   // vicoreTemp = adc_buf[0];
 572:Core/Src/main.c **** 
 573:Core/Src/main.c ****   // // set fan based on value
 574:Core/Src/main.c ****   // if (vicoreTemp >= 2048)
 575:Core/Src/main.c ****   // {
 576:Core/Src/main.c ****   //   // set the fan high
 577:Core/Src/main.c ****   //   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 578:Core/Src/main.c ****   // }
 579:Core/Src/main.c **** 
 580:Core/Src/main.c ****   // else
 581:Core/Src/main.c ****   // {
ARM GAS  /tmp/cc4EFlgW.s 			page 16


 582:Core/Src/main.c ****   //   // set fan low
 583:Core/Src/main.c ****   //   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 584:Core/Src/main.c ****   // }
 585:Core/Src/main.c **** }
 274              		.loc 1 585 1 view .LVU57
 275 0000 7047     		bx	lr
 276              		.cfi_endproc
 277              	.LFE226:
 279              		.section	.text.Error_Handler,"ax",%progbits
 280              		.align	1
 281              		.global	Error_Handler
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 285              		.fpu fpv4-sp-d16
 287              	Error_Handler:
 288              	.LFB227:
 586:Core/Src/main.c **** 
 587:Core/Src/main.c **** /* USER CODE END 4 */
 588:Core/Src/main.c **** 
 589:Core/Src/main.c **** /**
 590:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 591:Core/Src/main.c ****   * @retval None
 592:Core/Src/main.c ****   */
 593:Core/Src/main.c **** void Error_Handler(void)
 594:Core/Src/main.c **** {
 289              		.loc 1 594 1 view -0
 290              		.cfi_startproc
 291              		@ Volatile: function does not return.
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              		@ link register save eliminated.
 595:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 596:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 597:Core/Src/main.c ****   __disable_irq();
 295              		.loc 1 597 3 view .LVU59
 296              	.LBB7:
 297              	.LBI7:
 298              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  /tmp/cc4EFlgW.s 			page 17


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/cc4EFlgW.s 			page 18


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc4EFlgW.s 			page 19


 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 299              		.loc 2 140 27 view .LVU60
 300              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 301              		.loc 2 142 3 view .LVU61
 302              		.syntax unified
 303              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 304 0000 72B6     		cpsid i
 305              	@ 0 "" 2
 306              		.thumb
 307              		.syntax unified
 308              	.L13:
 309              	.LBE8:
 310              	.LBE7:
 598:Core/Src/main.c ****   while (1)
 311              		.loc 1 598 3 discriminator 1 view .LVU62
 599:Core/Src/main.c ****   {
 600:Core/Src/main.c ****   }
 312              		.loc 1 600 3 discriminator 1 view .LVU63
 598:Core/Src/main.c ****   while (1)
 313              		.loc 1 598 9 discriminator 1 view .LVU64
 314 0002 FEE7     		b	.L13
 315              		.cfi_endproc
 316              	.LFE227:
 318              		.section	.text.MX_CAN1_Init,"ax",%progbits
 319              		.align	1
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu fpv4-sp-d16
 325              	MX_CAN1_Init:
 326              	.LFB219:
 307:Core/Src/main.c **** 
 327              		.loc 1 307 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 70B5     		push	{r4, r5, r6, lr}
 332              	.LCFI6:
 333              		.cfi_def_cfa_offset 16
 334              		.cfi_offset 4, -16
 335              		.cfi_offset 5, -12
 336              		.cfi_offset 6, -8
 337              		.cfi_offset 14, -4
 314:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 338              		.loc 1 314 3 view .LVU66
 314:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 339              		.loc 1 314 18 is_stmt 0 view .LVU67
 340 0002 2548     		ldr	r0, .L18
ARM GAS  /tmp/cc4EFlgW.s 			page 20


 341 0004 254B     		ldr	r3, .L18+4
 342 0006 0360     		str	r3, [r0]
 315:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 343              		.loc 1 315 3 is_stmt 1 view .LVU68
 315:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 344              		.loc 1 315 24 is_stmt 0 view .LVU69
 345 0008 1223     		movs	r3, #18
 346 000a 4360     		str	r3, [r0, #4]
 316:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 347              		.loc 1 316 3 is_stmt 1 view .LVU70
 316:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 348              		.loc 1 316 19 is_stmt 0 view .LVU71
 349 000c 0023     		movs	r3, #0
 350 000e 8360     		str	r3, [r0, #8]
 317:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 351              		.loc 1 317 3 is_stmt 1 view .LVU72
 317:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 352              		.loc 1 317 28 is_stmt 0 view .LVU73
 353 0010 C360     		str	r3, [r0, #12]
 318:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 354              		.loc 1 318 3 is_stmt 1 view .LVU74
 318:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 355              		.loc 1 318 23 is_stmt 0 view .LVU75
 356 0012 4FF40032 		mov	r2, #131072
 357 0016 0261     		str	r2, [r0, #16]
 319:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 358              		.loc 1 319 3 is_stmt 1 view .LVU76
 319:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 359              		.loc 1 319 23 is_stmt 0 view .LVU77
 360 0018 4361     		str	r3, [r0, #20]
 320:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 361              		.loc 1 320 3 is_stmt 1 view .LVU78
 320:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 362              		.loc 1 320 32 is_stmt 0 view .LVU79
 363 001a 0376     		strb	r3, [r0, #24]
 321:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 364              		.loc 1 321 3 is_stmt 1 view .LVU80
 321:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 365              		.loc 1 321 25 is_stmt 0 view .LVU81
 366 001c 0122     		movs	r2, #1
 367 001e 4276     		strb	r2, [r0, #25]
 322:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 368              		.loc 1 322 3 is_stmt 1 view .LVU82
 322:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = DISABLE;
 369              		.loc 1 322 25 is_stmt 0 view .LVU83
 370 0020 8376     		strb	r3, [r0, #26]
 323:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 371              		.loc 1 323 3 is_stmt 1 view .LVU84
 323:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 372              		.loc 1 323 33 is_stmt 0 view .LVU85
 373 0022 C376     		strb	r3, [r0, #27]
 324:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 374              		.loc 1 324 3 is_stmt 1 view .LVU86
 324:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 375              		.loc 1 324 32 is_stmt 0 view .LVU87
 376 0024 0377     		strb	r3, [r0, #28]
 325:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
ARM GAS  /tmp/cc4EFlgW.s 			page 21


 377              		.loc 1 325 3 is_stmt 1 view .LVU88
 325:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 378              		.loc 1 325 35 is_stmt 0 view .LVU89
 379 0026 4377     		strb	r3, [r0, #29]
 326:Core/Src/main.c ****   {
 380              		.loc 1 326 3 is_stmt 1 view .LVU90
 326:Core/Src/main.c ****   {
 381              		.loc 1 326 7 is_stmt 0 view .LVU91
 382 0028 FFF7FEFF 		bl	HAL_CAN_Init
 383              	.LVL9:
 326:Core/Src/main.c ****   {
 384              		.loc 1 326 6 view .LVU92
 385 002c 0028     		cmp	r0, #0
 386 002e 31D1     		bne	.L17
 333:Core/Src/main.c ****   	canFilter0.FilterIdLow = 0x000;
 387              		.loc 1 333 5 is_stmt 1 view .LVU93
 333:Core/Src/main.c ****   	canFilter0.FilterIdLow = 0x000;
 388              		.loc 1 333 29 is_stmt 0 view .LVU94
 389 0030 1B49     		ldr	r1, .L18+8
 390 0032 4FF45643 		mov	r3, #54784
 391 0036 0B60     		str	r3, [r1]
 334:Core/Src/main.c ****     canFilter0.FilterMaskIdHigh = 0x6B0 << 5;
 392              		.loc 1 334 4 is_stmt 1 view .LVU95
 334:Core/Src/main.c ****     canFilter0.FilterMaskIdHigh = 0x6B0 << 5;
 393              		.loc 1 334 27 is_stmt 0 view .LVU96
 394 0038 0024     		movs	r4, #0
 395 003a 4C60     		str	r4, [r1, #4]
 335:Core/Src/main.c ****   	canFilter0.FilterMaskIdLow = 0x000;
 396              		.loc 1 335 5 is_stmt 1 view .LVU97
 335:Core/Src/main.c ****   	canFilter0.FilterMaskIdLow = 0x000;
 397              		.loc 1 335 33 is_stmt 0 view .LVU98
 398 003c 8B60     		str	r3, [r1, #8]
 336:Core/Src/main.c ****     canFilter0.FilterBank = 0;
 399              		.loc 1 336 4 is_stmt 1 view .LVU99
 336:Core/Src/main.c ****     canFilter0.FilterBank = 0;
 400              		.loc 1 336 31 is_stmt 0 view .LVU100
 401 003e CC60     		str	r4, [r1, #12]
 337:Core/Src/main.c ****   	canFilter0.FilterMode = CAN_FILTERMODE_IDMASK;
 402              		.loc 1 337 5 is_stmt 1 view .LVU101
 337:Core/Src/main.c ****   	canFilter0.FilterMode = CAN_FILTERMODE_IDMASK;
 403              		.loc 1 337 27 is_stmt 0 view .LVU102
 404 0040 4C61     		str	r4, [r1, #20]
 338:Core/Src/main.c ****   	canFilter0.FilterFIFOAssignment = CAN_RX_FIFO0;
 405              		.loc 1 338 4 is_stmt 1 view .LVU103
 338:Core/Src/main.c ****   	canFilter0.FilterFIFOAssignment = CAN_RX_FIFO0;
 406              		.loc 1 338 26 is_stmt 0 view .LVU104
 407 0042 8C61     		str	r4, [r1, #24]
 339:Core/Src/main.c ****   	canFilter0.FilterScale = CAN_FILTERSCALE_32BIT;
 408              		.loc 1 339 4 is_stmt 1 view .LVU105
 339:Core/Src/main.c ****   	canFilter0.FilterScale = CAN_FILTERSCALE_32BIT;
 409              		.loc 1 339 36 is_stmt 0 view .LVU106
 410 0044 0C61     		str	r4, [r1, #16]
 340:Core/Src/main.c ****   	canFilter0.FilterActivation = ENABLE;
 411              		.loc 1 340 4 is_stmt 1 view .LVU107
 340:Core/Src/main.c ****   	canFilter0.FilterActivation = ENABLE;
 412              		.loc 1 340 27 is_stmt 0 view .LVU108
 413 0046 0125     		movs	r5, #1
ARM GAS  /tmp/cc4EFlgW.s 			page 22


 414 0048 CD61     		str	r5, [r1, #28]
 341:Core/Src/main.c **** 
 415              		.loc 1 341 4 is_stmt 1 view .LVU109
 341:Core/Src/main.c **** 
 416              		.loc 1 341 32 is_stmt 0 view .LVU110
 417 004a 0D62     		str	r5, [r1, #32]
 343:Core/Src/main.c **** 
 418              		.loc 1 343 5 is_stmt 1 view .LVU111
 419 004c 124E     		ldr	r6, .L18
 420 004e 3046     		mov	r0, r6
 421 0050 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 422              	.LVL10:
 346:Core/Src/main.c ****   	canFilter1.FilterIdLow = 0x000;
 423              		.loc 1 346 5 view .LVU112
 346:Core/Src/main.c ****   	canFilter1.FilterIdLow = 0x000;
 424              		.loc 1 346 29 is_stmt 0 view .LVU113
 425 0054 1349     		ldr	r1, .L18+12
 426 0056 4FF4A753 		mov	r3, #5344
 427 005a 0B60     		str	r3, [r1]
 347:Core/Src/main.c ****     canFilter1.FilterMaskIdHigh = 0x0A7 << 5;
 428              		.loc 1 347 4 is_stmt 1 view .LVU114
 347:Core/Src/main.c ****     canFilter1.FilterMaskIdHigh = 0x0A7 << 5;
 429              		.loc 1 347 27 is_stmt 0 view .LVU115
 430 005c 4C60     		str	r4, [r1, #4]
 348:Core/Src/main.c ****   	canFilter1.FilterMaskIdLow = 0x000;
 431              		.loc 1 348 5 is_stmt 1 view .LVU116
 348:Core/Src/main.c ****   	canFilter1.FilterMaskIdLow = 0x000;
 432              		.loc 1 348 33 is_stmt 0 view .LVU117
 433 005e 8B60     		str	r3, [r1, #8]
 349:Core/Src/main.c ****     canFilter1.FilterBank = 1;
 434              		.loc 1 349 4 is_stmt 1 view .LVU118
 349:Core/Src/main.c ****     canFilter1.FilterBank = 1;
 435              		.loc 1 349 31 is_stmt 0 view .LVU119
 436 0060 CC60     		str	r4, [r1, #12]
 350:Core/Src/main.c ****   	canFilter1.FilterMode = CAN_FILTERMODE_IDMASK;
 437              		.loc 1 350 5 is_stmt 1 view .LVU120
 350:Core/Src/main.c ****   	canFilter1.FilterMode = CAN_FILTERMODE_IDMASK;
 438              		.loc 1 350 27 is_stmt 0 view .LVU121
 439 0062 4D61     		str	r5, [r1, #20]
 351:Core/Src/main.c ****   	canFilter1.FilterFIFOAssignment = CAN_RX_FIFO0;
 440              		.loc 1 351 4 is_stmt 1 view .LVU122
 351:Core/Src/main.c ****   	canFilter1.FilterFIFOAssignment = CAN_RX_FIFO0;
 441              		.loc 1 351 26 is_stmt 0 view .LVU123
 442 0064 8C61     		str	r4, [r1, #24]
 352:Core/Src/main.c ****   	canFilter1.FilterScale = CAN_FILTERSCALE_32BIT;
 443              		.loc 1 352 4 is_stmt 1 view .LVU124
 352:Core/Src/main.c ****   	canFilter1.FilterScale = CAN_FILTERSCALE_32BIT;
 444              		.loc 1 352 36 is_stmt 0 view .LVU125
 445 0066 0C61     		str	r4, [r1, #16]
 353:Core/Src/main.c ****   	canFilter1.FilterActivation = ENABLE;
 446              		.loc 1 353 4 is_stmt 1 view .LVU126
 353:Core/Src/main.c ****   	canFilter1.FilterActivation = ENABLE;
 447              		.loc 1 353 27 is_stmt 0 view .LVU127
 448 0068 CD61     		str	r5, [r1, #28]
 354:Core/Src/main.c **** 
 449              		.loc 1 354 4 is_stmt 1 view .LVU128
 354:Core/Src/main.c **** 
ARM GAS  /tmp/cc4EFlgW.s 			page 23


 450              		.loc 1 354 32 is_stmt 0 view .LVU129
 451 006a 0D62     		str	r5, [r1, #32]
 356:Core/Src/main.c **** 
 452              		.loc 1 356 5 is_stmt 1 view .LVU130
 453 006c 3046     		mov	r0, r6
 454 006e FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 455              	.LVL11:
 359:Core/Src/main.c ****   	canFilter2.FilterIdLow = 0x000;
 456              		.loc 1 359 5 view .LVU131
 359:Core/Src/main.c ****   	canFilter2.FilterIdLow = 0x000;
 457              		.loc 1 359 29 is_stmt 0 view .LVU132
 458 0072 0D49     		ldr	r1, .L18+16
 459 0074 4FF4C253 		mov	r3, #6208
 460 0078 0B60     		str	r3, [r1]
 360:Core/Src/main.c ****     canFilter2.FilterMaskIdHigh = 0x0C2 << 5;
 461              		.loc 1 360 4 is_stmt 1 view .LVU133
 360:Core/Src/main.c ****     canFilter2.FilterMaskIdHigh = 0x0C2 << 5;
 462              		.loc 1 360 27 is_stmt 0 view .LVU134
 463 007a 4C60     		str	r4, [r1, #4]
 361:Core/Src/main.c ****   	canFilter2.FilterMaskIdLow = 0x000;
 464              		.loc 1 361 5 is_stmt 1 view .LVU135
 361:Core/Src/main.c ****   	canFilter2.FilterMaskIdLow = 0x000;
 465              		.loc 1 361 33 is_stmt 0 view .LVU136
 466 007c 8B60     		str	r3, [r1, #8]
 362:Core/Src/main.c ****     canFilter2.FilterBank = 2;
 467              		.loc 1 362 4 is_stmt 1 view .LVU137
 362:Core/Src/main.c ****     canFilter2.FilterBank = 2;
 468              		.loc 1 362 31 is_stmt 0 view .LVU138
 469 007e CC60     		str	r4, [r1, #12]
 363:Core/Src/main.c ****   	canFilter2.FilterMode = CAN_FILTERMODE_IDMASK;
 470              		.loc 1 363 5 is_stmt 1 view .LVU139
 363:Core/Src/main.c ****   	canFilter2.FilterMode = CAN_FILTERMODE_IDMASK;
 471              		.loc 1 363 27 is_stmt 0 view .LVU140
 472 0080 0223     		movs	r3, #2
 473 0082 4B61     		str	r3, [r1, #20]
 364:Core/Src/main.c ****   	canFilter2.FilterFIFOAssignment = CAN_RX_FIFO0;
 474              		.loc 1 364 4 is_stmt 1 view .LVU141
 364:Core/Src/main.c ****   	canFilter2.FilterFIFOAssignment = CAN_RX_FIFO0;
 475              		.loc 1 364 26 is_stmt 0 view .LVU142
 476 0084 8C61     		str	r4, [r1, #24]
 365:Core/Src/main.c ****   	canFilter2.FilterScale = CAN_FILTERSCALE_32BIT;
 477              		.loc 1 365 4 is_stmt 1 view .LVU143
 365:Core/Src/main.c ****   	canFilter2.FilterScale = CAN_FILTERSCALE_32BIT;
 478              		.loc 1 365 36 is_stmt 0 view .LVU144
 479 0086 0C61     		str	r4, [r1, #16]
 366:Core/Src/main.c ****   	canFilter2.FilterActivation = ENABLE;
 480              		.loc 1 366 4 is_stmt 1 view .LVU145
 366:Core/Src/main.c ****   	canFilter2.FilterActivation = ENABLE;
 481              		.loc 1 366 27 is_stmt 0 view .LVU146
 482 0088 CD61     		str	r5, [r1, #28]
 367:Core/Src/main.c **** 
 483              		.loc 1 367 4 is_stmt 1 view .LVU147
 367:Core/Src/main.c **** 
 484              		.loc 1 367 32 is_stmt 0 view .LVU148
 485 008a 0D62     		str	r5, [r1, #32]
 369:Core/Src/main.c **** 
 486              		.loc 1 369 5 is_stmt 1 view .LVU149
ARM GAS  /tmp/cc4EFlgW.s 			page 24


 487 008c 3046     		mov	r0, r6
 488 008e FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 489              	.LVL12:
 373:Core/Src/main.c **** 
 490              		.loc 1 373 1 is_stmt 0 view .LVU150
 491 0092 70BD     		pop	{r4, r5, r6, pc}
 492              	.L17:
 328:Core/Src/main.c ****   }
 493              		.loc 1 328 5 is_stmt 1 view .LVU151
 494 0094 FFF7FEFF 		bl	Error_Handler
 495              	.LVL13:
 496              	.L19:
 497              		.align	2
 498              	.L18:
 499 0098 00000000 		.word	hcan1
 500 009c 00640040 		.word	1073767424
 501 00a0 00000000 		.word	canFilter0
 502 00a4 00000000 		.word	canFilter1
 503 00a8 00000000 		.word	canFilter2
 504              		.cfi_endproc
 505              	.LFE219:
 507              		.section	.text.MX_ADC1_Init,"ax",%progbits
 508              		.align	1
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu fpv4-sp-d16
 514              	MX_ADC1_Init:
 515              	.LFB218:
 260:Core/Src/main.c **** 
 516              		.loc 1 260 1 view -0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 16
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520 0000 00B5     		push	{lr}
 521              	.LCFI7:
 522              		.cfi_def_cfa_offset 4
 523              		.cfi_offset 14, -4
 524 0002 85B0     		sub	sp, sp, #20
 525              	.LCFI8:
 526              		.cfi_def_cfa_offset 24
 265:Core/Src/main.c **** 
 527              		.loc 1 265 3 view .LVU153
 265:Core/Src/main.c **** 
 528              		.loc 1 265 26 is_stmt 0 view .LVU154
 529 0004 0023     		movs	r3, #0
 530 0006 0093     		str	r3, [sp]
 531 0008 0193     		str	r3, [sp, #4]
 532 000a 0293     		str	r3, [sp, #8]
 533 000c 0393     		str	r3, [sp, #12]
 271:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 534              		.loc 1 271 3 is_stmt 1 view .LVU155
 271:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 535              		.loc 1 271 18 is_stmt 0 view .LVU156
 536 000e 1448     		ldr	r0, .L26
 537 0010 144A     		ldr	r2, .L26+4
 538 0012 0260     		str	r2, [r0]
ARM GAS  /tmp/cc4EFlgW.s 			page 25


 272:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 539              		.loc 1 272 3 is_stmt 1 view .LVU157
 272:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 540              		.loc 1 272 29 is_stmt 0 view .LVU158
 541 0014 4FF48032 		mov	r2, #65536
 542 0018 4260     		str	r2, [r0, #4]
 273:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 543              		.loc 1 273 3 is_stmt 1 view .LVU159
 273:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 544              		.loc 1 273 25 is_stmt 0 view .LVU160
 545 001a 8360     		str	r3, [r0, #8]
 274:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 546              		.loc 1 274 3 is_stmt 1 view .LVU161
 274:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 547              		.loc 1 274 27 is_stmt 0 view .LVU162
 548 001c 0361     		str	r3, [r0, #16]
 275:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 549              		.loc 1 275 3 is_stmt 1 view .LVU163
 275:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 550              		.loc 1 275 33 is_stmt 0 view .LVU164
 551 001e 0122     		movs	r2, #1
 552 0020 0276     		strb	r2, [r0, #24]
 276:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 553              		.loc 1 276 3 is_stmt 1 view .LVU165
 276:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 554              		.loc 1 276 36 is_stmt 0 view .LVU166
 555 0022 80F82030 		strb	r3, [r0, #32]
 277:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 556              		.loc 1 277 3 is_stmt 1 view .LVU167
 277:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 557              		.loc 1 277 35 is_stmt 0 view .LVU168
 558 0026 C362     		str	r3, [r0, #44]
 278:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 559              		.loc 1 278 3 is_stmt 1 view .LVU169
 278:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 560              		.loc 1 278 31 is_stmt 0 view .LVU170
 561 0028 0F49     		ldr	r1, .L26+8
 562 002a 8162     		str	r1, [r0, #40]
 279:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 563              		.loc 1 279 3 is_stmt 1 view .LVU171
 279:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 564              		.loc 1 279 24 is_stmt 0 view .LVU172
 565 002c C360     		str	r3, [r0, #12]
 280:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 566              		.loc 1 280 3 is_stmt 1 view .LVU173
 280:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 567              		.loc 1 280 30 is_stmt 0 view .LVU174
 568 002e C261     		str	r2, [r0, #28]
 281:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 569              		.loc 1 281 3 is_stmt 1 view .LVU175
 281:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 570              		.loc 1 281 36 is_stmt 0 view .LVU176
 571 0030 80F83020 		strb	r2, [r0, #48]
 282:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 572              		.loc 1 282 3 is_stmt 1 view .LVU177
 282:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 573              		.loc 1 282 27 is_stmt 0 view .LVU178
ARM GAS  /tmp/cc4EFlgW.s 			page 26


 574 0034 4261     		str	r2, [r0, #20]
 283:Core/Src/main.c ****   {
 575              		.loc 1 283 3 is_stmt 1 view .LVU179
 283:Core/Src/main.c ****   {
 576              		.loc 1 283 7 is_stmt 0 view .LVU180
 577 0036 FFF7FEFF 		bl	HAL_ADC_Init
 578              	.LVL14:
 283:Core/Src/main.c ****   {
 579              		.loc 1 283 6 view .LVU181
 580 003a 68B9     		cbnz	r0, .L24
 289:Core/Src/main.c ****   sConfig.Rank = 1;
 581              		.loc 1 289 3 is_stmt 1 view .LVU182
 289:Core/Src/main.c ****   sConfig.Rank = 1;
 582              		.loc 1 289 19 is_stmt 0 view .LVU183
 583 003c 0723     		movs	r3, #7
 584 003e 0093     		str	r3, [sp]
 290:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 585              		.loc 1 290 3 is_stmt 1 view .LVU184
 290:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 586              		.loc 1 290 16 is_stmt 0 view .LVU185
 587 0040 0123     		movs	r3, #1
 588 0042 0193     		str	r3, [sp, #4]
 291:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 589              		.loc 1 291 3 is_stmt 1 view .LVU186
 291:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 590              		.loc 1 291 24 is_stmt 0 view .LVU187
 591 0044 0023     		movs	r3, #0
 592 0046 0293     		str	r3, [sp, #8]
 292:Core/Src/main.c ****   {
 593              		.loc 1 292 3 is_stmt 1 view .LVU188
 292:Core/Src/main.c ****   {
 594              		.loc 1 292 7 is_stmt 0 view .LVU189
 595 0048 6946     		mov	r1, sp
 596 004a 0548     		ldr	r0, .L26
 597 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 598              	.LVL15:
 292:Core/Src/main.c ****   {
 599              		.loc 1 292 6 view .LVU190
 600 0050 20B9     		cbnz	r0, .L25
 299:Core/Src/main.c **** 
 601              		.loc 1 299 1 view .LVU191
 602 0052 05B0     		add	sp, sp, #20
 603              	.LCFI9:
 604              		.cfi_remember_state
 605              		.cfi_def_cfa_offset 4
 606              		@ sp needed
 607 0054 5DF804FB 		ldr	pc, [sp], #4
 608              	.L24:
 609              	.LCFI10:
 610              		.cfi_restore_state
 285:Core/Src/main.c ****   }
 611              		.loc 1 285 5 is_stmt 1 view .LVU192
 612 0058 FFF7FEFF 		bl	Error_Handler
 613              	.LVL16:
 614              	.L25:
 294:Core/Src/main.c ****   }
 615              		.loc 1 294 5 view .LVU193
ARM GAS  /tmp/cc4EFlgW.s 			page 27


 616 005c FFF7FEFF 		bl	Error_Handler
 617              	.LVL17:
 618              	.L27:
 619              		.align	2
 620              	.L26:
 621 0060 00000000 		.word	hadc1
 622 0064 00200140 		.word	1073815552
 623 0068 0100000F 		.word	251658241
 624              		.cfi_endproc
 625              	.LFE218:
 627              		.section	.text.MX_TIM14_Init,"ax",%progbits
 628              		.align	1
 629              		.syntax unified
 630              		.thumb
 631              		.thumb_func
 632              		.fpu fpv4-sp-d16
 634              	MX_TIM14_Init:
 635              	.LFB221:
 412:Core/Src/main.c **** 
 636              		.loc 1 412 1 view -0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640 0000 08B5     		push	{r3, lr}
 641              	.LCFI11:
 642              		.cfi_def_cfa_offset 8
 643              		.cfi_offset 3, -8
 644              		.cfi_offset 14, -4
 421:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 645              		.loc 1 421 3 view .LVU195
 421:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 646              		.loc 1 421 19 is_stmt 0 view .LVU196
 647 0002 0948     		ldr	r0, .L32
 648 0004 094B     		ldr	r3, .L32+4
 649 0006 0360     		str	r3, [r0]
 422:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 650              		.loc 1 422 3 is_stmt 1 view .LVU197
 422:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 651              		.loc 1 422 25 is_stmt 0 view .LVU198
 652 0008 42F22733 		movw	r3, #8999
 653 000c 4360     		str	r3, [r0, #4]
 423:Core/Src/main.c ****   htim14.Init.Period = 500-1;
 654              		.loc 1 423 3 is_stmt 1 view .LVU199
 423:Core/Src/main.c ****   htim14.Init.Period = 500-1;
 655              		.loc 1 423 27 is_stmt 0 view .LVU200
 656 000e 0023     		movs	r3, #0
 657 0010 8360     		str	r3, [r0, #8]
 424:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 658              		.loc 1 424 3 is_stmt 1 view .LVU201
 424:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 659              		.loc 1 424 22 is_stmt 0 view .LVU202
 660 0012 40F2F312 		movw	r2, #499
 661 0016 C260     		str	r2, [r0, #12]
 425:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 662              		.loc 1 425 3 is_stmt 1 view .LVU203
 425:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 663              		.loc 1 425 29 is_stmt 0 view .LVU204
ARM GAS  /tmp/cc4EFlgW.s 			page 28


 664 0018 0361     		str	r3, [r0, #16]
 426:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 665              		.loc 1 426 3 is_stmt 1 view .LVU205
 426:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 666              		.loc 1 426 33 is_stmt 0 view .LVU206
 667 001a 8361     		str	r3, [r0, #24]
 427:Core/Src/main.c ****   {
 668              		.loc 1 427 3 is_stmt 1 view .LVU207
 427:Core/Src/main.c ****   {
 669              		.loc 1 427 7 is_stmt 0 view .LVU208
 670 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 671              	.LVL18:
 427:Core/Src/main.c ****   {
 672              		.loc 1 427 6 view .LVU209
 673 0020 00B9     		cbnz	r0, .L31
 435:Core/Src/main.c **** 
 674              		.loc 1 435 1 view .LVU210
 675 0022 08BD     		pop	{r3, pc}
 676              	.L31:
 429:Core/Src/main.c ****   }
 677              		.loc 1 429 5 is_stmt 1 view .LVU211
 678 0024 FFF7FEFF 		bl	Error_Handler
 679              	.LVL19:
 680              	.L33:
 681              		.align	2
 682              	.L32:
 683 0028 00000000 		.word	htim14
 684 002c 00200040 		.word	1073750016
 685              		.cfi_endproc
 686              	.LFE221:
 688              		.section	.text.MX_TIM13_Init,"ax",%progbits
 689              		.align	1
 690              		.syntax unified
 691              		.thumb
 692              		.thumb_func
 693              		.fpu fpv4-sp-d16
 695              	MX_TIM13_Init:
 696              	.LFB220:
 381:Core/Src/main.c **** 
 697              		.loc 1 381 1 view -0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701 0000 08B5     		push	{r3, lr}
 702              	.LCFI12:
 703              		.cfi_def_cfa_offset 8
 704              		.cfi_offset 3, -8
 705              		.cfi_offset 14, -4
 390:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 706              		.loc 1 390 3 view .LVU213
 390:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 707              		.loc 1 390 19 is_stmt 0 view .LVU214
 708 0002 0948     		ldr	r0, .L38
 709 0004 094B     		ldr	r3, .L38+4
 710 0006 0360     		str	r3, [r0]
 391:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 711              		.loc 1 391 3 is_stmt 1 view .LVU215
ARM GAS  /tmp/cc4EFlgW.s 			page 29


 391:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 712              		.loc 1 391 25 is_stmt 0 view .LVU216
 713 0008 42F22733 		movw	r3, #8999
 714 000c 4360     		str	r3, [r0, #4]
 392:Core/Src/main.c ****   htim13.Init.Period = 1000-1;
 715              		.loc 1 392 3 is_stmt 1 view .LVU217
 392:Core/Src/main.c ****   htim13.Init.Period = 1000-1;
 716              		.loc 1 392 27 is_stmt 0 view .LVU218
 717 000e 0023     		movs	r3, #0
 718 0010 8360     		str	r3, [r0, #8]
 393:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 719              		.loc 1 393 3 is_stmt 1 view .LVU219
 393:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 720              		.loc 1 393 22 is_stmt 0 view .LVU220
 721 0012 40F2E732 		movw	r2, #999
 722 0016 C260     		str	r2, [r0, #12]
 394:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 723              		.loc 1 394 3 is_stmt 1 view .LVU221
 394:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 724              		.loc 1 394 29 is_stmt 0 view .LVU222
 725 0018 0361     		str	r3, [r0, #16]
 395:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 726              		.loc 1 395 3 is_stmt 1 view .LVU223
 395:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 727              		.loc 1 395 33 is_stmt 0 view .LVU224
 728 001a 8361     		str	r3, [r0, #24]
 396:Core/Src/main.c ****   {
 729              		.loc 1 396 3 is_stmt 1 view .LVU225
 396:Core/Src/main.c ****   {
 730              		.loc 1 396 7 is_stmt 0 view .LVU226
 731 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 732              	.LVL20:
 396:Core/Src/main.c ****   {
 733              		.loc 1 396 6 view .LVU227
 734 0020 00B9     		cbnz	r0, .L37
 404:Core/Src/main.c **** 
 735              		.loc 1 404 1 view .LVU228
 736 0022 08BD     		pop	{r3, pc}
 737              	.L37:
 398:Core/Src/main.c ****   }
 738              		.loc 1 398 5 is_stmt 1 view .LVU229
 739 0024 FFF7FEFF 		bl	Error_Handler
 740              	.LVL21:
 741              	.L39:
 742              		.align	2
 743              	.L38:
 744 0028 00000000 		.word	htim13
 745 002c 001C0040 		.word	1073748992
 746              		.cfi_endproc
 747              	.LFE220:
 749              		.section	.text.SystemClock_Config,"ax",%progbits
 750              		.align	1
 751              		.global	SystemClock_Config
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 755              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc4EFlgW.s 			page 30


 757              	SystemClock_Config:
 758              	.LFB217:
 214:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 759              		.loc 1 214 1 view -0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 80
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763 0000 00B5     		push	{lr}
 764              	.LCFI13:
 765              		.cfi_def_cfa_offset 4
 766              		.cfi_offset 14, -4
 767 0002 95B0     		sub	sp, sp, #84
 768              	.LCFI14:
 769              		.cfi_def_cfa_offset 88
 215:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 770              		.loc 1 215 3 view .LVU231
 215:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 771              		.loc 1 215 22 is_stmt 0 view .LVU232
 772 0004 3422     		movs	r2, #52
 773 0006 0021     		movs	r1, #0
 774 0008 07A8     		add	r0, sp, #28
 775 000a FFF7FEFF 		bl	memset
 776              	.LVL22:
 216:Core/Src/main.c **** 
 777              		.loc 1 216 3 is_stmt 1 view .LVU233
 216:Core/Src/main.c **** 
 778              		.loc 1 216 22 is_stmt 0 view .LVU234
 779 000e 0023     		movs	r3, #0
 780 0010 0293     		str	r3, [sp, #8]
 781 0012 0393     		str	r3, [sp, #12]
 782 0014 0493     		str	r3, [sp, #16]
 783 0016 0593     		str	r3, [sp, #20]
 784 0018 0693     		str	r3, [sp, #24]
 220:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 785              		.loc 1 220 3 is_stmt 1 view .LVU235
 786              	.LBB9:
 220:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 787              		.loc 1 220 3 view .LVU236
 788 001a 0093     		str	r3, [sp]
 220:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 789              		.loc 1 220 3 view .LVU237
 790 001c 1E4A     		ldr	r2, .L46
 791 001e 116C     		ldr	r1, [r2, #64]
 792 0020 41F08051 		orr	r1, r1, #268435456
 793 0024 1164     		str	r1, [r2, #64]
 220:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 794              		.loc 1 220 3 view .LVU238
 795 0026 126C     		ldr	r2, [r2, #64]
 796 0028 02F08052 		and	r2, r2, #268435456
 797 002c 0092     		str	r2, [sp]
 220:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 798              		.loc 1 220 3 view .LVU239
 799 002e 009A     		ldr	r2, [sp]
 800              	.LBE9:
 220:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 801              		.loc 1 220 3 view .LVU240
 221:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
ARM GAS  /tmp/cc4EFlgW.s 			page 31


 802              		.loc 1 221 3 view .LVU241
 803              	.LBB10:
 221:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 804              		.loc 1 221 3 view .LVU242
 805 0030 0193     		str	r3, [sp, #4]
 221:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 806              		.loc 1 221 3 view .LVU243
 807 0032 1A4A     		ldr	r2, .L46+4
 808 0034 1168     		ldr	r1, [r2]
 809 0036 41F44041 		orr	r1, r1, #49152
 810 003a 1160     		str	r1, [r2]
 221:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 811              		.loc 1 221 3 view .LVU244
 812 003c 1268     		ldr	r2, [r2]
 813 003e 02F44042 		and	r2, r2, #49152
 814 0042 0192     		str	r2, [sp, #4]
 221:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 815              		.loc 1 221 3 view .LVU245
 816 0044 019A     		ldr	r2, [sp, #4]
 817              	.LBE10:
 221:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 818              		.loc 1 221 3 view .LVU246
 225:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 819              		.loc 1 225 3 view .LVU247
 225:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 820              		.loc 1 225 36 is_stmt 0 view .LVU248
 821 0046 0222     		movs	r2, #2
 822 0048 0792     		str	r2, [sp, #28]
 226:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 823              		.loc 1 226 3 is_stmt 1 view .LVU249
 226:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 824              		.loc 1 226 30 is_stmt 0 view .LVU250
 825 004a 0121     		movs	r1, #1
 826 004c 0A91     		str	r1, [sp, #40]
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 827              		.loc 1 227 3 is_stmt 1 view .LVU251
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 828              		.loc 1 227 41 is_stmt 0 view .LVU252
 829 004e 1021     		movs	r1, #16
 830 0050 0B91     		str	r1, [sp, #44]
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 831              		.loc 1 228 3 is_stmt 1 view .LVU253
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 832              		.loc 1 228 34 is_stmt 0 view .LVU254
 833 0052 0D92     		str	r2, [sp, #52]
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 834              		.loc 1 229 3 is_stmt 1 view .LVU255
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 835              		.loc 1 229 35 is_stmt 0 view .LVU256
 836 0054 0E93     		str	r3, [sp, #56]
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 837              		.loc 1 230 3 is_stmt 1 view .LVU257
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 838              		.loc 1 230 30 is_stmt 0 view .LVU258
 839 0056 0823     		movs	r3, #8
 840 0058 0F93     		str	r3, [sp, #60]
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
ARM GAS  /tmp/cc4EFlgW.s 			page 32


 841              		.loc 1 231 3 is_stmt 1 view .LVU259
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 842              		.loc 1 231 30 is_stmt 0 view .LVU260
 843 005a 5A23     		movs	r3, #90
 844 005c 1093     		str	r3, [sp, #64]
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 845              		.loc 1 232 3 is_stmt 1 view .LVU261
 232:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 846              		.loc 1 232 30 is_stmt 0 view .LVU262
 847 005e 1192     		str	r2, [sp, #68]
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 848              		.loc 1 233 3 is_stmt 1 view .LVU263
 233:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 849              		.loc 1 233 30 is_stmt 0 view .LVU264
 850 0060 1292     		str	r2, [sp, #72]
 234:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 851              		.loc 1 234 3 is_stmt 1 view .LVU265
 234:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 852              		.loc 1 234 30 is_stmt 0 view .LVU266
 853 0062 1392     		str	r2, [sp, #76]
 235:Core/Src/main.c ****   {
 854              		.loc 1 235 3 is_stmt 1 view .LVU267
 235:Core/Src/main.c ****   {
 855              		.loc 1 235 7 is_stmt 0 view .LVU268
 856 0064 07A8     		add	r0, sp, #28
 857 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 858              	.LVL23:
 235:Core/Src/main.c ****   {
 859              		.loc 1 235 6 view .LVU269
 860 006a 88B9     		cbnz	r0, .L44
 241:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 861              		.loc 1 241 3 is_stmt 1 view .LVU270
 241:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 862              		.loc 1 241 31 is_stmt 0 view .LVU271
 863 006c 0F23     		movs	r3, #15
 864 006e 0293     		str	r3, [sp, #8]
 243:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 865              		.loc 1 243 3 is_stmt 1 view .LVU272
 243:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 866              		.loc 1 243 34 is_stmt 0 view .LVU273
 867 0070 0223     		movs	r3, #2
 868 0072 0393     		str	r3, [sp, #12]
 244:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 869              		.loc 1 244 3 is_stmt 1 view .LVU274
 244:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 870              		.loc 1 244 35 is_stmt 0 view .LVU275
 871 0074 0023     		movs	r3, #0
 872 0076 0493     		str	r3, [sp, #16]
 245:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 873              		.loc 1 245 3 is_stmt 1 view .LVU276
 245:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 874              		.loc 1 245 36 is_stmt 0 view .LVU277
 875 0078 4FF48052 		mov	r2, #4096
 876 007c 0592     		str	r2, [sp, #20]
 246:Core/Src/main.c **** 
 877              		.loc 1 246 3 is_stmt 1 view .LVU278
 246:Core/Src/main.c **** 
ARM GAS  /tmp/cc4EFlgW.s 			page 33


 878              		.loc 1 246 36 is_stmt 0 view .LVU279
 879 007e 0693     		str	r3, [sp, #24]
 248:Core/Src/main.c ****   {
 880              		.loc 1 248 3 is_stmt 1 view .LVU280
 248:Core/Src/main.c ****   {
 881              		.loc 1 248 7 is_stmt 0 view .LVU281
 882 0080 0321     		movs	r1, #3
 883 0082 02A8     		add	r0, sp, #8
 884 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 885              	.LVL24:
 248:Core/Src/main.c ****   {
 886              		.loc 1 248 6 view .LVU282
 887 0088 20B9     		cbnz	r0, .L45
 252:Core/Src/main.c **** 
 888              		.loc 1 252 1 view .LVU283
 889 008a 15B0     		add	sp, sp, #84
 890              	.LCFI15:
 891              		.cfi_remember_state
 892              		.cfi_def_cfa_offset 4
 893              		@ sp needed
 894 008c 5DF804FB 		ldr	pc, [sp], #4
 895              	.L44:
 896              	.LCFI16:
 897              		.cfi_restore_state
 237:Core/Src/main.c ****   }
 898              		.loc 1 237 5 is_stmt 1 view .LVU284
 899 0090 FFF7FEFF 		bl	Error_Handler
 900              	.LVL25:
 901              	.L45:
 250:Core/Src/main.c ****   }
 902              		.loc 1 250 5 view .LVU285
 903 0094 FFF7FEFF 		bl	Error_Handler
 904              	.LVL26:
 905              	.L47:
 906              		.align	2
 907              	.L46:
 908 0098 00380240 		.word	1073887232
 909 009c 00700040 		.word	1073770496
 910              		.cfi_endproc
 911              	.LFE217:
 913              		.section	.text.main,"ax",%progbits
 914              		.align	1
 915              		.global	main
 916              		.syntax unified
 917              		.thumb
 918              		.thumb_func
 919              		.fpu fpv4-sp-d16
 921              	main:
 922              	.LFB216:
 126:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 923              		.loc 1 126 1 view -0
 924              		.cfi_startproc
 925              		@ Volatile: function does not return.
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928 0000 08B5     		push	{r3, lr}
 929              	.LCFI17:
ARM GAS  /tmp/cc4EFlgW.s 			page 34


 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 3, -8
 932              		.cfi_offset 14, -4
 134:Core/Src/main.c **** 
 933              		.loc 1 134 3 view .LVU287
 934 0002 FFF7FEFF 		bl	HAL_Init
 935              	.LVL27:
 140:Core/Src/main.c **** 
 936              		.loc 1 140 3 view .LVU288
 937 0006 FFF7FEFF 		bl	SystemClock_Config
 938              	.LVL28:
 146:Core/Src/main.c ****   MX_CAN1_Init();
 939              		.loc 1 146 3 view .LVU289
 940 000a FFF7FEFF 		bl	MX_GPIO_Init
 941              	.LVL29:
 147:Core/Src/main.c ****   MX_DMA_Init();
 942              		.loc 1 147 3 view .LVU290
 943 000e FFF7FEFF 		bl	MX_CAN1_Init
 944              	.LVL30:
 148:Core/Src/main.c ****   MX_ADC1_Init();
 945              		.loc 1 148 3 view .LVU291
 946 0012 FFF7FEFF 		bl	MX_DMA_Init
 947              	.LVL31:
 149:Core/Src/main.c ****   MX_TIM14_Init();
 948              		.loc 1 149 3 view .LVU292
 949 0016 FFF7FEFF 		bl	MX_ADC1_Init
 950              	.LVL32:
 150:Core/Src/main.c ****   MX_TIM13_Init();
 951              		.loc 1 150 3 view .LVU293
 952 001a FFF7FEFF 		bl	MX_TIM14_Init
 953              	.LVL33:
 151:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 954              		.loc 1 151 3 view .LVU294
 955 001e FFF7FEFF 		bl	MX_TIM13_Init
 956              	.LVL34:
 155:Core/Src/main.c ****   txHeader0.IDE = CAN_ID_STD;
 957              		.loc 1 155 3 view .LVU295
 155:Core/Src/main.c ****   txHeader0.IDE = CAN_ID_STD;
 958              		.loc 1 155 17 is_stmt 0 view .LVU296
 959 0022 114A     		ldr	r2, .L51
 960 0024 0821     		movs	r1, #8
 961 0026 1161     		str	r1, [r2, #16]
 156:Core/Src/main.c ****   txHeader0.RTR = CAN_RTR_DATA;
 962              		.loc 1 156 3 is_stmt 1 view .LVU297
 156:Core/Src/main.c ****   txHeader0.RTR = CAN_RTR_DATA;
 963              		.loc 1 156 17 is_stmt 0 view .LVU298
 964 0028 0023     		movs	r3, #0
 965 002a 9360     		str	r3, [r2, #8]
 157:Core/Src/main.c ****   txHeader0.StdId = 0x086;
 966              		.loc 1 157 3 is_stmt 1 view .LVU299
 157:Core/Src/main.c ****   txHeader0.StdId = 0x086;
 967              		.loc 1 157 17 is_stmt 0 view .LVU300
 968 002c D360     		str	r3, [r2, #12]
 158:Core/Src/main.c ****   txHeader0.ExtId = 0x00;
 969              		.loc 1 158 3 is_stmt 1 view .LVU301
 158:Core/Src/main.c ****   txHeader0.ExtId = 0x00;
 970              		.loc 1 158 19 is_stmt 0 view .LVU302
ARM GAS  /tmp/cc4EFlgW.s 			page 35


 971 002e 8620     		movs	r0, #134
 972 0030 1060     		str	r0, [r2]
 159:Core/Src/main.c ****   txHeader0.TransmitGlobalTime = DISABLE;
 973              		.loc 1 159 3 is_stmt 1 view .LVU303
 159:Core/Src/main.c ****   txHeader0.TransmitGlobalTime = DISABLE;
 974              		.loc 1 159 19 is_stmt 0 view .LVU304
 975 0032 5360     		str	r3, [r2, #4]
 160:Core/Src/main.c **** 
 976              		.loc 1 160 3 is_stmt 1 view .LVU305
 160:Core/Src/main.c **** 
 977              		.loc 1 160 32 is_stmt 0 view .LVU306
 978 0034 1375     		strb	r3, [r2, #20]
 163:Core/Src/main.c ****   txHeader1.IDE = CAN_ID_STD;
 979              		.loc 1 163 3 is_stmt 1 view .LVU307
 163:Core/Src/main.c ****   txHeader1.IDE = CAN_ID_STD;
 980              		.loc 1 163 17 is_stmt 0 view .LVU308
 981 0036 0D4A     		ldr	r2, .L51+4
 982 0038 1161     		str	r1, [r2, #16]
 164:Core/Src/main.c ****   txHeader1.RTR = CAN_RTR_DATA;
 983              		.loc 1 164 3 is_stmt 1 view .LVU309
 164:Core/Src/main.c ****   txHeader1.RTR = CAN_RTR_DATA;
 984              		.loc 1 164 17 is_stmt 0 view .LVU310
 985 003a 9360     		str	r3, [r2, #8]
 165:Core/Src/main.c ****   txHeader1.StdId = 0x087;
 986              		.loc 1 165 3 is_stmt 1 view .LVU311
 165:Core/Src/main.c ****   txHeader1.StdId = 0x087;
 987              		.loc 1 165 17 is_stmt 0 view .LVU312
 988 003c D360     		str	r3, [r2, #12]
 166:Core/Src/main.c ****   txHeader1.ExtId = 0x00;
 989              		.loc 1 166 3 is_stmt 1 view .LVU313
 166:Core/Src/main.c ****   txHeader1.ExtId = 0x00;
 990              		.loc 1 166 19 is_stmt 0 view .LVU314
 991 003e 8720     		movs	r0, #135
 992 0040 1060     		str	r0, [r2]
 167:Core/Src/main.c ****   txHeader1.TransmitGlobalTime = DISABLE;
 993              		.loc 1 167 3 is_stmt 1 view .LVU315
 167:Core/Src/main.c ****   txHeader1.TransmitGlobalTime = DISABLE;
 994              		.loc 1 167 19 is_stmt 0 view .LVU316
 995 0042 5360     		str	r3, [r2, #4]
 168:Core/Src/main.c **** 
 996              		.loc 1 168 3 is_stmt 1 view .LVU317
 168:Core/Src/main.c **** 
 997              		.loc 1 168 32 is_stmt 0 view .LVU318
 998 0044 1375     		strb	r3, [r2, #20]
 171:Core/Src/main.c ****   txHeader2.IDE = CAN_ID_STD;
 999              		.loc 1 171 3 is_stmt 1 view .LVU319
 171:Core/Src/main.c ****   txHeader2.IDE = CAN_ID_STD;
 1000              		.loc 1 171 17 is_stmt 0 view .LVU320
 1001 0046 0A4A     		ldr	r2, .L51+8
 1002 0048 1161     		str	r1, [r2, #16]
 172:Core/Src/main.c ****   txHeader2.RTR = CAN_RTR_DATA;
 1003              		.loc 1 172 3 is_stmt 1 view .LVU321
 172:Core/Src/main.c ****   txHeader2.RTR = CAN_RTR_DATA;
 1004              		.loc 1 172 17 is_stmt 0 view .LVU322
 1005 004a 9360     		str	r3, [r2, #8]
 173:Core/Src/main.c ****   txHeader2.StdId = 0x0C1;
 1006              		.loc 1 173 3 is_stmt 1 view .LVU323
ARM GAS  /tmp/cc4EFlgW.s 			page 36


 173:Core/Src/main.c ****   txHeader2.StdId = 0x0C1;
 1007              		.loc 1 173 17 is_stmt 0 view .LVU324
 1008 004c D360     		str	r3, [r2, #12]
 174:Core/Src/main.c ****   txHeader2.ExtId = 0x00;
 1009              		.loc 1 174 3 is_stmt 1 view .LVU325
 174:Core/Src/main.c ****   txHeader2.ExtId = 0x00;
 1010              		.loc 1 174 19 is_stmt 0 view .LVU326
 1011 004e C120     		movs	r0, #193
 1012 0050 1060     		str	r0, [r2]
 175:Core/Src/main.c ****   txHeader2.TransmitGlobalTime = DISABLE;
 1013              		.loc 1 175 3 is_stmt 1 view .LVU327
 175:Core/Src/main.c ****   txHeader2.TransmitGlobalTime = DISABLE;
 1014              		.loc 1 175 19 is_stmt 0 view .LVU328
 1015 0052 5360     		str	r3, [r2, #4]
 176:Core/Src/main.c **** 
 1016              		.loc 1 176 3 is_stmt 1 view .LVU329
 176:Core/Src/main.c **** 
 1017              		.loc 1 176 32 is_stmt 0 view .LVU330
 1018 0054 1375     		strb	r3, [r2, #20]
 179:Core/Src/main.c ****   TxHeader3.ExtId = 0x000;
 1019              		.loc 1 179 3 is_stmt 1 view .LVU331
 179:Core/Src/main.c ****   TxHeader3.ExtId = 0x000;
 1020              		.loc 1 179 19 is_stmt 0 view .LVU332
 1021 0056 074A     		ldr	r2, .L51+12
 1022 0058 C020     		movs	r0, #192
 1023 005a 1060     		str	r0, [r2]
 180:Core/Src/main.c ****   TxHeader3.IDE = CAN_ID_STD;
 1024              		.loc 1 180 3 is_stmt 1 view .LVU333
 180:Core/Src/main.c ****   TxHeader3.IDE = CAN_ID_STD;
 1025              		.loc 1 180 19 is_stmt 0 view .LVU334
 1026 005c 5360     		str	r3, [r2, #4]
 181:Core/Src/main.c ****   TxHeader3.RTR = CAN_RTR_DATA;
 1027              		.loc 1 181 3 is_stmt 1 view .LVU335
 181:Core/Src/main.c ****   TxHeader3.RTR = CAN_RTR_DATA;
 1028              		.loc 1 181 17 is_stmt 0 view .LVU336
 1029 005e 9360     		str	r3, [r2, #8]
 182:Core/Src/main.c ****   TxHeader3.DLC = 8;
 1030              		.loc 1 182 3 is_stmt 1 view .LVU337
 182:Core/Src/main.c ****   TxHeader3.DLC = 8;
 1031              		.loc 1 182 17 is_stmt 0 view .LVU338
 1032 0060 D360     		str	r3, [r2, #12]
 183:Core/Src/main.c ****   TxHeader3.TransmitGlobalTime = DISABLE;
 1033              		.loc 1 183 3 is_stmt 1 view .LVU339
 183:Core/Src/main.c ****   TxHeader3.TransmitGlobalTime = DISABLE;
 1034              		.loc 1 183 17 is_stmt 0 view .LVU340
 1035 0062 1161     		str	r1, [r2, #16]
 184:Core/Src/main.c **** 
 1036              		.loc 1 184 3 is_stmt 1 view .LVU341
 184:Core/Src/main.c **** 
 1037              		.loc 1 184 32 is_stmt 0 view .LVU342
 1038 0064 1375     		strb	r3, [r2, #20]
 1039              	.L49:
 200:Core/Src/main.c ****   {
 1040              		.loc 1 200 3 is_stmt 1 discriminator 1 view .LVU343
 205:Core/Src/main.c ****   /* USER CODE END 3 */
 1041              		.loc 1 205 3 discriminator 1 view .LVU344
 200:Core/Src/main.c ****   {
ARM GAS  /tmp/cc4EFlgW.s 			page 37


 1042              		.loc 1 200 9 discriminator 1 view .LVU345
 1043 0066 FEE7     		b	.L49
 1044              	.L52:
 1045              		.align	2
 1046              	.L51:
 1047 0068 00000000 		.word	txHeader0
 1048 006c 00000000 		.word	txHeader1
 1049 0070 00000000 		.word	txHeader2
 1050 0074 00000000 		.word	TxHeader3
 1051              		.cfi_endproc
 1052              	.LFE216:
 1054              		.comm	canFilter2,40,4
 1055              		.comm	canFilter1,40,4
 1056              		.comm	canFilter0,40,4
 1057              		.global	canRX
 1058              		.comm	rxHeader,28,4
 1059              		.comm	TxData,8,4
 1060              		.comm	TxHeader3,24,4
 1061              		.comm	txHeader2,24,4
 1062              		.comm	txHeader1,24,4
 1063              		.comm	txHeader0,24,4
 1064              		.comm	TxMailbox,4,4
 1065              		.global	rinehartUpdate
 1066              		.global	voltageCheckCount
 1067              		.global	lastPrechargeState
 1068              		.global	prechargeState
 1069              		.global	readyToDrive
 1070              		.global	DCDCFault
 1071              		.comm	adc_buf,16344,4
 1072              		.global	RTDButtonPressed
 1073              		.global	DCDCEnable
 1074              		.global	vicoreTemp
 1075              		.global	bmsVoltage
 1076              		.global	rinehartVoltage
 1077              		.global	rinehart_send_command_count
 1078              		.comm	htim14,72,4
 1079              		.comm	htim13,72,4
 1080              		.comm	hcan1,40,4
 1081              		.comm	hdma_adc1,96,4
 1082              		.comm	hadc1,72,4
 1083              		.section	.bss.DCDCEnable,"aw",%nobits
 1084              		.align	2
 1087              	DCDCEnable:
 1088 0000 00000000 		.space	4
 1089              		.section	.bss.DCDCFault,"aw",%nobits
 1090              		.align	2
 1093              	DCDCFault:
 1094 0000 00000000 		.space	4
 1095              		.section	.bss.RTDButtonPressed,"aw",%nobits
 1096              		.align	2
 1099              	RTDButtonPressed:
 1100 0000 00000000 		.space	4
 1101              		.section	.bss.bmsVoltage,"aw",%nobits
 1102              		.align	2
 1105              	bmsVoltage:
 1106 0000 00000000 		.space	4
 1107              		.section	.bss.canRX,"aw",%nobits
ARM GAS  /tmp/cc4EFlgW.s 			page 38


 1108              		.align	2
 1111              	canRX:
 1112 0000 00000000 		.space	8
 1112      00000000 
 1113              		.section	.bss.lastPrechargeState,"aw",%nobits
 1116              	lastPrechargeState:
 1117 0000 00       		.space	1
 1118              		.section	.bss.prechargeState,"aw",%nobits
 1121              	prechargeState:
 1122 0000 00       		.space	1
 1123              		.section	.bss.readyToDrive,"aw",%nobits
 1124              		.align	2
 1127              	readyToDrive:
 1128 0000 00000000 		.space	4
 1129              		.section	.bss.rinehartUpdate,"aw",%nobits
 1132              	rinehartUpdate:
 1133 0000 00       		.space	1
 1134              		.section	.bss.rinehartVoltage,"aw",%nobits
 1135              		.align	2
 1138              	rinehartVoltage:
 1139 0000 00000000 		.space	4
 1140              		.section	.bss.rinehart_send_command_count,"aw",%nobits
 1143              	rinehart_send_command_count:
 1144 0000 00       		.space	1
 1145              		.section	.bss.vicoreTemp,"aw",%nobits
 1146              		.align	2
 1149              	vicoreTemp:
 1150 0000 00000000 		.space	4
 1151              		.section	.bss.voltageCheckCount,"aw",%nobits
 1154              	voltageCheckCount:
 1155 0000 00       		.space	1
 1156              		.text
 1157              	.Letext0:
 1158              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1159              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1160              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1161              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 1162              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1163              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1164              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1165              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1166              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1167              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1168              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1169              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1170              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1171              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1172              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1173              		.file 18 "<built-in>"
ARM GAS  /tmp/cc4EFlgW.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc4EFlgW.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc4EFlgW.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc4EFlgW.s:151    .text.MX_GPIO_Init:0000000000000080 $d
     /tmp/cc4EFlgW.s:157    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/cc4EFlgW.s:163    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/cc4EFlgW.s:212    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/cc4EFlgW.s:217    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/cc4EFlgW.s:224    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/cc4EFlgW.s:238    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cc4EFlgW.s:245    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc4EFlgW.s:259    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/cc4EFlgW.s:266    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/cc4EFlgW.s:280    .text.Error_Handler:0000000000000000 $t
     /tmp/cc4EFlgW.s:287    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc4EFlgW.s:319    .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/cc4EFlgW.s:325    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/cc4EFlgW.s:499    .text.MX_CAN1_Init:0000000000000098 $d
                            *COM*:0000000000000028 hcan1
                            *COM*:0000000000000028 canFilter0
                            *COM*:0000000000000028 canFilter1
                            *COM*:0000000000000028 canFilter2
     /tmp/cc4EFlgW.s:508    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/cc4EFlgW.s:514    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/cc4EFlgW.s:621    .text.MX_ADC1_Init:0000000000000060 $d
                            *COM*:0000000000000048 hadc1
     /tmp/cc4EFlgW.s:628    .text.MX_TIM14_Init:0000000000000000 $t
     /tmp/cc4EFlgW.s:634    .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
     /tmp/cc4EFlgW.s:683    .text.MX_TIM14_Init:0000000000000028 $d
                            *COM*:0000000000000048 htim14
     /tmp/cc4EFlgW.s:689    .text.MX_TIM13_Init:0000000000000000 $t
     /tmp/cc4EFlgW.s:695    .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
     /tmp/cc4EFlgW.s:744    .text.MX_TIM13_Init:0000000000000028 $d
                            *COM*:0000000000000048 htim13
     /tmp/cc4EFlgW.s:750    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc4EFlgW.s:757    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc4EFlgW.s:908    .text.SystemClock_Config:0000000000000098 $d
     /tmp/cc4EFlgW.s:914    .text.main:0000000000000000 $t
     /tmp/cc4EFlgW.s:921    .text.main:0000000000000000 main
     /tmp/cc4EFlgW.s:1047   .text.main:0000000000000068 $d
                            *COM*:0000000000000018 txHeader0
                            *COM*:0000000000000018 txHeader1
                            *COM*:0000000000000018 txHeader2
                            *COM*:0000000000000018 TxHeader3
     /tmp/cc4EFlgW.s:1111   .bss.canRX:0000000000000000 canRX
                            *COM*:000000000000001c rxHeader
                            *COM*:0000000000000008 TxData
                            *COM*:0000000000000004 TxMailbox
     /tmp/cc4EFlgW.s:1132   .bss.rinehartUpdate:0000000000000000 rinehartUpdate
     /tmp/cc4EFlgW.s:1154   .bss.voltageCheckCount:0000000000000000 voltageCheckCount
     /tmp/cc4EFlgW.s:1116   .bss.lastPrechargeState:0000000000000000 lastPrechargeState
     /tmp/cc4EFlgW.s:1121   .bss.prechargeState:0000000000000000 prechargeState
     /tmp/cc4EFlgW.s:1127   .bss.readyToDrive:0000000000000000 readyToDrive
     /tmp/cc4EFlgW.s:1093   .bss.DCDCFault:0000000000000000 DCDCFault
                            *COM*:0000000000003fd8 adc_buf
     /tmp/cc4EFlgW.s:1099   .bss.RTDButtonPressed:0000000000000000 RTDButtonPressed
ARM GAS  /tmp/cc4EFlgW.s 			page 40


     /tmp/cc4EFlgW.s:1087   .bss.DCDCEnable:0000000000000000 DCDCEnable
     /tmp/cc4EFlgW.s:1149   .bss.vicoreTemp:0000000000000000 vicoreTemp
     /tmp/cc4EFlgW.s:1105   .bss.bmsVoltage:0000000000000000 bmsVoltage
     /tmp/cc4EFlgW.s:1138   .bss.rinehartVoltage:0000000000000000 rinehartVoltage
     /tmp/cc4EFlgW.s:1143   .bss.rinehart_send_command_count:0000000000000000 rinehart_send_command_count
                            *COM*:0000000000000060 hdma_adc1
     /tmp/cc4EFlgW.s:1084   .bss.DCDCEnable:0000000000000000 $d
     /tmp/cc4EFlgW.s:1090   .bss.DCDCFault:0000000000000000 $d
     /tmp/cc4EFlgW.s:1096   .bss.RTDButtonPressed:0000000000000000 $d
     /tmp/cc4EFlgW.s:1102   .bss.bmsVoltage:0000000000000000 $d
     /tmp/cc4EFlgW.s:1108   .bss.canRX:0000000000000000 $d
     /tmp/cc4EFlgW.s:1117   .bss.lastPrechargeState:0000000000000000 $d
     /tmp/cc4EFlgW.s:1122   .bss.prechargeState:0000000000000000 $d
     /tmp/cc4EFlgW.s:1124   .bss.readyToDrive:0000000000000000 $d
     /tmp/cc4EFlgW.s:1133   .bss.rinehartUpdate:0000000000000000 $d
     /tmp/cc4EFlgW.s:1135   .bss.rinehartVoltage:0000000000000000 $d
     /tmp/cc4EFlgW.s:1144   .bss.rinehart_send_command_count:0000000000000000 $d
     /tmp/cc4EFlgW.s:1146   .bss.vicoreTemp:0000000000000000 $d
     /tmp/cc4EFlgW.s:1155   .bss.voltageCheckCount:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
