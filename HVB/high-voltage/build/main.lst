ARM GAS  /tmp/ccatTIhU.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB223:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** /* USER CODE END PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccatTIhU.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN PD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** // analog buffer
  35:Core/Src/main.c **** #define ADC_BUF_LEN 4086
  36:Core/Src/main.c **** // precharge
  37:Core/Src/main.c **** #define PRECHARGE_COEFFICIENT       0.9		      // 90% complete with precharge so it's probably safe
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  46:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** TIM_HandleTypeDef htim13;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** // inputs
  56:Core/Src/main.c **** int rinehartVoltage = 0;				// read from CAN
  57:Core/Src/main.c **** int emusVoltage = 0;					// read from CAN
  58:Core/Src/main.c **** int vicoreTemp = 0;					// read from DMA, vicore temp
  59:Core/Src/main.c **** int DCDCEnable = 0;                     // dc-dc enable (0 = disabled, 1 = enabled)
  60:Core/Src/main.c **** int RTDButtonPressed = 0;               // read this from CAN, if it's 1 we can finish precharge
  61:Core/Src/main.c **** uint32_t adc_buf[ADC_BUF_LEN];				// adc read buffer
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** // output
  64:Core/Src/main.c **** int DCDCFault = 0;                      // the dc-dc fault indicator (0 = no fault, 1 = fault)
  65:Core/Src/main.c **** int readyToDrive = 0;					          // the car is ready to drive! (0 = not ready, 1 = ready)
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** // precharge states
  68:Core/Src/main.c **** enum prechargeStates
  69:Core/Src/main.c **** {
  70:Core/Src/main.c **** 	PRECHARGE_OFF,
  71:Core/Src/main.c **** 	PRECHARGE_ON,
  72:Core/Src/main.c **** 	PRECHARGE_DONE,
  73:Core/Src/main.c **** 	PRECHARGE_ERROR
  74:Core/Src/main.c **** };
  75:Core/Src/main.c **** int prechargeState = PRECHARGE_OFF;			// set initial precharge state to OFF
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** // CAN
  78:Core/Src/main.c **** uint32_t TxMailbox; 							            // CAN Bus Mail box variable
  79:Core/Src/main.c **** CAN_TxHeaderTypeDef txHeader0; 					      // CAN Bus Transmit Header BASE
  80:Core/Src/main.c **** CAN_TxHeaderTypeDef txHeader1; 					      // CAN Bus Transmit Header DATA
  81:Core/Src/main.c **** CAN_TxHeaderTypeDef txHeader2; 					      // CAN Bus Transmit Header DATA
  82:Core/Src/main.c **** CAN_RxHeaderTypeDef rxHeader; 					      // CAN Bus Receive Header
  83:Core/Src/main.c **** uint8_t canRX[8] = {0, 0, 0, 0, 0, 0, 0, 0}; 	// CAN Bus Receive Buffer
  84:Core/Src/main.c **** uint8_t TxData[8];                            // CAN transmit buffer
  85:Core/Src/main.c **** CAN_FilterTypeDef canFilter0; 					      // CAN Bus Filter for BMS
  86:Core/Src/main.c **** CAN_FilterTypeDef canFilter1;                 // CAN Bus Filter for Rinehart
  87:Core/Src/main.c **** /* USER CODE END PV */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccatTIhU.s 			page 3


  89:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  90:Core/Src/main.c **** void SystemClock_Config(void);
  91:Core/Src/main.c **** static void MX_GPIO_Init(void);
  92:Core/Src/main.c **** static void MX_CAN1_Init(void);
  93:Core/Src/main.c **** static void MX_DMA_Init(void);
  94:Core/Src/main.c **** static void MX_ADC1_Init(void);
  95:Core/Src/main.c **** static void MX_TIM14_Init(void);
  96:Core/Src/main.c **** static void MX_TIM13_Init(void);
  97:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  98:Core/Src/main.c **** void prechargeControl();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** /* USER CODE END PFP */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 103:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 104:Core/Src/main.c **** /* USER CODE END 0 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /**
 107:Core/Src/main.c ****   * @brief  The application entry point.
 108:Core/Src/main.c ****   * @retval int
 109:Core/Src/main.c ****   */
 110:Core/Src/main.c **** int main(void)
 111:Core/Src/main.c **** {
 112:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE END 1 */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 119:Core/Src/main.c ****   HAL_Init();
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 122:Core/Src/main.c ****   /* USER CODE END Init */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Configure the system clock */
 125:Core/Src/main.c ****   SystemClock_Config();
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 128:Core/Src/main.c ****   /* USER CODE END SysInit */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Initialize all configured peripherals */
 131:Core/Src/main.c ****   MX_GPIO_Init();
 132:Core/Src/main.c ****   MX_CAN1_Init();
 133:Core/Src/main.c ****   MX_DMA_Init();
 134:Core/Src/main.c ****   MX_ADC1_Init();
 135:Core/Src/main.c ****   MX_TIM14_Init();
 136:Core/Src/main.c ****   MX_TIM13_Init();
 137:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   // init the CAN mailbox for BASE
 140:Core/Src/main.c ****   txHeader0.DLC = 8; // Number of bites to be transmitted max- 8
 141:Core/Src/main.c ****   txHeader0.IDE = CAN_ID_STD;
 142:Core/Src/main.c ****   txHeader0.RTR = CAN_RTR_DATA;
 143:Core/Src/main.c ****   txHeader0.StdId = 0x086;
 144:Core/Src/main.c ****   txHeader0.ExtId = 0;
 145:Core/Src/main.c ****   txHeader0.TransmitGlobalTime = DISABLE;
ARM GAS  /tmp/ccatTIhU.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   // init the CAN mailbox for DATA
 148:Core/Src/main.c ****   txHeader1.DLC = 8; // Number of bites to be transmitted max- 8
 149:Core/Src/main.c ****   txHeader1.IDE = CAN_ID_STD;
 150:Core/Src/main.c ****   txHeader1.RTR = CAN_RTR_DATA;
 151:Core/Src/main.c ****   txHeader1.StdId = 0x087;
 152:Core/Src/main.c ****   txHeader1.ExtId = 0;
 153:Core/Src/main.c ****   txHeader1.TransmitGlobalTime = DISABLE;
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   // header for rinehart (Parameter Command Message)
 156:Core/Src/main.c ****   txHeader2.DLC = 8; // Number of bites to be transmitted max- 8
 157:Core/Src/main.c ****   txHeader2.IDE = CAN_ID_STD;
 158:Core/Src/main.c ****   txHeader2.RTR = CAN_RTR_DATA;
 159:Core/Src/main.c ****   txHeader2.StdId = 0x0C1;
 160:Core/Src/main.c ****   txHeader2.ExtId = 0;
 161:Core/Src/main.c ****   txHeader2.TransmitGlobalTime = DISABLE;
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** 	HAL_CAN_Start(&hcan1); // Initialize CAN Bus
 164:Core/Src/main.c **** 	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);   // Initialize CAN Bus Rx Inte
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   // start timer
 167:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim14);
 168:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim13);
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** 	// start ADC DMA
 171:Core/Src/main.c **** 	HAL_ADC_Start_DMA(&hadc1, adc_buf, ADC_BUF_LEN);
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* USER CODE END 2 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* Infinite loop */
 176:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 177:Core/Src/main.c ****   while (1)
 178:Core/Src/main.c ****   {
 179:Core/Src/main.c ****     // poll sensors
 180:Core/Src/main.c ****     // pollSensorData();
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****     // read CAN
 183:Core/Src/main.c ****     // if (HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING) != HAL_OK)
 184:Core/Src/main.c ****     //   Error_Handler();
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****     // send CAN
 187:Core/Src/main.c ****     // BASE
 188:Core/Src/main.c ****     // uint8_t csend0[] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07};
 189:Core/Src/main.c ****     // HAL_CAN_AddTxMessage(&hcan1, &txHeader0, csend0, &canMailbox); // Send Message
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****     // BASE
 192:Core/Src/main.c ****     // uint8_t csend1[] = {readyToDrive, DCDCFault, vicoreTemp, 0x03, 0x04, 0x05, 0x06, 0x07};
 193:Core/Src/main.c ****     // HAL_CAN_AddTxMessage(&hcan1, &txHeader1, csend1, &canMailbox); // Send Message
 194:Core/Src/main.c ****     /* USER CODE END WHILE */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c ****   /* USER CODE END 3 */
 199:Core/Src/main.c **** }
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** /**
 202:Core/Src/main.c ****   * @brief System Clock Configuration
ARM GAS  /tmp/ccatTIhU.s 			page 5


 203:Core/Src/main.c ****   * @retval None
 204:Core/Src/main.c ****   */
 205:Core/Src/main.c **** void SystemClock_Config(void)
 206:Core/Src/main.c **** {
 207:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 208:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 213:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 214:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 215:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 216:Core/Src/main.c ****   */
 217:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 218:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 219:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 227:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 228:Core/Src/main.c ****   {
 229:Core/Src/main.c ****     Error_Handler();
 230:Core/Src/main.c ****   }
 231:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 232:Core/Src/main.c ****   */
 233:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 234:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 235:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 236:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 237:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 238:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 241:Core/Src/main.c ****   {
 242:Core/Src/main.c ****     Error_Handler();
 243:Core/Src/main.c ****   }
 244:Core/Src/main.c **** }
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** /**
 247:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 248:Core/Src/main.c ****   * @param None
 249:Core/Src/main.c ****   * @retval None
 250:Core/Src/main.c ****   */
 251:Core/Src/main.c **** static void MX_ADC1_Init(void)
 252:Core/Src/main.c **** {
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 255:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
ARM GAS  /tmp/ccatTIhU.s 			page 6


 260:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 261:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 262:Core/Src/main.c ****   */
 263:Core/Src/main.c ****   hadc1.Instance = ADC1;
 264:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 265:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 266:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 267:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 268:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 269:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 270:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 271:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 272:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 273:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 274:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 275:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 276:Core/Src/main.c ****   {
 277:Core/Src/main.c ****     Error_Handler();
 278:Core/Src/main.c ****   }
 279:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 280:Core/Src/main.c ****   */
 281:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 282:Core/Src/main.c ****   sConfig.Rank = 1;
 283:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 284:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 285:Core/Src/main.c ****   {
 286:Core/Src/main.c ****     Error_Handler();
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 289:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** }
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** /**
 294:Core/Src/main.c ****   * @brief CAN1 Initialization Function
 295:Core/Src/main.c ****   * @param None
 296:Core/Src/main.c ****   * @retval None
 297:Core/Src/main.c ****   */
 298:Core/Src/main.c **** static void MX_CAN1_Init(void)
 299:Core/Src/main.c **** {
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 302:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 305:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 306:Core/Src/main.c ****   hcan1.Instance = CAN1;
 307:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 308:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 309:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 310:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 311:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 312:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 313:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 314:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = ENABLE;
 315:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 316:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
ARM GAS  /tmp/ccatTIhU.s 			page 7


 317:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 318:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   // init the CAN filter for BMS messages
 325:Core/Src/main.c ****     canFilter0.FilterIdHigh = 0x072 << 5;   // BMS IDs: 0 - 0x72
 326:Core/Src/main.c ****   	canFilter0.FilterIdLow = 0x000;
 327:Core/Src/main.c ****     canFilter0.FilterMaskIdHigh = 0x072 << 5;
 328:Core/Src/main.c ****   	canFilter0.FilterMaskIdLow = 0x000;
 329:Core/Src/main.c ****     canFilter0.FilterBank = 0;
 330:Core/Src/main.c ****   	canFilter0.FilterMode = CAN_FILTERMODE_IDMASK;
 331:Core/Src/main.c ****   	canFilter0.FilterFIFOAssignment = CAN_RX_FIFO0;
 332:Core/Src/main.c ****   	canFilter0.FilterScale = CAN_FILTERSCALE_32BIT;
 333:Core/Src/main.c ****   	canFilter0.FilterActivation = ENABLE;
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****     HAL_CAN_ConfigFilter(&hcan1, &canFilter0);
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****     // init the CAN filter for Rinehart messages
 338:Core/Src/main.c ****     canFilter1.FilterIdHigh = 0x0B1 << 5;      // Rinehart IDs: 0xA0 - 0xB1
 339:Core/Src/main.c ****   	canFilter1.FilterIdLow = 0x0A0;
 340:Core/Src/main.c ****     canFilter1.FilterMaskIdHigh = 0x0B1 << 5;
 341:Core/Src/main.c ****   	canFilter1.FilterMaskIdLow = 0x0A0;
 342:Core/Src/main.c ****     canFilter1.FilterBank = 1;
 343:Core/Src/main.c ****   	canFilter1.FilterMode = CAN_FILTERMODE_IDMASK;
 344:Core/Src/main.c ****   	canFilter1.FilterFIFOAssignment = CAN_RX_FIFO0;
 345:Core/Src/main.c ****   	canFilter1.FilterScale = CAN_FILTERSCALE_32BIT;
 346:Core/Src/main.c ****   	canFilter1.FilterActivation = ENABLE;
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****     HAL_CAN_ConfigFilter(&hcan1, &canFilter1);
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** }
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** /**
 355:Core/Src/main.c ****   * @brief TIM13 Initialization Function
 356:Core/Src/main.c ****   * @param None
 357:Core/Src/main.c ****   * @retval None
 358:Core/Src/main.c ****   */
 359:Core/Src/main.c **** static void MX_TIM13_Init(void)
 360:Core/Src/main.c **** {
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 0 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /* USER CODE END TIM13_Init 0 */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 1 */
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****   /* USER CODE END TIM13_Init 1 */
 369:Core/Src/main.c ****   htim13.Instance = TIM13;
 370:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 371:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 372:Core/Src/main.c ****   htim13.Init.Period = 1000-1;
 373:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/ccatTIhU.s 			page 8


 374:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 375:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 376:Core/Src/main.c ****   {
 377:Core/Src/main.c ****     Error_Handler();
 378:Core/Src/main.c ****   }
 379:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 2 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* USER CODE END TIM13_Init 2 */
 382:Core/Src/main.c **** 
 383:Core/Src/main.c **** }
 384:Core/Src/main.c **** 
 385:Core/Src/main.c **** /**
 386:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 387:Core/Src/main.c ****   * @param None
 388:Core/Src/main.c ****   * @retval None
 389:Core/Src/main.c ****   */
 390:Core/Src/main.c **** static void MX_TIM14_Init(void)
 391:Core/Src/main.c **** {
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 400:Core/Src/main.c ****   htim14.Instance = TIM14;
 401:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 402:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 403:Core/Src/main.c ****   htim14.Init.Period = 5000-1;
 404:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 405:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 406:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 407:Core/Src/main.c ****   {
 408:Core/Src/main.c ****     Error_Handler();
 409:Core/Src/main.c ****   }
 410:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 413:Core/Src/main.c **** 
 414:Core/Src/main.c **** }
 415:Core/Src/main.c **** 
 416:Core/Src/main.c **** /**
 417:Core/Src/main.c ****   * Enable DMA controller clock
 418:Core/Src/main.c ****   */
 419:Core/Src/main.c **** static void MX_DMA_Init(void)
 420:Core/Src/main.c **** {
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /* DMA controller clock enable */
 423:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 424:Core/Src/main.c **** 
 425:Core/Src/main.c ****   /* DMA interrupt init */
 426:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 427:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 428:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 429:Core/Src/main.c **** 
 430:Core/Src/main.c **** }
ARM GAS  /tmp/ccatTIhU.s 			page 9


 431:Core/Src/main.c **** 
 432:Core/Src/main.c **** /**
 433:Core/Src/main.c ****   * @brief GPIO Initialization Function
 434:Core/Src/main.c ****   * @param None
 435:Core/Src/main.c ****   * @retval None
 436:Core/Src/main.c ****   */
 437:Core/Src/main.c **** static void MX_GPIO_Init(void)
 438:Core/Src/main.c **** {
  28              		.loc 1 438 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 56
 439:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 439 3 view .LVU1
  44              		.loc 1 439 20 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0394     		str	r4, [sp, #12]
  47 0008 0494     		str	r4, [sp, #16]
  48 000a 0594     		str	r4, [sp, #20]
  49 000c 0694     		str	r4, [sp, #24]
  50 000e 0794     		str	r4, [sp, #28]
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 442:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  51              		.loc 1 442 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 442 3 view .LVU4
  54 0010 0194     		str	r4, [sp, #4]
  55              		.loc 1 442 3 view .LVU5
  56 0012 1B4B     		ldr	r3, .L3
  57 0014 1A6B     		ldr	r2, [r3, #48]
  58 0016 42F08002 		orr	r2, r2, #128
  59 001a 1A63     		str	r2, [r3, #48]
  60              		.loc 1 442 3 view .LVU6
  61 001c 1A6B     		ldr	r2, [r3, #48]
  62 001e 02F08002 		and	r2, r2, #128
  63 0022 0192     		str	r2, [sp, #4]
  64              		.loc 1 442 3 view .LVU7
  65 0024 019A     		ldr	r2, [sp, #4]
  66              	.LBE4:
  67              		.loc 1 442 3 view .LVU8
 443:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 443 3 view .LVU9
  69              	.LBB5:
  70              		.loc 1 443 3 view .LVU10
  71 0026 0294     		str	r4, [sp, #8]
ARM GAS  /tmp/ccatTIhU.s 			page 10


  72              		.loc 1 443 3 view .LVU11
  73 0028 1A6B     		ldr	r2, [r3, #48]
  74 002a 42F00102 		orr	r2, r2, #1
  75 002e 1A63     		str	r2, [r3, #48]
  76              		.loc 1 443 3 view .LVU12
  77 0030 1B6B     		ldr	r3, [r3, #48]
  78 0032 03F00103 		and	r3, r3, #1
  79 0036 0293     		str	r3, [sp, #8]
  80              		.loc 1 443 3 view .LVU13
  81 0038 029B     		ldr	r3, [sp, #8]
  82              	.LBE5:
  83              		.loc 1 443 3 view .LVU14
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 446:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  84              		.loc 1 446 3 view .LVU15
  85 003a 124D     		ldr	r5, .L3+4
  86 003c 2246     		mov	r2, r4
  87 003e 0321     		movs	r1, #3
  88 0040 2846     		mov	r0, r5
  89 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  90              	.LVL0:
 447:Core/Src/main.c **** 
 448:Core/Src/main.c ****   /*Configure GPIO pin : PA0 */
 449:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
  91              		.loc 1 449 3 view .LVU16
  92              		.loc 1 449 23 is_stmt 0 view .LVU17
  93 0046 0126     		movs	r6, #1
  94 0048 0396     		str	r6, [sp, #12]
 450:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  95              		.loc 1 450 3 is_stmt 1 view .LVU18
  96              		.loc 1 450 24 is_stmt 0 view .LVU19
  97 004a 0496     		str	r6, [sp, #16]
 451:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  98              		.loc 1 451 3 is_stmt 1 view .LVU20
  99              		.loc 1 451 24 is_stmt 0 view .LVU21
 100 004c 0227     		movs	r7, #2
 101 004e 0597     		str	r7, [sp, #20]
 452:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 102              		.loc 1 452 3 is_stmt 1 view .LVU22
 103              		.loc 1 452 25 is_stmt 0 view .LVU23
 104 0050 0694     		str	r4, [sp, #24]
 453:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 105              		.loc 1 453 3 is_stmt 1 view .LVU24
 106 0052 03A9     		add	r1, sp, #12
 107 0054 2846     		mov	r0, r5
 108 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 109              	.LVL1:
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /*Configure GPIO pin : PA1 */
 456:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
 110              		.loc 1 456 3 view .LVU25
 111              		.loc 1 456 23 is_stmt 0 view .LVU26
 112 005a 0397     		str	r7, [sp, #12]
 457:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 113              		.loc 1 457 3 is_stmt 1 view .LVU27
 114              		.loc 1 457 24 is_stmt 0 view .LVU28
ARM GAS  /tmp/ccatTIhU.s 			page 11


 115 005c 0496     		str	r6, [sp, #16]
 458:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 116              		.loc 1 458 3 is_stmt 1 view .LVU29
 117              		.loc 1 458 24 is_stmt 0 view .LVU30
 118 005e 0596     		str	r6, [sp, #20]
 459:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 119              		.loc 1 459 3 is_stmt 1 view .LVU31
 120              		.loc 1 459 25 is_stmt 0 view .LVU32
 121 0060 0694     		str	r4, [sp, #24]
 460:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 122              		.loc 1 460 3 is_stmt 1 view .LVU33
 123 0062 03A9     		add	r1, sp, #12
 124 0064 2846     		mov	r0, r5
 125 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL2:
 461:Core/Src/main.c **** 
 462:Core/Src/main.c ****   /*Configure GPIO pin : PA2 */
 463:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 127              		.loc 1 463 3 view .LVU34
 128              		.loc 1 463 23 is_stmt 0 view .LVU35
 129 006a 0423     		movs	r3, #4
 130 006c 0393     		str	r3, [sp, #12]
 464:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 131              		.loc 1 464 3 is_stmt 1 view .LVU36
 132              		.loc 1 464 24 is_stmt 0 view .LVU37
 133 006e 0494     		str	r4, [sp, #16]
 465:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 134              		.loc 1 465 3 is_stmt 1 view .LVU38
 135              		.loc 1 465 24 is_stmt 0 view .LVU39
 136 0070 0594     		str	r4, [sp, #20]
 466:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 137              		.loc 1 466 3 is_stmt 1 view .LVU40
 138 0072 03A9     		add	r1, sp, #12
 139 0074 2846     		mov	r0, r5
 140 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 141              	.LVL3:
 467:Core/Src/main.c **** 
 468:Core/Src/main.c **** }
 142              		.loc 1 468 1 is_stmt 0 view .LVU41
 143 007a 09B0     		add	sp, sp, #36
 144              	.LCFI2:
 145              		.cfi_def_cfa_offset 20
 146              		@ sp needed
 147 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 148              	.L4:
 149 007e 00BF     		.align	2
 150              	.L3:
 151 0080 00380240 		.word	1073887232
 152 0084 00000240 		.word	1073872896
 153              		.cfi_endproc
 154              	.LFE223:
 156              		.section	.text.MX_DMA_Init,"ax",%progbits
 157              		.align	1
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccatTIhU.s 			page 12


 163              	MX_DMA_Init:
 164              	.LFB222:
 420:Core/Src/main.c **** 
 165              		.loc 1 420 1 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 8
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 00B5     		push	{lr}
 170              	.LCFI3:
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 14, -4
 173 0002 83B0     		sub	sp, sp, #12
 174              	.LCFI4:
 175              		.cfi_def_cfa_offset 16
 423:Core/Src/main.c **** 
 176              		.loc 1 423 3 view .LVU43
 177              	.LBB6:
 423:Core/Src/main.c **** 
 178              		.loc 1 423 3 view .LVU44
 179 0004 0021     		movs	r1, #0
 180 0006 0191     		str	r1, [sp, #4]
 423:Core/Src/main.c **** 
 181              		.loc 1 423 3 view .LVU45
 182 0008 094B     		ldr	r3, .L7
 183 000a 1A6B     		ldr	r2, [r3, #48]
 184 000c 42F48002 		orr	r2, r2, #4194304
 185 0010 1A63     		str	r2, [r3, #48]
 423:Core/Src/main.c **** 
 186              		.loc 1 423 3 view .LVU46
 187 0012 1B6B     		ldr	r3, [r3, #48]
 188 0014 03F48003 		and	r3, r3, #4194304
 189 0018 0193     		str	r3, [sp, #4]
 423:Core/Src/main.c **** 
 190              		.loc 1 423 3 view .LVU47
 191 001a 019B     		ldr	r3, [sp, #4]
 192              	.LBE6:
 423:Core/Src/main.c **** 
 193              		.loc 1 423 3 view .LVU48
 427:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 194              		.loc 1 427 3 view .LVU49
 195 001c 0A46     		mov	r2, r1
 196 001e 3820     		movs	r0, #56
 197 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 198              	.LVL4:
 428:Core/Src/main.c **** 
 199              		.loc 1 428 3 view .LVU50
 200 0024 3820     		movs	r0, #56
 201 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 202              	.LVL5:
 430:Core/Src/main.c **** 
 203              		.loc 1 430 1 is_stmt 0 view .LVU51
 204 002a 03B0     		add	sp, sp, #12
 205              	.LCFI5:
 206              		.cfi_def_cfa_offset 4
 207              		@ sp needed
 208 002c 5DF804FB 		ldr	pc, [sp], #4
 209              	.L8:
ARM GAS  /tmp/ccatTIhU.s 			page 13


 210              		.align	2
 211              	.L7:
 212 0030 00380240 		.word	1073887232
 213              		.cfi_endproc
 214              	.LFE222:
 216              		.global	__aeabi_i2d
 217              		.global	__aeabi_dmul
 218              		.global	__aeabi_dcmpge
 219              		.section	.text.prechargeControl,"ax",%progbits
 220              		.align	1
 221              		.global	prechargeControl
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu fpv4-sp-d16
 227              	prechargeControl:
 228              	.LFB225:
 469:Core/Src/main.c **** 
 470:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 471:Core/Src/main.c **** 
 472:Core/Src/main.c **** // *** functions *** //
 473:Core/Src/main.c **** 
 474:Core/Src/main.c **** 
 475:Core/Src/main.c **** /**
 476:Core/Src/main.c ****  * overwriting the weak function defined in the includes which is the ISR for the CAN interrupt
 477:Core/Src/main.c ****  */
 478:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan1)
 479:Core/Src/main.c **** {
 480:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(hcan1, CAN_RX_FIFO0, &rxHeader, canRX) != HAL_OK)
 481:Core/Src/main.c ****     Error_Handler();
 482:Core/Src/main.c **** 
 483:Core/Src/main.c ****   // get rinehart bus voltage
 484:Core/Src/main.c ****   if (rxHeader.StdId == 0x0A7)
 485:Core/Src/main.c ****   {
 486:Core/Src/main.c ****     // rinehart voltage is spread across the first 2 bytes
 487:Core/Src/main.c **** 	  int rine1 = canRX[0];
 488:Core/Src/main.c ****     int rine2 = canRX[1];
 489:Core/Src/main.c ****     // combine the first two bytes and assign that to the rinehart voltage
 490:Core/Src/main.c ****     rinehartVoltage = (rine1 << 8) | rine2;
 491:Core/Src/main.c ****   }
 492:Core/Src/main.c **** 
 493:Core/Src/main.c ****   // get BMS total voltages
 494:Core/Src/main.c ****   if (rxHeader.StdId == 0x001)
 495:Core/Src/main.c ****   {
 496:Core/Src/main.c ****     int volt1 = canRX[4];
 497:Core/Src/main.c ****     int volt2 = canRX[3];
 498:Core/Src/main.c ****     int volt3 = canRX[6];
 499:Core/Src/main.c ****     int volt4 = canRX[5];
 500:Core/Src/main.c **** 
 501:Core/Src/main.c ****     int emus1 = (volt1 << 8) | volt2;
 502:Core/Src/main.c ****     int emus2 = (volt3 << 8) | volt4;
 503:Core/Src/main.c ****     emusVoltage = (emus1 << 16) | emus2;  
 504:Core/Src/main.c ****   }
 505:Core/Src/main.c **** }
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** 
 508:Core/Src/main.c **** /**
ARM GAS  /tmp/ccatTIhU.s 			page 14


 509:Core/Src/main.c ****  * @brief 
 510:Core/Src/main.c ****  * 
 511:Core/Src/main.c ****  */
 512:Core/Src/main.c **** void prechargeControl()
 513:Core/Src/main.c **** {
 229              		.loc 1 513 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233 0000 38B5     		push	{r3, r4, r5, lr}
 234              	.LCFI6:
 235              		.cfi_def_cfa_offset 16
 236              		.cfi_offset 3, -16
 237              		.cfi_offset 4, -12
 238              		.cfi_offset 5, -8
 239              		.cfi_offset 14, -4
 514:Core/Src/main.c **** 	switch (prechargeState)
 240              		.loc 1 514 2 view .LVU53
 241 0002 1F4B     		ldr	r3, .L20+8
 242 0004 1B68     		ldr	r3, [r3]
 243 0006 032B     		cmp	r3, #3
 244 0008 32D8     		bhi	.L10
 245 000a DFE803F0 		tbb	[pc, r3]
 246              	.L12:
 247 000e 02       		.byte	(.L15-.L12)/2
 248 000f 0E       		.byte	(.L14-.L12)/2
 249 0010 29       		.byte	(.L13-.L12)/2
 250 0011 2D       		.byte	(.L11-.L12)/2
 251              		.p2align 1
 252              	.L15:
 515:Core/Src/main.c **** 	{
 516:Core/Src/main.c **** 		case (PRECHARGE_OFF):
 517:Core/Src/main.c **** 			// set ready to drive to false
 518:Core/Src/main.c **** 			readyToDrive = 0;
 253              		.loc 1 518 4 view .LVU54
 254              		.loc 1 518 17 is_stmt 0 view .LVU55
 255 0012 1C4B     		ldr	r3, .L20+12
 256 0014 0022     		movs	r2, #0
 257 0016 1A60     		str	r2, [r3]
 519:Core/Src/main.c **** 
 520:Core/Src/main.c **** 			// if the dc dc system is on then move to precharge on
 521:Core/Src/main.c **** 			// if (DCDCEnable == 1)
 522:Core/Src/main.c **** 			// 	prechargeState = PRECHARGE_ON;
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****       // this state sends a message to rinehart to turn 
 525:Core/Src/main.c ****       TxData[0] = 10; // controled by precharge
 258              		.loc 1 525 7 is_stmt 1 view .LVU56
 259              		.loc 1 525 17 is_stmt 0 view .LVU57
 260 0018 1B4A     		ldr	r2, .L20+16
 261 001a 0A23     		movs	r3, #10
 262 001c 1370     		strb	r3, [r2]
 526:Core/Src/main.c ****       // send message
 527:Core/Src/main.c ****       HAL_CAN_AddTxMessage(&hcan1, &txHeader2, TxData, &TxMailbox);
 263              		.loc 1 527 7 is_stmt 1 view .LVU58
 264 001e 1B4B     		ldr	r3, .L20+20
 265 0020 1B49     		ldr	r1, .L20+24
 266 0022 1C48     		ldr	r0, .L20+28
ARM GAS  /tmp/ccatTIhU.s 			page 15


 267 0024 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 268              	.LVL6:
 528:Core/Src/main.c **** 
 529:Core/Src/main.c **** 		break;
 269              		.loc 1 529 3 view .LVU59
 270              	.L9:
 530:Core/Src/main.c **** 
 531:Core/Src/main.c **** 		case (PRECHARGE_ON):
 532:Core/Src/main.c ****       
 533:Core/Src/main.c **** 			// ensure voltages are above correct values
 534:Core/Src/main.c **** 			if (rinehartVoltage >= (emusVoltage * PRECHARGE_COEFFICIENT))
 535:Core/Src/main.c **** 			{ 
 536:Core/Src/main.c **** 				// if the RTD button is pressed, move to precharge done
 537:Core/Src/main.c **** 				// if (RTDButtonPressed == 1)
 538:Core/Src/main.c **** 				  prechargeState = PRECHARGE_DONE;
 539:Core/Src/main.c **** 			}
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****       // if we do this for too long, move to error state
 542:Core/Src/main.c **** 
 543:Core/Src/main.c **** 			// if we have a DCDC fault, end precharge
 544:Core/Src/main.c **** 			// if (DCDCFault == 1)
 545:Core/Src/main.c **** 			// 	prechargeState = PRECHARGE_ERROR;
 546:Core/Src/main.c **** 		break;
 547:Core/Src/main.c **** 
 548:Core/Src/main.c **** 		case (PRECHARGE_DONE):
 549:Core/Src/main.c **** 			// now that precharge is complete we can drive the car
 550:Core/Src/main.c **** 			readyToDrive = 1;
 551:Core/Src/main.c ****       // message is sent to rinehart to turn on main contactor
 552:Core/Src/main.c **** 		break;
 553:Core/Src/main.c **** 
 554:Core/Src/main.c **** 		case (PRECHARGE_ERROR):
 555:Core/Src/main.c **** 			// the car is most definitly not ready to drive
 556:Core/Src/main.c **** 			// probably requires hard reboot of systems to clear this state
 557:Core/Src/main.c **** 			readyToDrive = 0;
 558:Core/Src/main.c **** 		break;
 559:Core/Src/main.c **** 
 560:Core/Src/main.c **** 		default:
 561:Core/Src/main.c ****       // fall back state, this indicates we did some undefined action that brought us here
 562:Core/Src/main.c ****       // we will move to PRECHARGE_ERROR to ensure readyToDrive stays false :)
 563:Core/Src/main.c **** 			prechargeState = PRECHARGE_ERROR;
 564:Core/Src/main.c **** 		break;
 565:Core/Src/main.c **** 	}
 566:Core/Src/main.c **** }
 271              		.loc 1 566 1 is_stmt 0 view .LVU60
 272 0028 38BD     		pop	{r3, r4, r5, pc}
 273              	.L14:
 534:Core/Src/main.c **** 			{ 
 274              		.loc 1 534 4 is_stmt 1 view .LVU61
 534:Core/Src/main.c **** 			{ 
 275              		.loc 1 534 24 is_stmt 0 view .LVU62
 276 002a 1B4B     		ldr	r3, .L20+32
 277 002c 1868     		ldr	r0, [r3]
 278 002e FFF7FEFF 		bl	__aeabi_i2d
 279              	.LVL7:
 280 0032 0446     		mov	r4, r0
 281 0034 0D46     		mov	r5, r1
 534:Core/Src/main.c **** 			{ 
ARM GAS  /tmp/ccatTIhU.s 			page 16


 282              		.loc 1 534 40 view .LVU63
 283 0036 194B     		ldr	r3, .L20+36
 284 0038 1868     		ldr	r0, [r3]
 285 003a FFF7FEFF 		bl	__aeabi_i2d
 286              	.LVL8:
 287 003e 0EA3     		adr	r3, .L20
 288 0040 D3E90023 		ldrd	r2, [r3]
 289 0044 FFF7FEFF 		bl	__aeabi_dmul
 290              	.LVL9:
 291 0048 0246     		mov	r2, r0
 292 004a 0B46     		mov	r3, r1
 534:Core/Src/main.c **** 			{ 
 293              		.loc 1 534 7 view .LVU64
 294 004c 2046     		mov	r0, r4
 295 004e 2946     		mov	r1, r5
 296 0050 FFF7FEFF 		bl	__aeabi_dcmpge
 297              	.LVL10:
 298 0054 0028     		cmp	r0, #0
 299 0056 E7D0     		beq	.L9
 538:Core/Src/main.c **** 			}
 300              		.loc 1 538 7 is_stmt 1 view .LVU65
 538:Core/Src/main.c **** 			}
 301              		.loc 1 538 22 is_stmt 0 view .LVU66
 302 0058 094B     		ldr	r3, .L20+8
 303 005a 0222     		movs	r2, #2
 304 005c 1A60     		str	r2, [r3]
 305 005e E3E7     		b	.L9
 306              	.L13:
 550:Core/Src/main.c ****       // message is sent to rinehart to turn on main contactor
 307              		.loc 1 550 4 is_stmt 1 view .LVU67
 550:Core/Src/main.c ****       // message is sent to rinehart to turn on main contactor
 308              		.loc 1 550 17 is_stmt 0 view .LVU68
 309 0060 084B     		ldr	r3, .L20+12
 310 0062 0122     		movs	r2, #1
 311 0064 1A60     		str	r2, [r3]
 552:Core/Src/main.c **** 
 312              		.loc 1 552 3 is_stmt 1 view .LVU69
 313 0066 DFE7     		b	.L9
 314              	.L11:
 557:Core/Src/main.c **** 		break;
 315              		.loc 1 557 4 view .LVU70
 557:Core/Src/main.c **** 		break;
 316              		.loc 1 557 17 is_stmt 0 view .LVU71
 317 0068 064B     		ldr	r3, .L20+12
 318 006a 0022     		movs	r2, #0
 319 006c 1A60     		str	r2, [r3]
 558:Core/Src/main.c **** 
 320              		.loc 1 558 3 is_stmt 1 view .LVU72
 321 006e DBE7     		b	.L9
 322              	.L10:
 563:Core/Src/main.c **** 		break;
 323              		.loc 1 563 4 view .LVU73
 563:Core/Src/main.c **** 		break;
 324              		.loc 1 563 19 is_stmt 0 view .LVU74
 325 0070 034B     		ldr	r3, .L20+8
 326 0072 0322     		movs	r2, #3
 327 0074 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccatTIhU.s 			page 17


 564:Core/Src/main.c **** 	}
 328              		.loc 1 564 3 is_stmt 1 view .LVU75
 329              		.loc 1 566 1 is_stmt 0 view .LVU76
 330 0076 D7E7     		b	.L9
 331              	.L21:
 332              		.align	3
 333              	.L20:
 334 0078 CDCCCCCC 		.word	3435973837
 335 007c CCCCEC3F 		.word	1072483532
 336 0080 00000000 		.word	.LANCHOR0
 337 0084 00000000 		.word	.LANCHOR1
 338 0088 00000000 		.word	TxData
 339 008c 00000000 		.word	TxMailbox
 340 0090 00000000 		.word	txHeader2
 341 0094 00000000 		.word	hcan1
 342 0098 00000000 		.word	.LANCHOR2
 343 009c 00000000 		.word	.LANCHOR3
 344              		.cfi_endproc
 345              	.LFE225:
 347              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 348              		.align	1
 349              		.global	HAL_TIM_PeriodElapsedCallback
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 353              		.fpu fpv4-sp-d16
 355              	HAL_TIM_PeriodElapsedCallback:
 356              	.LVL11:
 357              	.LFB226:
 567:Core/Src/main.c **** 
 568:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
 358              		.loc 1 568 60 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		.loc 1 568 60 is_stmt 0 view .LVU78
 363 0000 10B5     		push	{r4, lr}
 364              	.LCFI7:
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 4, -8
 367              		.cfi_offset 14, -4
 368 0002 0446     		mov	r4, r0
 569:Core/Src/main.c ****   // send can message
 570:Core/Src/main.c ****   if (htim == &htim14){
 369              		.loc 1 570 3 is_stmt 1 view .LVU79
 370              		.loc 1 570 6 is_stmt 0 view .LVU80
 371 0004 0F4B     		ldr	r3, .L28
 372 0006 9842     		cmp	r0, r3
 373 0008 03D0     		beq	.L26
 374              	.LVL12:
 375              	.L23:
 571:Core/Src/main.c ****     // define message
 572:Core/Src/main.c ****     TxData[0] = readyToDrive; // controled by precharge
 573:Core/Src/main.c ****     TxData[1] = DCDCFault; // 0 for now TODO: implement fault detection
 574:Core/Src/main.c ****     TxData[2] = vicoreTemp; // DMA update
 575:Core/Src/main.c ****     TxData[3] = rinehartVoltage; // update on CAN message
 576:Core/Src/main.c ****     TxData[4] = emusVoltage; // update on CAN message
ARM GAS  /tmp/ccatTIhU.s 			page 18


 577:Core/Src/main.c ****     // send message
 578:Core/Src/main.c ****     HAL_CAN_AddTxMessage(&hcan1, &txHeader1, TxData, &TxMailbox);
 579:Core/Src/main.c ****   }
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****   // check precharge status
 582:Core/Src/main.c ****   if(htim == &htim13){
 376              		.loc 1 582 3 is_stmt 1 view .LVU81
 377              		.loc 1 582 5 is_stmt 0 view .LVU82
 378 000a 0F4B     		ldr	r3, .L28+4
 379 000c 9C42     		cmp	r4, r3
 380 000e 16D0     		beq	.L27
 381              	.L22:
 583:Core/Src/main.c ****     prechargeControl();
 584:Core/Src/main.c ****   }
 585:Core/Src/main.c **** 
 586:Core/Src/main.c **** }
 382              		.loc 1 586 1 view .LVU83
 383 0010 10BD     		pop	{r4, pc}
 384              	.LVL13:
 385              	.L26:
 572:Core/Src/main.c ****     TxData[1] = DCDCFault; // 0 for now TODO: implement fault detection
 386              		.loc 1 572 5 is_stmt 1 view .LVU84
 572:Core/Src/main.c ****     TxData[1] = DCDCFault; // 0 for now TODO: implement fault detection
 387              		.loc 1 572 15 is_stmt 0 view .LVU85
 388 0012 0E4A     		ldr	r2, .L28+8
 389 0014 0E4B     		ldr	r3, .L28+12
 390 0016 1B68     		ldr	r3, [r3]
 391 0018 1370     		strb	r3, [r2]
 573:Core/Src/main.c ****     TxData[2] = vicoreTemp; // DMA update
 392              		.loc 1 573 5 is_stmt 1 view .LVU86
 573:Core/Src/main.c ****     TxData[2] = vicoreTemp; // DMA update
 393              		.loc 1 573 15 is_stmt 0 view .LVU87
 394 001a 0E4B     		ldr	r3, .L28+16
 395 001c 1B68     		ldr	r3, [r3]
 396 001e 5370     		strb	r3, [r2, #1]
 574:Core/Src/main.c ****     TxData[3] = rinehartVoltage; // update on CAN message
 397              		.loc 1 574 5 is_stmt 1 view .LVU88
 574:Core/Src/main.c ****     TxData[3] = rinehartVoltage; // update on CAN message
 398              		.loc 1 574 15 is_stmt 0 view .LVU89
 399 0020 0D4B     		ldr	r3, .L28+20
 400 0022 1B68     		ldr	r3, [r3]
 401 0024 9370     		strb	r3, [r2, #2]
 575:Core/Src/main.c ****     TxData[4] = emusVoltage; // update on CAN message
 402              		.loc 1 575 5 is_stmt 1 view .LVU90
 575:Core/Src/main.c ****     TxData[4] = emusVoltage; // update on CAN message
 403              		.loc 1 575 15 is_stmt 0 view .LVU91
 404 0026 0D4B     		ldr	r3, .L28+24
 405 0028 1B68     		ldr	r3, [r3]
 406 002a D370     		strb	r3, [r2, #3]
 576:Core/Src/main.c ****     // send message
 407              		.loc 1 576 5 is_stmt 1 view .LVU92
 576:Core/Src/main.c ****     // send message
 408              		.loc 1 576 15 is_stmt 0 view .LVU93
 409 002c 0C4B     		ldr	r3, .L28+28
 410 002e 1B68     		ldr	r3, [r3]
 411 0030 1371     		strb	r3, [r2, #4]
 578:Core/Src/main.c ****   }
ARM GAS  /tmp/ccatTIhU.s 			page 19


 412              		.loc 1 578 5 is_stmt 1 view .LVU94
 413 0032 0C4B     		ldr	r3, .L28+32
 414 0034 0C49     		ldr	r1, .L28+36
 415 0036 0D48     		ldr	r0, .L28+40
 416              	.LVL14:
 578:Core/Src/main.c ****   }
 417              		.loc 1 578 5 is_stmt 0 view .LVU95
 418 0038 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 419              	.LVL15:
 420 003c E5E7     		b	.L23
 421              	.L27:
 583:Core/Src/main.c ****   }
 422              		.loc 1 583 5 is_stmt 1 view .LVU96
 423 003e FFF7FEFF 		bl	prechargeControl
 424              	.LVL16:
 425              		.loc 1 586 1 is_stmt 0 view .LVU97
 426 0042 E5E7     		b	.L22
 427              	.L29:
 428              		.align	2
 429              	.L28:
 430 0044 00000000 		.word	htim14
 431 0048 00000000 		.word	htim13
 432 004c 00000000 		.word	TxData
 433 0050 00000000 		.word	.LANCHOR1
 434 0054 00000000 		.word	.LANCHOR4
 435 0058 00000000 		.word	.LANCHOR5
 436 005c 00000000 		.word	.LANCHOR2
 437 0060 00000000 		.word	.LANCHOR3
 438 0064 00000000 		.word	TxMailbox
 439 0068 00000000 		.word	txHeader1
 440 006c 00000000 		.word	hcan1
 441              		.cfi_endproc
 442              	.LFE226:
 444              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 445              		.align	1
 446              		.global	HAL_ADC_ConvCpltCallback
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu fpv4-sp-d16
 452              	HAL_ADC_ConvCpltCallback:
 453              	.LVL17:
 454              	.LFB227:
 587:Core/Src/main.c **** 
 588:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
 455              		.loc 1 588 55 is_stmt 1 view -0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459              		.loc 1 588 55 is_stmt 0 view .LVU99
 460 0000 08B5     		push	{r3, lr}
 461              	.LCFI8:
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 3, -8
 464              		.cfi_offset 14, -4
 589:Core/Src/main.c ****   // TODO: check analog values for the temperature conversion
 590:Core/Src/main.c ****   // Define threshold for when the fan should turn on
ARM GAS  /tmp/ccatTIhU.s 			page 20


 591:Core/Src/main.c **** 
 592:Core/Src/main.c ****   // update vicor temp
 593:Core/Src/main.c ****   vicoreTemp = adc_buf[0];
 465              		.loc 1 593 3 is_stmt 1 view .LVU100
 466              		.loc 1 593 23 is_stmt 0 view .LVU101
 467 0002 094B     		ldr	r3, .L34
 468 0004 1B68     		ldr	r3, [r3]
 469              		.loc 1 593 14 view .LVU102
 470 0006 094A     		ldr	r2, .L34+4
 471 0008 1360     		str	r3, [r2]
 594:Core/Src/main.c **** 
 595:Core/Src/main.c ****   // set fan based on value
 596:Core/Src/main.c ****   if (vicoreTemp >= 2048){
 472              		.loc 1 596 3 is_stmt 1 view .LVU103
 473              		.loc 1 596 6 is_stmt 0 view .LVU104
 474 000a B3F5006F 		cmp	r3, #2048
 475 000e 05DB     		blt	.L31
 597:Core/Src/main.c ****     // set the fan high
 598:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 476              		.loc 1 598 5 is_stmt 1 view .LVU105
 477 0010 0122     		movs	r2, #1
 478 0012 1146     		mov	r1, r2
 479 0014 0648     		ldr	r0, .L34+8
 480              	.LVL18:
 481              		.loc 1 598 5 is_stmt 0 view .LVU106
 482 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 483              	.LVL19:
 484              	.L30:
 599:Core/Src/main.c ****   } else{
 600:Core/Src/main.c ****     // set fan low
 601:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 602:Core/Src/main.c ****   }
 603:Core/Src/main.c **** }
 485              		.loc 1 603 1 view .LVU107
 486 001a 08BD     		pop	{r3, pc}
 487              	.LVL20:
 488              	.L31:
 601:Core/Src/main.c ****   }
 489              		.loc 1 601 5 is_stmt 1 view .LVU108
 490 001c 0022     		movs	r2, #0
 491 001e 0121     		movs	r1, #1
 492 0020 0348     		ldr	r0, .L34+8
 493              	.LVL21:
 601:Core/Src/main.c ****   }
 494              		.loc 1 601 5 is_stmt 0 view .LVU109
 495 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 496              	.LVL22:
 497              		.loc 1 603 1 view .LVU110
 498 0026 F8E7     		b	.L30
 499              	.L35:
 500              		.align	2
 501              	.L34:
 502 0028 00000000 		.word	adc_buf
 503 002c 00000000 		.word	.LANCHOR5
 504 0030 00000240 		.word	1073872896
 505              		.cfi_endproc
 506              	.LFE227:
ARM GAS  /tmp/ccatTIhU.s 			page 21


 508              		.section	.text.Error_Handler,"ax",%progbits
 509              		.align	1
 510              		.global	Error_Handler
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 514              		.fpu fpv4-sp-d16
 516              	Error_Handler:
 517              	.LFB228:
 604:Core/Src/main.c **** 
 605:Core/Src/main.c **** /* USER CODE END 4 */
 606:Core/Src/main.c **** 
 607:Core/Src/main.c **** /**
 608:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 609:Core/Src/main.c ****   * @retval None
 610:Core/Src/main.c ****   */
 611:Core/Src/main.c **** void Error_Handler(void)
 612:Core/Src/main.c **** {
 518              		.loc 1 612 1 is_stmt 1 view -0
 519              		.cfi_startproc
 520              		@ Volatile: function does not return.
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 613:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 614:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 615:Core/Src/main.c ****   __disable_irq();
 524              		.loc 1 615 3 view .LVU112
 525              	.LBB7:
 526              	.LBI7:
 527              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
ARM GAS  /tmp/ccatTIhU.s 			page 22


  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccatTIhU.s 			page 23


  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
ARM GAS  /tmp/ccatTIhU.s 			page 24


 528              		.loc 2 140 27 view .LVU113
 529              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 530              		.loc 2 142 3 view .LVU114
 531              		.syntax unified
 532              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 533 0000 72B6     		cpsid i
 534              	@ 0 "" 2
 535              		.thumb
 536              		.syntax unified
 537              	.L37:
 538              	.LBE8:
 539              	.LBE7:
 616:Core/Src/main.c ****   while (1)
 540              		.loc 1 616 3 discriminator 1 view .LVU115
 617:Core/Src/main.c ****   {
 618:Core/Src/main.c ****   }
 541              		.loc 1 618 3 discriminator 1 view .LVU116
 616:Core/Src/main.c ****   while (1)
 542              		.loc 1 616 9 discriminator 1 view .LVU117
 543 0002 FEE7     		b	.L37
 544              		.cfi_endproc
 545              	.LFE228:
 547              		.section	.text.MX_CAN1_Init,"ax",%progbits
 548              		.align	1
 549              		.syntax unified
 550              		.thumb
 551              		.thumb_func
 552              		.fpu fpv4-sp-d16
 554              	MX_CAN1_Init:
 555              	.LFB219:
 299:Core/Src/main.c **** 
 556              		.loc 1 299 1 view -0
 557              		.cfi_startproc
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 0, uses_anonymous_args = 0
 560 0000 70B5     		push	{r4, r5, r6, lr}
 561              	.LCFI9:
 562              		.cfi_def_cfa_offset 16
 563              		.cfi_offset 4, -16
 564              		.cfi_offset 5, -12
 565              		.cfi_offset 6, -8
 566              		.cfi_offset 14, -4
 306:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 567              		.loc 1 306 3 view .LVU119
 306:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 568              		.loc 1 306 18 is_stmt 0 view .LVU120
 569 0002 1D48     		ldr	r0, .L42
 570 0004 1D4B     		ldr	r3, .L42+4
 571 0006 0360     		str	r3, [r0]
 307:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 572              		.loc 1 307 3 is_stmt 1 view .LVU121
 307:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 573              		.loc 1 307 24 is_stmt 0 view .LVU122
 574 0008 1223     		movs	r3, #18
 575 000a 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/ccatTIhU.s 			page 25


 308:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 576              		.loc 1 308 3 is_stmt 1 view .LVU123
 308:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 577              		.loc 1 308 19 is_stmt 0 view .LVU124
 578 000c 0023     		movs	r3, #0
 579 000e 8360     		str	r3, [r0, #8]
 309:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 580              		.loc 1 309 3 is_stmt 1 view .LVU125
 309:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 581              		.loc 1 309 28 is_stmt 0 view .LVU126
 582 0010 C360     		str	r3, [r0, #12]
 310:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 583              		.loc 1 310 3 is_stmt 1 view .LVU127
 310:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 584              		.loc 1 310 23 is_stmt 0 view .LVU128
 585 0012 4FF40032 		mov	r2, #131072
 586 0016 0261     		str	r2, [r0, #16]
 311:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 587              		.loc 1 311 3 is_stmt 1 view .LVU129
 311:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 588              		.loc 1 311 23 is_stmt 0 view .LVU130
 589 0018 4361     		str	r3, [r0, #20]
 312:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 590              		.loc 1 312 3 is_stmt 1 view .LVU131
 312:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 591              		.loc 1 312 32 is_stmt 0 view .LVU132
 592 001a 0376     		strb	r3, [r0, #24]
 313:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = ENABLE;
 593              		.loc 1 313 3 is_stmt 1 view .LVU133
 313:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = ENABLE;
 594              		.loc 1 313 25 is_stmt 0 view .LVU134
 595 001c 4376     		strb	r3, [r0, #25]
 314:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 596              		.loc 1 314 3 is_stmt 1 view .LVU135
 314:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 597              		.loc 1 314 25 is_stmt 0 view .LVU136
 598 001e 0122     		movs	r2, #1
 599 0020 8276     		strb	r2, [r0, #26]
 315:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 600              		.loc 1 315 3 is_stmt 1 view .LVU137
 315:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 601              		.loc 1 315 33 is_stmt 0 view .LVU138
 602 0022 C276     		strb	r2, [r0, #27]
 316:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 603              		.loc 1 316 3 is_stmt 1 view .LVU139
 316:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 604              		.loc 1 316 32 is_stmt 0 view .LVU140
 605 0024 0377     		strb	r3, [r0, #28]
 317:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 606              		.loc 1 317 3 is_stmt 1 view .LVU141
 317:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 607              		.loc 1 317 35 is_stmt 0 view .LVU142
 608 0026 4377     		strb	r3, [r0, #29]
 318:Core/Src/main.c ****   {
 609              		.loc 1 318 3 is_stmt 1 view .LVU143
 318:Core/Src/main.c ****   {
 610              		.loc 1 318 7 is_stmt 0 view .LVU144
ARM GAS  /tmp/ccatTIhU.s 			page 26


 611 0028 FFF7FEFF 		bl	HAL_CAN_Init
 612              	.LVL23:
 318:Core/Src/main.c ****   {
 613              		.loc 1 318 6 view .LVU145
 614 002c 10BB     		cbnz	r0, .L41
 325:Core/Src/main.c ****   	canFilter0.FilterIdLow = 0x000;
 615              		.loc 1 325 5 is_stmt 1 view .LVU146
 325:Core/Src/main.c ****   	canFilter0.FilterIdLow = 0x000;
 616              		.loc 1 325 29 is_stmt 0 view .LVU147
 617 002e 1449     		ldr	r1, .L42+8
 618 0030 4FF46463 		mov	r3, #3648
 619 0034 0B60     		str	r3, [r1]
 326:Core/Src/main.c ****     canFilter0.FilterMaskIdHigh = 0x072 << 5;
 620              		.loc 1 326 4 is_stmt 1 view .LVU148
 326:Core/Src/main.c ****     canFilter0.FilterMaskIdHigh = 0x072 << 5;
 621              		.loc 1 326 27 is_stmt 0 view .LVU149
 622 0036 0024     		movs	r4, #0
 623 0038 4C60     		str	r4, [r1, #4]
 327:Core/Src/main.c ****   	canFilter0.FilterMaskIdLow = 0x000;
 624              		.loc 1 327 5 is_stmt 1 view .LVU150
 327:Core/Src/main.c ****   	canFilter0.FilterMaskIdLow = 0x000;
 625              		.loc 1 327 33 is_stmt 0 view .LVU151
 626 003a 8B60     		str	r3, [r1, #8]
 328:Core/Src/main.c ****     canFilter0.FilterBank = 0;
 627              		.loc 1 328 4 is_stmt 1 view .LVU152
 328:Core/Src/main.c ****     canFilter0.FilterBank = 0;
 628              		.loc 1 328 31 is_stmt 0 view .LVU153
 629 003c CC60     		str	r4, [r1, #12]
 329:Core/Src/main.c ****   	canFilter0.FilterMode = CAN_FILTERMODE_IDMASK;
 630              		.loc 1 329 5 is_stmt 1 view .LVU154
 329:Core/Src/main.c ****   	canFilter0.FilterMode = CAN_FILTERMODE_IDMASK;
 631              		.loc 1 329 27 is_stmt 0 view .LVU155
 632 003e 4C61     		str	r4, [r1, #20]
 330:Core/Src/main.c ****   	canFilter0.FilterFIFOAssignment = CAN_RX_FIFO0;
 633              		.loc 1 330 4 is_stmt 1 view .LVU156
 330:Core/Src/main.c ****   	canFilter0.FilterFIFOAssignment = CAN_RX_FIFO0;
 634              		.loc 1 330 26 is_stmt 0 view .LVU157
 635 0040 8C61     		str	r4, [r1, #24]
 331:Core/Src/main.c ****   	canFilter0.FilterScale = CAN_FILTERSCALE_32BIT;
 636              		.loc 1 331 4 is_stmt 1 view .LVU158
 331:Core/Src/main.c ****   	canFilter0.FilterScale = CAN_FILTERSCALE_32BIT;
 637              		.loc 1 331 36 is_stmt 0 view .LVU159
 638 0042 0C61     		str	r4, [r1, #16]
 332:Core/Src/main.c ****   	canFilter0.FilterActivation = ENABLE;
 639              		.loc 1 332 4 is_stmt 1 view .LVU160
 332:Core/Src/main.c ****   	canFilter0.FilterActivation = ENABLE;
 640              		.loc 1 332 27 is_stmt 0 view .LVU161
 641 0044 0125     		movs	r5, #1
 642 0046 CD61     		str	r5, [r1, #28]
 333:Core/Src/main.c **** 
 643              		.loc 1 333 4 is_stmt 1 view .LVU162
 333:Core/Src/main.c **** 
 644              		.loc 1 333 32 is_stmt 0 view .LVU163
 645 0048 0D62     		str	r5, [r1, #32]
 335:Core/Src/main.c **** 
 646              		.loc 1 335 5 is_stmt 1 view .LVU164
 647 004a 0B4E     		ldr	r6, .L42
ARM GAS  /tmp/ccatTIhU.s 			page 27


 648 004c 3046     		mov	r0, r6
 649 004e FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 650              	.LVL24:
 338:Core/Src/main.c ****   	canFilter1.FilterIdLow = 0x0A0;
 651              		.loc 1 338 5 view .LVU165
 338:Core/Src/main.c ****   	canFilter1.FilterIdLow = 0x0A0;
 652              		.loc 1 338 29 is_stmt 0 view .LVU166
 653 0052 0C49     		ldr	r1, .L42+12
 654 0054 4FF4B152 		mov	r2, #5664
 655 0058 0A60     		str	r2, [r1]
 339:Core/Src/main.c ****     canFilter1.FilterMaskIdHigh = 0x0B1 << 5;
 656              		.loc 1 339 4 is_stmt 1 view .LVU167
 339:Core/Src/main.c ****     canFilter1.FilterMaskIdHigh = 0x0B1 << 5;
 657              		.loc 1 339 27 is_stmt 0 view .LVU168
 658 005a A023     		movs	r3, #160
 659 005c 4B60     		str	r3, [r1, #4]
 340:Core/Src/main.c ****   	canFilter1.FilterMaskIdLow = 0x0A0;
 660              		.loc 1 340 5 is_stmt 1 view .LVU169
 340:Core/Src/main.c ****   	canFilter1.FilterMaskIdLow = 0x0A0;
 661              		.loc 1 340 33 is_stmt 0 view .LVU170
 662 005e 8A60     		str	r2, [r1, #8]
 341:Core/Src/main.c ****     canFilter1.FilterBank = 1;
 663              		.loc 1 341 4 is_stmt 1 view .LVU171
 341:Core/Src/main.c ****     canFilter1.FilterBank = 1;
 664              		.loc 1 341 31 is_stmt 0 view .LVU172
 665 0060 CB60     		str	r3, [r1, #12]
 342:Core/Src/main.c ****   	canFilter1.FilterMode = CAN_FILTERMODE_IDMASK;
 666              		.loc 1 342 5 is_stmt 1 view .LVU173
 342:Core/Src/main.c ****   	canFilter1.FilterMode = CAN_FILTERMODE_IDMASK;
 667              		.loc 1 342 27 is_stmt 0 view .LVU174
 668 0062 4D61     		str	r5, [r1, #20]
 343:Core/Src/main.c ****   	canFilter1.FilterFIFOAssignment = CAN_RX_FIFO0;
 669              		.loc 1 343 4 is_stmt 1 view .LVU175
 343:Core/Src/main.c ****   	canFilter1.FilterFIFOAssignment = CAN_RX_FIFO0;
 670              		.loc 1 343 26 is_stmt 0 view .LVU176
 671 0064 8C61     		str	r4, [r1, #24]
 344:Core/Src/main.c ****   	canFilter1.FilterScale = CAN_FILTERSCALE_32BIT;
 672              		.loc 1 344 4 is_stmt 1 view .LVU177
 344:Core/Src/main.c ****   	canFilter1.FilterScale = CAN_FILTERSCALE_32BIT;
 673              		.loc 1 344 36 is_stmt 0 view .LVU178
 674 0066 0C61     		str	r4, [r1, #16]
 345:Core/Src/main.c ****   	canFilter1.FilterActivation = ENABLE;
 675              		.loc 1 345 4 is_stmt 1 view .LVU179
 345:Core/Src/main.c ****   	canFilter1.FilterActivation = ENABLE;
 676              		.loc 1 345 27 is_stmt 0 view .LVU180
 677 0068 CD61     		str	r5, [r1, #28]
 346:Core/Src/main.c **** 
 678              		.loc 1 346 4 is_stmt 1 view .LVU181
 346:Core/Src/main.c **** 
 679              		.loc 1 346 32 is_stmt 0 view .LVU182
 680 006a 0D62     		str	r5, [r1, #32]
 348:Core/Src/main.c **** 
 681              		.loc 1 348 5 is_stmt 1 view .LVU183
 682 006c 3046     		mov	r0, r6
 683 006e FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 684              	.LVL25:
 352:Core/Src/main.c **** 
ARM GAS  /tmp/ccatTIhU.s 			page 28


 685              		.loc 1 352 1 is_stmt 0 view .LVU184
 686 0072 70BD     		pop	{r4, r5, r6, pc}
 687              	.L41:
 320:Core/Src/main.c ****   }
 688              		.loc 1 320 5 is_stmt 1 view .LVU185
 689 0074 FFF7FEFF 		bl	Error_Handler
 690              	.LVL26:
 691              	.L43:
 692              		.align	2
 693              	.L42:
 694 0078 00000000 		.word	hcan1
 695 007c 00640040 		.word	1073767424
 696 0080 00000000 		.word	canFilter0
 697 0084 00000000 		.word	canFilter1
 698              		.cfi_endproc
 699              	.LFE219:
 701              		.section	.text.MX_ADC1_Init,"ax",%progbits
 702              		.align	1
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
 706              		.fpu fpv4-sp-d16
 708              	MX_ADC1_Init:
 709              	.LFB218:
 252:Core/Src/main.c **** 
 710              		.loc 1 252 1 view -0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 16
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714 0000 00B5     		push	{lr}
 715              	.LCFI10:
 716              		.cfi_def_cfa_offset 4
 717              		.cfi_offset 14, -4
 718 0002 85B0     		sub	sp, sp, #20
 719              	.LCFI11:
 720              		.cfi_def_cfa_offset 24
 257:Core/Src/main.c **** 
 721              		.loc 1 257 3 view .LVU187
 257:Core/Src/main.c **** 
 722              		.loc 1 257 26 is_stmt 0 view .LVU188
 723 0004 0023     		movs	r3, #0
 724 0006 0093     		str	r3, [sp]
 725 0008 0193     		str	r3, [sp, #4]
 726 000a 0293     		str	r3, [sp, #8]
 727 000c 0393     		str	r3, [sp, #12]
 263:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 728              		.loc 1 263 3 is_stmt 1 view .LVU189
 263:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 729              		.loc 1 263 18 is_stmt 0 view .LVU190
 730 000e 1448     		ldr	r0, .L50
 731 0010 144A     		ldr	r2, .L50+4
 732 0012 0260     		str	r2, [r0]
 264:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 733              		.loc 1 264 3 is_stmt 1 view .LVU191
 264:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 734              		.loc 1 264 29 is_stmt 0 view .LVU192
 735 0014 4FF48032 		mov	r2, #65536
ARM GAS  /tmp/ccatTIhU.s 			page 29


 736 0018 4260     		str	r2, [r0, #4]
 265:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 737              		.loc 1 265 3 is_stmt 1 view .LVU193
 265:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 738              		.loc 1 265 25 is_stmt 0 view .LVU194
 739 001a 8360     		str	r3, [r0, #8]
 266:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 740              		.loc 1 266 3 is_stmt 1 view .LVU195
 266:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 741              		.loc 1 266 27 is_stmt 0 view .LVU196
 742 001c 0361     		str	r3, [r0, #16]
 267:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 743              		.loc 1 267 3 is_stmt 1 view .LVU197
 267:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 744              		.loc 1 267 33 is_stmt 0 view .LVU198
 745 001e 0122     		movs	r2, #1
 746 0020 0276     		strb	r2, [r0, #24]
 268:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 747              		.loc 1 268 3 is_stmt 1 view .LVU199
 268:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 748              		.loc 1 268 36 is_stmt 0 view .LVU200
 749 0022 80F82030 		strb	r3, [r0, #32]
 269:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 750              		.loc 1 269 3 is_stmt 1 view .LVU201
 269:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 751              		.loc 1 269 35 is_stmt 0 view .LVU202
 752 0026 C362     		str	r3, [r0, #44]
 270:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 753              		.loc 1 270 3 is_stmt 1 view .LVU203
 270:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 754              		.loc 1 270 31 is_stmt 0 view .LVU204
 755 0028 0F49     		ldr	r1, .L50+8
 756 002a 8162     		str	r1, [r0, #40]
 271:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 757              		.loc 1 271 3 is_stmt 1 view .LVU205
 271:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 758              		.loc 1 271 24 is_stmt 0 view .LVU206
 759 002c C360     		str	r3, [r0, #12]
 272:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 760              		.loc 1 272 3 is_stmt 1 view .LVU207
 272:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 761              		.loc 1 272 30 is_stmt 0 view .LVU208
 762 002e C261     		str	r2, [r0, #28]
 273:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 763              		.loc 1 273 3 is_stmt 1 view .LVU209
 273:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 764              		.loc 1 273 36 is_stmt 0 view .LVU210
 765 0030 80F83020 		strb	r2, [r0, #48]
 274:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 766              		.loc 1 274 3 is_stmt 1 view .LVU211
 274:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 767              		.loc 1 274 27 is_stmt 0 view .LVU212
 768 0034 4261     		str	r2, [r0, #20]
 275:Core/Src/main.c ****   {
 769              		.loc 1 275 3 is_stmt 1 view .LVU213
 275:Core/Src/main.c ****   {
 770              		.loc 1 275 7 is_stmt 0 view .LVU214
ARM GAS  /tmp/ccatTIhU.s 			page 30


 771 0036 FFF7FEFF 		bl	HAL_ADC_Init
 772              	.LVL27:
 275:Core/Src/main.c ****   {
 773              		.loc 1 275 6 view .LVU215
 774 003a 68B9     		cbnz	r0, .L48
 281:Core/Src/main.c ****   sConfig.Rank = 1;
 775              		.loc 1 281 3 is_stmt 1 view .LVU216
 281:Core/Src/main.c ****   sConfig.Rank = 1;
 776              		.loc 1 281 19 is_stmt 0 view .LVU217
 777 003c 0723     		movs	r3, #7
 778 003e 0093     		str	r3, [sp]
 282:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 779              		.loc 1 282 3 is_stmt 1 view .LVU218
 282:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 780              		.loc 1 282 16 is_stmt 0 view .LVU219
 781 0040 0123     		movs	r3, #1
 782 0042 0193     		str	r3, [sp, #4]
 283:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 783              		.loc 1 283 3 is_stmt 1 view .LVU220
 283:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 784              		.loc 1 283 24 is_stmt 0 view .LVU221
 785 0044 0023     		movs	r3, #0
 786 0046 0293     		str	r3, [sp, #8]
 284:Core/Src/main.c ****   {
 787              		.loc 1 284 3 is_stmt 1 view .LVU222
 284:Core/Src/main.c ****   {
 788              		.loc 1 284 7 is_stmt 0 view .LVU223
 789 0048 6946     		mov	r1, sp
 790 004a 0548     		ldr	r0, .L50
 791 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 792              	.LVL28:
 284:Core/Src/main.c ****   {
 793              		.loc 1 284 6 view .LVU224
 794 0050 20B9     		cbnz	r0, .L49
 291:Core/Src/main.c **** 
 795              		.loc 1 291 1 view .LVU225
 796 0052 05B0     		add	sp, sp, #20
 797              	.LCFI12:
 798              		.cfi_remember_state
 799              		.cfi_def_cfa_offset 4
 800              		@ sp needed
 801 0054 5DF804FB 		ldr	pc, [sp], #4
 802              	.L48:
 803              	.LCFI13:
 804              		.cfi_restore_state
 277:Core/Src/main.c ****   }
 805              		.loc 1 277 5 is_stmt 1 view .LVU226
 806 0058 FFF7FEFF 		bl	Error_Handler
 807              	.LVL29:
 808              	.L49:
 286:Core/Src/main.c ****   }
 809              		.loc 1 286 5 view .LVU227
 810 005c FFF7FEFF 		bl	Error_Handler
 811              	.LVL30:
 812              	.L51:
 813              		.align	2
 814              	.L50:
ARM GAS  /tmp/ccatTIhU.s 			page 31


 815 0060 00000000 		.word	hadc1
 816 0064 00200140 		.word	1073815552
 817 0068 0100000F 		.word	251658241
 818              		.cfi_endproc
 819              	.LFE218:
 821              		.section	.text.MX_TIM14_Init,"ax",%progbits
 822              		.align	1
 823              		.syntax unified
 824              		.thumb
 825              		.thumb_func
 826              		.fpu fpv4-sp-d16
 828              	MX_TIM14_Init:
 829              	.LFB221:
 391:Core/Src/main.c **** 
 830              		.loc 1 391 1 view -0
 831              		.cfi_startproc
 832              		@ args = 0, pretend = 0, frame = 0
 833              		@ frame_needed = 0, uses_anonymous_args = 0
 834 0000 08B5     		push	{r3, lr}
 835              	.LCFI14:
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 3, -8
 838              		.cfi_offset 14, -4
 400:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 839              		.loc 1 400 3 view .LVU229
 400:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 840              		.loc 1 400 19 is_stmt 0 view .LVU230
 841 0002 0948     		ldr	r0, .L56
 842 0004 094B     		ldr	r3, .L56+4
 843 0006 0360     		str	r3, [r0]
 401:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 844              		.loc 1 401 3 is_stmt 1 view .LVU231
 401:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 845              		.loc 1 401 25 is_stmt 0 view .LVU232
 846 0008 42F22733 		movw	r3, #8999
 847 000c 4360     		str	r3, [r0, #4]
 402:Core/Src/main.c ****   htim14.Init.Period = 5000-1;
 848              		.loc 1 402 3 is_stmt 1 view .LVU233
 402:Core/Src/main.c ****   htim14.Init.Period = 5000-1;
 849              		.loc 1 402 27 is_stmt 0 view .LVU234
 850 000e 0023     		movs	r3, #0
 851 0010 8360     		str	r3, [r0, #8]
 403:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 852              		.loc 1 403 3 is_stmt 1 view .LVU235
 403:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 853              		.loc 1 403 22 is_stmt 0 view .LVU236
 854 0012 41F28732 		movw	r2, #4999
 855 0016 C260     		str	r2, [r0, #12]
 404:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 856              		.loc 1 404 3 is_stmt 1 view .LVU237
 404:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 857              		.loc 1 404 29 is_stmt 0 view .LVU238
 858 0018 0361     		str	r3, [r0, #16]
 405:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 859              		.loc 1 405 3 is_stmt 1 view .LVU239
 405:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 860              		.loc 1 405 33 is_stmt 0 view .LVU240
ARM GAS  /tmp/ccatTIhU.s 			page 32


 861 001a 8361     		str	r3, [r0, #24]
 406:Core/Src/main.c ****   {
 862              		.loc 1 406 3 is_stmt 1 view .LVU241
 406:Core/Src/main.c ****   {
 863              		.loc 1 406 7 is_stmt 0 view .LVU242
 864 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 865              	.LVL31:
 406:Core/Src/main.c ****   {
 866              		.loc 1 406 6 view .LVU243
 867 0020 00B9     		cbnz	r0, .L55
 414:Core/Src/main.c **** 
 868              		.loc 1 414 1 view .LVU244
 869 0022 08BD     		pop	{r3, pc}
 870              	.L55:
 408:Core/Src/main.c ****   }
 871              		.loc 1 408 5 is_stmt 1 view .LVU245
 872 0024 FFF7FEFF 		bl	Error_Handler
 873              	.LVL32:
 874              	.L57:
 875              		.align	2
 876              	.L56:
 877 0028 00000000 		.word	htim14
 878 002c 00200040 		.word	1073750016
 879              		.cfi_endproc
 880              	.LFE221:
 882              		.section	.text.MX_TIM13_Init,"ax",%progbits
 883              		.align	1
 884              		.syntax unified
 885              		.thumb
 886              		.thumb_func
 887              		.fpu fpv4-sp-d16
 889              	MX_TIM13_Init:
 890              	.LFB220:
 360:Core/Src/main.c **** 
 891              		.loc 1 360 1 view -0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895 0000 08B5     		push	{r3, lr}
 896              	.LCFI15:
 897              		.cfi_def_cfa_offset 8
 898              		.cfi_offset 3, -8
 899              		.cfi_offset 14, -4
 369:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 900              		.loc 1 369 3 view .LVU247
 369:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 901              		.loc 1 369 19 is_stmt 0 view .LVU248
 902 0002 0948     		ldr	r0, .L62
 903 0004 094B     		ldr	r3, .L62+4
 904 0006 0360     		str	r3, [r0]
 370:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 905              		.loc 1 370 3 is_stmt 1 view .LVU249
 370:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 906              		.loc 1 370 25 is_stmt 0 view .LVU250
 907 0008 42F22733 		movw	r3, #8999
 908 000c 4360     		str	r3, [r0, #4]
 371:Core/Src/main.c ****   htim13.Init.Period = 1000-1;
ARM GAS  /tmp/ccatTIhU.s 			page 33


 909              		.loc 1 371 3 is_stmt 1 view .LVU251
 371:Core/Src/main.c ****   htim13.Init.Period = 1000-1;
 910              		.loc 1 371 27 is_stmt 0 view .LVU252
 911 000e 0023     		movs	r3, #0
 912 0010 8360     		str	r3, [r0, #8]
 372:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 913              		.loc 1 372 3 is_stmt 1 view .LVU253
 372:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 914              		.loc 1 372 22 is_stmt 0 view .LVU254
 915 0012 40F2E732 		movw	r2, #999
 916 0016 C260     		str	r2, [r0, #12]
 373:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 917              		.loc 1 373 3 is_stmt 1 view .LVU255
 373:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 918              		.loc 1 373 29 is_stmt 0 view .LVU256
 919 0018 0361     		str	r3, [r0, #16]
 374:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 920              		.loc 1 374 3 is_stmt 1 view .LVU257
 374:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 921              		.loc 1 374 33 is_stmt 0 view .LVU258
 922 001a 8361     		str	r3, [r0, #24]
 375:Core/Src/main.c ****   {
 923              		.loc 1 375 3 is_stmt 1 view .LVU259
 375:Core/Src/main.c ****   {
 924              		.loc 1 375 7 is_stmt 0 view .LVU260
 925 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 926              	.LVL33:
 375:Core/Src/main.c ****   {
 927              		.loc 1 375 6 view .LVU261
 928 0020 00B9     		cbnz	r0, .L61
 383:Core/Src/main.c **** 
 929              		.loc 1 383 1 view .LVU262
 930 0022 08BD     		pop	{r3, pc}
 931              	.L61:
 377:Core/Src/main.c ****   }
 932              		.loc 1 377 5 is_stmt 1 view .LVU263
 933 0024 FFF7FEFF 		bl	Error_Handler
 934              	.LVL34:
 935              	.L63:
 936              		.align	2
 937              	.L62:
 938 0028 00000000 		.word	htim13
 939 002c 001C0040 		.word	1073748992
 940              		.cfi_endproc
 941              	.LFE220:
 943              		.section	.text.SystemClock_Config,"ax",%progbits
 944              		.align	1
 945              		.global	SystemClock_Config
 946              		.syntax unified
 947              		.thumb
 948              		.thumb_func
 949              		.fpu fpv4-sp-d16
 951              	SystemClock_Config:
 952              	.LFB217:
 206:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 953              		.loc 1 206 1 view -0
 954              		.cfi_startproc
ARM GAS  /tmp/ccatTIhU.s 			page 34


 955              		@ args = 0, pretend = 0, frame = 80
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957 0000 00B5     		push	{lr}
 958              	.LCFI16:
 959              		.cfi_def_cfa_offset 4
 960              		.cfi_offset 14, -4
 961 0002 95B0     		sub	sp, sp, #84
 962              	.LCFI17:
 963              		.cfi_def_cfa_offset 88
 207:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 964              		.loc 1 207 3 view .LVU265
 207:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 965              		.loc 1 207 22 is_stmt 0 view .LVU266
 966 0004 3422     		movs	r2, #52
 967 0006 0021     		movs	r1, #0
 968 0008 07A8     		add	r0, sp, #28
 969 000a FFF7FEFF 		bl	memset
 970              	.LVL35:
 208:Core/Src/main.c **** 
 971              		.loc 1 208 3 is_stmt 1 view .LVU267
 208:Core/Src/main.c **** 
 972              		.loc 1 208 22 is_stmt 0 view .LVU268
 973 000e 0023     		movs	r3, #0
 974 0010 0293     		str	r3, [sp, #8]
 975 0012 0393     		str	r3, [sp, #12]
 976 0014 0493     		str	r3, [sp, #16]
 977 0016 0593     		str	r3, [sp, #20]
 978 0018 0693     		str	r3, [sp, #24]
 212:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 979              		.loc 1 212 3 is_stmt 1 view .LVU269
 980              	.LBB9:
 212:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 981              		.loc 1 212 3 view .LVU270
 982 001a 0093     		str	r3, [sp]
 212:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 983              		.loc 1 212 3 view .LVU271
 984 001c 1E4A     		ldr	r2, .L70
 985 001e 116C     		ldr	r1, [r2, #64]
 986 0020 41F08051 		orr	r1, r1, #268435456
 987 0024 1164     		str	r1, [r2, #64]
 212:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 988              		.loc 1 212 3 view .LVU272
 989 0026 126C     		ldr	r2, [r2, #64]
 990 0028 02F08052 		and	r2, r2, #268435456
 991 002c 0092     		str	r2, [sp]
 212:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 992              		.loc 1 212 3 view .LVU273
 993 002e 009A     		ldr	r2, [sp]
 994              	.LBE9:
 212:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 995              		.loc 1 212 3 view .LVU274
 213:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 996              		.loc 1 213 3 view .LVU275
 997              	.LBB10:
 213:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 998              		.loc 1 213 3 view .LVU276
 999 0030 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/ccatTIhU.s 			page 35


 213:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1000              		.loc 1 213 3 view .LVU277
 1001 0032 1A4A     		ldr	r2, .L70+4
 1002 0034 1168     		ldr	r1, [r2]
 1003 0036 41F44041 		orr	r1, r1, #49152
 1004 003a 1160     		str	r1, [r2]
 213:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1005              		.loc 1 213 3 view .LVU278
 1006 003c 1268     		ldr	r2, [r2]
 1007 003e 02F44042 		and	r2, r2, #49152
 1008 0042 0192     		str	r2, [sp, #4]
 213:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1009              		.loc 1 213 3 view .LVU279
 1010 0044 019A     		ldr	r2, [sp, #4]
 1011              	.LBE10:
 213:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1012              		.loc 1 213 3 view .LVU280
 217:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1013              		.loc 1 217 3 view .LVU281
 217:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1014              		.loc 1 217 36 is_stmt 0 view .LVU282
 1015 0046 0222     		movs	r2, #2
 1016 0048 0792     		str	r2, [sp, #28]
 218:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1017              		.loc 1 218 3 is_stmt 1 view .LVU283
 218:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1018              		.loc 1 218 30 is_stmt 0 view .LVU284
 1019 004a 0121     		movs	r1, #1
 1020 004c 0A91     		str	r1, [sp, #40]
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1021              		.loc 1 219 3 is_stmt 1 view .LVU285
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1022              		.loc 1 219 41 is_stmt 0 view .LVU286
 1023 004e 1021     		movs	r1, #16
 1024 0050 0B91     		str	r1, [sp, #44]
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1025              		.loc 1 220 3 is_stmt 1 view .LVU287
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1026              		.loc 1 220 34 is_stmt 0 view .LVU288
 1027 0052 0D92     		str	r2, [sp, #52]
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1028              		.loc 1 221 3 is_stmt 1 view .LVU289
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1029              		.loc 1 221 35 is_stmt 0 view .LVU290
 1030 0054 0E93     		str	r3, [sp, #56]
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 1031              		.loc 1 222 3 is_stmt 1 view .LVU291
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 1032              		.loc 1 222 30 is_stmt 0 view .LVU292
 1033 0056 0823     		movs	r3, #8
 1034 0058 0F93     		str	r3, [sp, #60]
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1035              		.loc 1 223 3 is_stmt 1 view .LVU293
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1036              		.loc 1 223 30 is_stmt 0 view .LVU294
 1037 005a 5A23     		movs	r3, #90
 1038 005c 1093     		str	r3, [sp, #64]
ARM GAS  /tmp/ccatTIhU.s 			page 36


 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1039              		.loc 1 224 3 is_stmt 1 view .LVU295
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1040              		.loc 1 224 30 is_stmt 0 view .LVU296
 1041 005e 1192     		str	r2, [sp, #68]
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1042              		.loc 1 225 3 is_stmt 1 view .LVU297
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1043              		.loc 1 225 30 is_stmt 0 view .LVU298
 1044 0060 1292     		str	r2, [sp, #72]
 226:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1045              		.loc 1 226 3 is_stmt 1 view .LVU299
 226:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1046              		.loc 1 226 30 is_stmt 0 view .LVU300
 1047 0062 1392     		str	r2, [sp, #76]
 227:Core/Src/main.c ****   {
 1048              		.loc 1 227 3 is_stmt 1 view .LVU301
 227:Core/Src/main.c ****   {
 1049              		.loc 1 227 7 is_stmt 0 view .LVU302
 1050 0064 07A8     		add	r0, sp, #28
 1051 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1052              	.LVL36:
 227:Core/Src/main.c ****   {
 1053              		.loc 1 227 6 view .LVU303
 1054 006a 88B9     		cbnz	r0, .L68
 233:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1055              		.loc 1 233 3 is_stmt 1 view .LVU304
 233:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1056              		.loc 1 233 31 is_stmt 0 view .LVU305
 1057 006c 0F23     		movs	r3, #15
 1058 006e 0293     		str	r3, [sp, #8]
 235:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1059              		.loc 1 235 3 is_stmt 1 view .LVU306
 235:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1060              		.loc 1 235 34 is_stmt 0 view .LVU307
 1061 0070 0223     		movs	r3, #2
 1062 0072 0393     		str	r3, [sp, #12]
 236:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1063              		.loc 1 236 3 is_stmt 1 view .LVU308
 236:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1064              		.loc 1 236 35 is_stmt 0 view .LVU309
 1065 0074 0023     		movs	r3, #0
 1066 0076 0493     		str	r3, [sp, #16]
 237:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1067              		.loc 1 237 3 is_stmt 1 view .LVU310
 237:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1068              		.loc 1 237 36 is_stmt 0 view .LVU311
 1069 0078 4FF48052 		mov	r2, #4096
 1070 007c 0592     		str	r2, [sp, #20]
 238:Core/Src/main.c **** 
 1071              		.loc 1 238 3 is_stmt 1 view .LVU312
 238:Core/Src/main.c **** 
 1072              		.loc 1 238 36 is_stmt 0 view .LVU313
 1073 007e 0693     		str	r3, [sp, #24]
 240:Core/Src/main.c ****   {
 1074              		.loc 1 240 3 is_stmt 1 view .LVU314
 240:Core/Src/main.c ****   {
ARM GAS  /tmp/ccatTIhU.s 			page 37


 1075              		.loc 1 240 7 is_stmt 0 view .LVU315
 1076 0080 0321     		movs	r1, #3
 1077 0082 02A8     		add	r0, sp, #8
 1078 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1079              	.LVL37:
 240:Core/Src/main.c ****   {
 1080              		.loc 1 240 6 view .LVU316
 1081 0088 20B9     		cbnz	r0, .L69
 244:Core/Src/main.c **** 
 1082              		.loc 1 244 1 view .LVU317
 1083 008a 15B0     		add	sp, sp, #84
 1084              	.LCFI18:
 1085              		.cfi_remember_state
 1086              		.cfi_def_cfa_offset 4
 1087              		@ sp needed
 1088 008c 5DF804FB 		ldr	pc, [sp], #4
 1089              	.L68:
 1090              	.LCFI19:
 1091              		.cfi_restore_state
 229:Core/Src/main.c ****   }
 1092              		.loc 1 229 5 is_stmt 1 view .LVU318
 1093 0090 FFF7FEFF 		bl	Error_Handler
 1094              	.LVL38:
 1095              	.L69:
 242:Core/Src/main.c ****   }
 1096              		.loc 1 242 5 view .LVU319
 1097 0094 FFF7FEFF 		bl	Error_Handler
 1098              	.LVL39:
 1099              	.L71:
 1100              		.align	2
 1101              	.L70:
 1102 0098 00380240 		.word	1073887232
 1103 009c 00700040 		.word	1073770496
 1104              		.cfi_endproc
 1105              	.LFE217:
 1107              		.section	.text.main,"ax",%progbits
 1108              		.align	1
 1109              		.global	main
 1110              		.syntax unified
 1111              		.thumb
 1112              		.thumb_func
 1113              		.fpu fpv4-sp-d16
 1115              	main:
 1116              	.LFB216:
 111:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1117              		.loc 1 111 1 view -0
 1118              		.cfi_startproc
 1119              		@ Volatile: function does not return.
 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122 0000 08B5     		push	{r3, lr}
 1123              	.LCFI20:
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 3, -8
 1126              		.cfi_offset 14, -4
 119:Core/Src/main.c **** 
 1127              		.loc 1 119 3 view .LVU321
ARM GAS  /tmp/ccatTIhU.s 			page 38


 1128 0002 FFF7FEFF 		bl	HAL_Init
 1129              	.LVL40:
 125:Core/Src/main.c **** 
 1130              		.loc 1 125 3 view .LVU322
 1131 0006 FFF7FEFF 		bl	SystemClock_Config
 1132              	.LVL41:
 131:Core/Src/main.c ****   MX_CAN1_Init();
 1133              		.loc 1 131 3 view .LVU323
 1134 000a FFF7FEFF 		bl	MX_GPIO_Init
 1135              	.LVL42:
 132:Core/Src/main.c ****   MX_DMA_Init();
 1136              		.loc 1 132 3 view .LVU324
 1137 000e FFF7FEFF 		bl	MX_CAN1_Init
 1138              	.LVL43:
 133:Core/Src/main.c ****   MX_ADC1_Init();
 1139              		.loc 1 133 3 view .LVU325
 1140 0012 FFF7FEFF 		bl	MX_DMA_Init
 1141              	.LVL44:
 134:Core/Src/main.c ****   MX_TIM14_Init();
 1142              		.loc 1 134 3 view .LVU326
 1143 0016 FFF7FEFF 		bl	MX_ADC1_Init
 1144              	.LVL45:
 135:Core/Src/main.c ****   MX_TIM13_Init();
 1145              		.loc 1 135 3 view .LVU327
 1146 001a FFF7FEFF 		bl	MX_TIM14_Init
 1147              	.LVL46:
 136:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1148              		.loc 1 136 3 view .LVU328
 1149 001e FFF7FEFF 		bl	MX_TIM13_Init
 1150              	.LVL47:
 140:Core/Src/main.c ****   txHeader0.IDE = CAN_ID_STD;
 1151              		.loc 1 140 3 view .LVU329
 140:Core/Src/main.c ****   txHeader0.IDE = CAN_ID_STD;
 1152              		.loc 1 140 17 is_stmt 0 view .LVU330
 1153 0022 174A     		ldr	r2, .L75
 1154 0024 0821     		movs	r1, #8
 1155 0026 1161     		str	r1, [r2, #16]
 141:Core/Src/main.c ****   txHeader0.RTR = CAN_RTR_DATA;
 1156              		.loc 1 141 3 is_stmt 1 view .LVU331
 141:Core/Src/main.c ****   txHeader0.RTR = CAN_RTR_DATA;
 1157              		.loc 1 141 17 is_stmt 0 view .LVU332
 1158 0028 0023     		movs	r3, #0
 1159 002a 9360     		str	r3, [r2, #8]
 142:Core/Src/main.c ****   txHeader0.StdId = 0x086;
 1160              		.loc 1 142 3 is_stmt 1 view .LVU333
 142:Core/Src/main.c ****   txHeader0.StdId = 0x086;
 1161              		.loc 1 142 17 is_stmt 0 view .LVU334
 1162 002c D360     		str	r3, [r2, #12]
 143:Core/Src/main.c ****   txHeader0.ExtId = 0;
 1163              		.loc 1 143 3 is_stmt 1 view .LVU335
 143:Core/Src/main.c ****   txHeader0.ExtId = 0;
 1164              		.loc 1 143 19 is_stmt 0 view .LVU336
 1165 002e 8620     		movs	r0, #134
 1166 0030 1060     		str	r0, [r2]
 144:Core/Src/main.c ****   txHeader0.TransmitGlobalTime = DISABLE;
 1167              		.loc 1 144 3 is_stmt 1 view .LVU337
 144:Core/Src/main.c ****   txHeader0.TransmitGlobalTime = DISABLE;
ARM GAS  /tmp/ccatTIhU.s 			page 39


 1168              		.loc 1 144 19 is_stmt 0 view .LVU338
 1169 0032 5360     		str	r3, [r2, #4]
 145:Core/Src/main.c **** 
 1170              		.loc 1 145 3 is_stmt 1 view .LVU339
 145:Core/Src/main.c **** 
 1171              		.loc 1 145 32 is_stmt 0 view .LVU340
 1172 0034 1375     		strb	r3, [r2, #20]
 148:Core/Src/main.c ****   txHeader1.IDE = CAN_ID_STD;
 1173              		.loc 1 148 3 is_stmt 1 view .LVU341
 148:Core/Src/main.c ****   txHeader1.IDE = CAN_ID_STD;
 1174              		.loc 1 148 17 is_stmt 0 view .LVU342
 1175 0036 134A     		ldr	r2, .L75+4
 1176 0038 1161     		str	r1, [r2, #16]
 149:Core/Src/main.c ****   txHeader1.RTR = CAN_RTR_DATA;
 1177              		.loc 1 149 3 is_stmt 1 view .LVU343
 149:Core/Src/main.c ****   txHeader1.RTR = CAN_RTR_DATA;
 1178              		.loc 1 149 17 is_stmt 0 view .LVU344
 1179 003a 9360     		str	r3, [r2, #8]
 150:Core/Src/main.c ****   txHeader1.StdId = 0x087;
 1180              		.loc 1 150 3 is_stmt 1 view .LVU345
 150:Core/Src/main.c ****   txHeader1.StdId = 0x087;
 1181              		.loc 1 150 17 is_stmt 0 view .LVU346
 1182 003c D360     		str	r3, [r2, #12]
 151:Core/Src/main.c ****   txHeader1.ExtId = 0;
 1183              		.loc 1 151 3 is_stmt 1 view .LVU347
 151:Core/Src/main.c ****   txHeader1.ExtId = 0;
 1184              		.loc 1 151 19 is_stmt 0 view .LVU348
 1185 003e 8720     		movs	r0, #135
 1186 0040 1060     		str	r0, [r2]
 152:Core/Src/main.c ****   txHeader1.TransmitGlobalTime = DISABLE;
 1187              		.loc 1 152 3 is_stmt 1 view .LVU349
 152:Core/Src/main.c ****   txHeader1.TransmitGlobalTime = DISABLE;
 1188              		.loc 1 152 19 is_stmt 0 view .LVU350
 1189 0042 5360     		str	r3, [r2, #4]
 153:Core/Src/main.c **** 
 1190              		.loc 1 153 3 is_stmt 1 view .LVU351
 153:Core/Src/main.c **** 
 1191              		.loc 1 153 32 is_stmt 0 view .LVU352
 1192 0044 1375     		strb	r3, [r2, #20]
 156:Core/Src/main.c ****   txHeader2.IDE = CAN_ID_STD;
 1193              		.loc 1 156 3 is_stmt 1 view .LVU353
 156:Core/Src/main.c ****   txHeader2.IDE = CAN_ID_STD;
 1194              		.loc 1 156 17 is_stmt 0 view .LVU354
 1195 0046 104A     		ldr	r2, .L75+8
 1196 0048 1161     		str	r1, [r2, #16]
 157:Core/Src/main.c ****   txHeader2.RTR = CAN_RTR_DATA;
 1197              		.loc 1 157 3 is_stmt 1 view .LVU355
 157:Core/Src/main.c ****   txHeader2.RTR = CAN_RTR_DATA;
 1198              		.loc 1 157 17 is_stmt 0 view .LVU356
 1199 004a 9360     		str	r3, [r2, #8]
 158:Core/Src/main.c ****   txHeader2.StdId = 0x0C1;
 1200              		.loc 1 158 3 is_stmt 1 view .LVU357
 158:Core/Src/main.c ****   txHeader2.StdId = 0x0C1;
 1201              		.loc 1 158 17 is_stmt 0 view .LVU358
 1202 004c D360     		str	r3, [r2, #12]
 159:Core/Src/main.c ****   txHeader2.ExtId = 0;
 1203              		.loc 1 159 3 is_stmt 1 view .LVU359
ARM GAS  /tmp/ccatTIhU.s 			page 40


 159:Core/Src/main.c ****   txHeader2.ExtId = 0;
 1204              		.loc 1 159 19 is_stmt 0 view .LVU360
 1205 004e C121     		movs	r1, #193
 1206 0050 1160     		str	r1, [r2]
 160:Core/Src/main.c ****   txHeader2.TransmitGlobalTime = DISABLE;
 1207              		.loc 1 160 3 is_stmt 1 view .LVU361
 160:Core/Src/main.c ****   txHeader2.TransmitGlobalTime = DISABLE;
 1208              		.loc 1 160 19 is_stmt 0 view .LVU362
 1209 0052 5360     		str	r3, [r2, #4]
 161:Core/Src/main.c **** 
 1210              		.loc 1 161 3 is_stmt 1 view .LVU363
 161:Core/Src/main.c **** 
 1211              		.loc 1 161 32 is_stmt 0 view .LVU364
 1212 0054 1375     		strb	r3, [r2, #20]
 163:Core/Src/main.c **** 	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);   // Initialize CAN Bus Rx Inte
 1213              		.loc 1 163 2 is_stmt 1 view .LVU365
 1214 0056 0D4C     		ldr	r4, .L75+12
 1215 0058 2046     		mov	r0, r4
 1216 005a FFF7FEFF 		bl	HAL_CAN_Start
 1217              	.LVL48:
 164:Core/Src/main.c **** 
 1218              		.loc 1 164 2 view .LVU366
 1219 005e 0221     		movs	r1, #2
 1220 0060 2046     		mov	r0, r4
 1221 0062 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 1222              	.LVL49:
 167:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim13);
 1223              		.loc 1 167 3 view .LVU367
 1224 0066 0A48     		ldr	r0, .L75+16
 1225 0068 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1226              	.LVL50:
 168:Core/Src/main.c **** 
 1227              		.loc 1 168 3 view .LVU368
 1228 006c 0948     		ldr	r0, .L75+20
 1229 006e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1230              	.LVL51:
 171:Core/Src/main.c **** 
 1231              		.loc 1 171 2 view .LVU369
 1232 0072 40F6F672 		movw	r2, #4086
 1233 0076 0849     		ldr	r1, .L75+24
 1234 0078 0848     		ldr	r0, .L75+28
 1235 007a FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1236              	.LVL52:
 1237              	.L73:
 177:Core/Src/main.c ****   {
 1238              		.loc 1 177 3 discriminator 1 view .LVU370
 197:Core/Src/main.c ****   /* USER CODE END 3 */
 1239              		.loc 1 197 3 discriminator 1 view .LVU371
 177:Core/Src/main.c ****   {
 1240              		.loc 1 177 9 discriminator 1 view .LVU372
 1241 007e FEE7     		b	.L73
 1242              	.L76:
 1243              		.align	2
 1244              	.L75:
 1245 0080 00000000 		.word	txHeader0
 1246 0084 00000000 		.word	txHeader1
 1247 0088 00000000 		.word	txHeader2
ARM GAS  /tmp/ccatTIhU.s 			page 41


 1248 008c 00000000 		.word	hcan1
 1249 0090 00000000 		.word	htim14
 1250 0094 00000000 		.word	htim13
 1251 0098 00000000 		.word	adc_buf
 1252 009c 00000000 		.word	hadc1
 1253              		.cfi_endproc
 1254              	.LFE216:
 1256              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 1257              		.align	1
 1258              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 1259              		.syntax unified
 1260              		.thumb
 1261              		.thumb_func
 1262              		.fpu fpv4-sp-d16
 1264              	HAL_CAN_RxFifo0MsgPendingCallback:
 1265              	.LVL53:
 1266              	.LFB224:
 479:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(hcan1, CAN_RX_FIFO0, &rxHeader, canRX) != HAL_OK)
 1267              		.loc 1 479 1 view -0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 479:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(hcan1, CAN_RX_FIFO0, &rxHeader, canRX) != HAL_OK)
 1271              		.loc 1 479 1 is_stmt 0 view .LVU374
 1272 0000 10B5     		push	{r4, lr}
 1273              	.LCFI21:
 1274              		.cfi_def_cfa_offset 8
 1275              		.cfi_offset 4, -8
 1276              		.cfi_offset 14, -4
 480:Core/Src/main.c ****     Error_Handler();
 1277              		.loc 1 480 3 is_stmt 1 view .LVU375
 480:Core/Src/main.c ****     Error_Handler();
 1278              		.loc 1 480 7 is_stmt 0 view .LVU376
 1279 0002 124B     		ldr	r3, .L85
 1280 0004 124A     		ldr	r2, .L85+4
 1281 0006 0021     		movs	r1, #0
 1282 0008 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 1283              	.LVL54:
 480:Core/Src/main.c ****     Error_Handler();
 1284              		.loc 1 480 6 view .LVU377
 1285 000c 30B9     		cbnz	r0, .L82
 484:Core/Src/main.c ****   {
 1286              		.loc 1 484 3 is_stmt 1 view .LVU378
 484:Core/Src/main.c ****   {
 1287              		.loc 1 484 15 is_stmt 0 view .LVU379
 1288 000e 104B     		ldr	r3, .L85+4
 1289 0010 1B68     		ldr	r3, [r3]
 484:Core/Src/main.c ****   {
 1290              		.loc 1 484 6 view .LVU380
 1291 0012 A72B     		cmp	r3, #167
 1292 0014 04D0     		beq	.L83
 1293              	.L79:
 494:Core/Src/main.c ****   {
 1294              		.loc 1 494 3 is_stmt 1 view .LVU381
 494:Core/Src/main.c ****   {
 1295              		.loc 1 494 6 is_stmt 0 view .LVU382
 1296 0016 012B     		cmp	r3, #1
ARM GAS  /tmp/ccatTIhU.s 			page 42


 1297 0018 0AD0     		beq	.L84
 1298              	.L77:
 505:Core/Src/main.c **** 
 1299              		.loc 1 505 1 view .LVU383
 1300 001a 10BD     		pop	{r4, pc}
 1301              	.L82:
 481:Core/Src/main.c **** 
 1302              		.loc 1 481 5 is_stmt 1 view .LVU384
 1303 001c FFF7FEFF 		bl	Error_Handler
 1304              	.LVL55:
 1305              	.L83:
 1306              	.LBB11:
 487:Core/Src/main.c ****     int rine2 = canRX[1];
 1307              		.loc 1 487 4 view .LVU385
 487:Core/Src/main.c ****     int rine2 = canRX[1];
 1308              		.loc 1 487 21 is_stmt 0 view .LVU386
 1309 0020 0A49     		ldr	r1, .L85
 1310 0022 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1311              	.LVL56:
 488:Core/Src/main.c ****     // combine the first two bytes and assign that to the rinehart voltage
 1312              		.loc 1 488 5 is_stmt 1 view .LVU387
 488:Core/Src/main.c ****     // combine the first two bytes and assign that to the rinehart voltage
 1313              		.loc 1 488 22 is_stmt 0 view .LVU388
 1314 0024 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 1315              	.LVL57:
 490:Core/Src/main.c ****   }
 1316              		.loc 1 490 5 is_stmt 1 view .LVU389
 490:Core/Src/main.c ****   }
 1317              		.loc 1 490 36 is_stmt 0 view .LVU390
 1318 0026 42EA0022 		orr	r2, r2, r0, lsl #8
 1319              	.LVL58:
 490:Core/Src/main.c ****   }
 1320              		.loc 1 490 21 view .LVU391
 1321 002a 0A49     		ldr	r1, .L85+8
 1322 002c 0A60     		str	r2, [r1]
 1323 002e F2E7     		b	.L79
 1324              	.LVL59:
 1325              	.L84:
 490:Core/Src/main.c ****   }
 1326              		.loc 1 490 21 view .LVU392
 1327              	.LBE11:
 1328              	.LBB12:
 496:Core/Src/main.c ****     int volt2 = canRX[3];
 1329              		.loc 1 496 5 is_stmt 1 view .LVU393
 496:Core/Src/main.c ****     int volt2 = canRX[3];
 1330              		.loc 1 496 22 is_stmt 0 view .LVU394
 1331 0030 064A     		ldr	r2, .L85
 1332 0032 1479     		ldrb	r4, [r2, #4]	@ zero_extendqisi2
 1333              	.LVL60:
 497:Core/Src/main.c ****     int volt3 = canRX[6];
 1334              		.loc 1 497 5 is_stmt 1 view .LVU395
 497:Core/Src/main.c ****     int volt3 = canRX[6];
 1335              		.loc 1 497 22 is_stmt 0 view .LVU396
 1336 0034 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 1337              	.LVL61:
 498:Core/Src/main.c ****     int volt4 = canRX[5];
 1338              		.loc 1 498 5 is_stmt 1 view .LVU397
ARM GAS  /tmp/ccatTIhU.s 			page 43


 498:Core/Src/main.c ****     int volt4 = canRX[5];
 1339              		.loc 1 498 22 is_stmt 0 view .LVU398
 1340 0036 9079     		ldrb	r0, [r2, #6]	@ zero_extendqisi2
 1341              	.LVL62:
 499:Core/Src/main.c **** 
 1342              		.loc 1 499 5 is_stmt 1 view .LVU399
 499:Core/Src/main.c **** 
 1343              		.loc 1 499 22 is_stmt 0 view .LVU400
 1344 0038 5379     		ldrb	r3, [r2, #5]	@ zero_extendqisi2
 1345              	.LVL63:
 501:Core/Src/main.c ****     int emus2 = (volt3 << 8) | volt4;
 1346              		.loc 1 501 5 is_stmt 1 view .LVU401
 501:Core/Src/main.c ****     int emus2 = (volt3 << 8) | volt4;
 1347              		.loc 1 501 9 is_stmt 0 view .LVU402
 1348 003a 41EA0422 		orr	r2, r1, r4, lsl #8
 1349              	.LVL64:
 502:Core/Src/main.c ****     emusVoltage = (emus1 << 16) | emus2;  
 1350              		.loc 1 502 5 is_stmt 1 view .LVU403
 502:Core/Src/main.c ****     emusVoltage = (emus1 << 16) | emus2;  
 1351              		.loc 1 502 9 is_stmt 0 view .LVU404
 1352 003e 43EA0023 		orr	r3, r3, r0, lsl #8
 1353              	.LVL65:
 503:Core/Src/main.c ****   }
 1354              		.loc 1 503 5 is_stmt 1 view .LVU405
 503:Core/Src/main.c ****   }
 1355              		.loc 1 503 33 is_stmt 0 view .LVU406
 1356 0042 43EA0243 		orr	r3, r3, r2, lsl #16
 1357              	.LVL66:
 503:Core/Src/main.c ****   }
 1358              		.loc 1 503 17 view .LVU407
 1359 0046 044A     		ldr	r2, .L85+12
 1360              	.LVL67:
 503:Core/Src/main.c ****   }
 1361              		.loc 1 503 17 view .LVU408
 1362 0048 1360     		str	r3, [r2]
 1363              	.LBE12:
 505:Core/Src/main.c **** 
 1364              		.loc 1 505 1 view .LVU409
 1365 004a E6E7     		b	.L77
 1366              	.L86:
 1367              		.align	2
 1368              	.L85:
 1369 004c 00000000 		.word	.LANCHOR6
 1370 0050 00000000 		.word	rxHeader
 1371 0054 00000000 		.word	.LANCHOR2
 1372 0058 00000000 		.word	.LANCHOR3
 1373              		.cfi_endproc
 1374              	.LFE224:
 1376              		.comm	canFilter1,40,4
 1377              		.comm	canFilter0,40,4
 1378              		.comm	TxData,8,4
 1379              		.global	canRX
 1380              		.comm	rxHeader,28,4
 1381              		.comm	txHeader2,24,4
 1382              		.comm	txHeader1,24,4
 1383              		.comm	txHeader0,24,4
 1384              		.comm	TxMailbox,4,4
ARM GAS  /tmp/ccatTIhU.s 			page 44


 1385              		.global	prechargeState
 1386              		.global	readyToDrive
 1387              		.global	DCDCFault
 1388              		.comm	adc_buf,16344,4
 1389              		.global	RTDButtonPressed
 1390              		.global	DCDCEnable
 1391              		.global	vicoreTemp
 1392              		.global	emusVoltage
 1393              		.global	rinehartVoltage
 1394              		.comm	htim14,72,4
 1395              		.comm	htim13,72,4
 1396              		.comm	hcan1,40,4
 1397              		.comm	hdma_adc1,96,4
 1398              		.comm	hadc1,72,4
 1399              		.section	.bss.DCDCEnable,"aw",%nobits
 1400              		.align	2
 1403              	DCDCEnable:
 1404 0000 00000000 		.space	4
 1405              		.section	.bss.DCDCFault,"aw",%nobits
 1406              		.align	2
 1407              		.set	.LANCHOR4,. + 0
 1410              	DCDCFault:
 1411 0000 00000000 		.space	4
 1412              		.section	.bss.RTDButtonPressed,"aw",%nobits
 1413              		.align	2
 1416              	RTDButtonPressed:
 1417 0000 00000000 		.space	4
 1418              		.section	.bss.canRX,"aw",%nobits
 1419              		.align	2
 1420              		.set	.LANCHOR6,. + 0
 1423              	canRX:
 1424 0000 00000000 		.space	8
 1424      00000000 
 1425              		.section	.bss.emusVoltage,"aw",%nobits
 1426              		.align	2
 1427              		.set	.LANCHOR3,. + 0
 1430              	emusVoltage:
 1431 0000 00000000 		.space	4
 1432              		.section	.bss.prechargeState,"aw",%nobits
 1433              		.align	2
 1434              		.set	.LANCHOR0,. + 0
 1437              	prechargeState:
 1438 0000 00000000 		.space	4
 1439              		.section	.bss.readyToDrive,"aw",%nobits
 1440              		.align	2
 1441              		.set	.LANCHOR1,. + 0
 1444              	readyToDrive:
 1445 0000 00000000 		.space	4
 1446              		.section	.bss.rinehartVoltage,"aw",%nobits
 1447              		.align	2
 1448              		.set	.LANCHOR2,. + 0
 1451              	rinehartVoltage:
 1452 0000 00000000 		.space	4
 1453              		.section	.bss.vicoreTemp,"aw",%nobits
 1454              		.align	2
 1455              		.set	.LANCHOR5,. + 0
 1458              	vicoreTemp:
ARM GAS  /tmp/ccatTIhU.s 			page 45


 1459 0000 00000000 		.space	4
 1460              		.text
 1461              	.Letext0:
 1462              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1463              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1464              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1465              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 1466              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1467              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1468              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1469              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1470              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1471              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1472              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1473              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1474              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1475              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1476              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1477              		.file 18 "<built-in>"
ARM GAS  /tmp/ccatTIhU.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccatTIhU.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccatTIhU.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccatTIhU.s:151    .text.MX_GPIO_Init:0000000000000080 $d
     /tmp/ccatTIhU.s:157    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccatTIhU.s:163    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccatTIhU.s:212    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/ccatTIhU.s:220    .text.prechargeControl:0000000000000000 $t
     /tmp/ccatTIhU.s:227    .text.prechargeControl:0000000000000000 prechargeControl
     /tmp/ccatTIhU.s:247    .text.prechargeControl:000000000000000e $d
     /tmp/ccatTIhU.s:251    .text.prechargeControl:0000000000000012 $t
     /tmp/ccatTIhU.s:334    .text.prechargeControl:0000000000000078 $d
                            *COM*:0000000000000008 TxData
                            *COM*:0000000000000004 TxMailbox
                            *COM*:0000000000000018 txHeader2
                            *COM*:0000000000000028 hcan1
     /tmp/ccatTIhU.s:348    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccatTIhU.s:355    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccatTIhU.s:430    .text.HAL_TIM_PeriodElapsedCallback:0000000000000044 $d
                            *COM*:0000000000000048 htim14
                            *COM*:0000000000000048 htim13
                            *COM*:0000000000000018 txHeader1
     /tmp/ccatTIhU.s:445    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccatTIhU.s:452    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccatTIhU.s:502    .text.HAL_ADC_ConvCpltCallback:0000000000000028 $d
                            *COM*:0000000000003fd8 adc_buf
     /tmp/ccatTIhU.s:509    .text.Error_Handler:0000000000000000 $t
     /tmp/ccatTIhU.s:516    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccatTIhU.s:548    .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccatTIhU.s:554    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccatTIhU.s:694    .text.MX_CAN1_Init:0000000000000078 $d
                            *COM*:0000000000000028 canFilter0
                            *COM*:0000000000000028 canFilter1
     /tmp/ccatTIhU.s:702    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccatTIhU.s:708    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccatTIhU.s:815    .text.MX_ADC1_Init:0000000000000060 $d
                            *COM*:0000000000000048 hadc1
     /tmp/ccatTIhU.s:822    .text.MX_TIM14_Init:0000000000000000 $t
     /tmp/ccatTIhU.s:828    .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
     /tmp/ccatTIhU.s:877    .text.MX_TIM14_Init:0000000000000028 $d
     /tmp/ccatTIhU.s:883    .text.MX_TIM13_Init:0000000000000000 $t
     /tmp/ccatTIhU.s:889    .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
     /tmp/ccatTIhU.s:938    .text.MX_TIM13_Init:0000000000000028 $d
     /tmp/ccatTIhU.s:944    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccatTIhU.s:951    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccatTIhU.s:1102   .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccatTIhU.s:1108   .text.main:0000000000000000 $t
     /tmp/ccatTIhU.s:1115   .text.main:0000000000000000 main
     /tmp/ccatTIhU.s:1245   .text.main:0000000000000080 $d
                            *COM*:0000000000000018 txHeader0
     /tmp/ccatTIhU.s:1257   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccatTIhU.s:1264   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccatTIhU.s:1369   .text.HAL_CAN_RxFifo0MsgPendingCallback:000000000000004c $d
                            *COM*:000000000000001c rxHeader
     /tmp/ccatTIhU.s:1423   .bss.canRX:0000000000000000 canRX
     /tmp/ccatTIhU.s:1437   .bss.prechargeState:0000000000000000 prechargeState
ARM GAS  /tmp/ccatTIhU.s 			page 47


     /tmp/ccatTIhU.s:1444   .bss.readyToDrive:0000000000000000 readyToDrive
     /tmp/ccatTIhU.s:1410   .bss.DCDCFault:0000000000000000 DCDCFault
     /tmp/ccatTIhU.s:1416   .bss.RTDButtonPressed:0000000000000000 RTDButtonPressed
     /tmp/ccatTIhU.s:1403   .bss.DCDCEnable:0000000000000000 DCDCEnable
     /tmp/ccatTIhU.s:1458   .bss.vicoreTemp:0000000000000000 vicoreTemp
     /tmp/ccatTIhU.s:1430   .bss.emusVoltage:0000000000000000 emusVoltage
     /tmp/ccatTIhU.s:1451   .bss.rinehartVoltage:0000000000000000 rinehartVoltage
                            *COM*:0000000000000060 hdma_adc1
     /tmp/ccatTIhU.s:1400   .bss.DCDCEnable:0000000000000000 $d
     /tmp/ccatTIhU.s:1406   .bss.DCDCFault:0000000000000000 $d
     /tmp/ccatTIhU.s:1413   .bss.RTDButtonPressed:0000000000000000 $d
     /tmp/ccatTIhU.s:1419   .bss.canRX:0000000000000000 $d
     /tmp/ccatTIhU.s:1426   .bss.emusVoltage:0000000000000000 $d
     /tmp/ccatTIhU.s:1433   .bss.prechargeState:0000000000000000 $d
     /tmp/ccatTIhU.s:1440   .bss.readyToDrive:0000000000000000 $d
     /tmp/ccatTIhU.s:1447   .bss.rinehartVoltage:0000000000000000 $d
     /tmp/ccatTIhU.s:1454   .bss.vicoreTemp:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_i2d
__aeabi_dmul
__aeabi_dcmpge
HAL_CAN_AddTxMessage
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_TIM_Base_Start_IT
HAL_ADC_Start_DMA
HAL_CAN_GetRxMessage
