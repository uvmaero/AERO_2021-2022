ARM GAS  /tmp/ccc37uOe.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB223:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** /* USER CODE END PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccc37uOe.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN PD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** // analog buffer
  35:Core/Src/main.c **** #define ADC_BUF_LEN 4086
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** // precharge
  38:Core/Src/main.c **** #define PRECHARGE_COEFFICIENT       0.9		      // 90% complete with precharge so it's probably safe
  39:Core/Src/main.c **** #define NUM_COMMAND_MSG             10
  40:Core/Src/main.c **** #define NUM_VOLTAGE_CHECKS          500         // since we're checking at 10ms Interrupts, 500 wou
  41:Core/Src/main.c ****                                                 // precharge should be done in less than 2 seconds.
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  50:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** TIM_HandleTypeDef htim13;
  55:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** // counters for Rinehart message sending in precharge
  60:Core/Src/main.c **** uint8_t rinehart_send_command_count = 0;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** // inputs
  63:Core/Src/main.c **** uint32_t rinehartVoltage = 0;                 // read from CAN
  64:Core/Src/main.c **** uint32_t emusVoltage = 0;					            // read from CAN
  65:Core/Src/main.c **** int vicoreTemp = 0;					                  // read from DMA, vicore temp
  66:Core/Src/main.c **** int DCDCEnable = 0;                           // dc-dc enable (0 = disabled, 1 = enabled)
  67:Core/Src/main.c **** int RTDButtonPressed = 0;                     // read this from CAN, if it's 1 we can finish precha
  68:Core/Src/main.c **** uint32_t adc_buf[ADC_BUF_LEN];				        // adc read buffer
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** // output
  71:Core/Src/main.c **** int DCDCFault = 0;                            // the dc-dc fault indicator (0 = no fault, 1 = fault
  72:Core/Src/main.c **** int readyToDrive = 0;					                // the car is ready to drive! (0 = not ready, 1 = ready)
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** // precharge states
  75:Core/Src/main.c **** enum prechargeStates
  76:Core/Src/main.c **** {
  77:Core/Src/main.c **** 	PRECHARGE_OFF,
  78:Core/Src/main.c **** 	PRECHARGE_ON,
  79:Core/Src/main.c **** 	PRECHARGE_DONE,
  80:Core/Src/main.c **** 	PRECHARGE_ERROR
  81:Core/Src/main.c **** };
  82:Core/Src/main.c **** uint8_t prechargeState = PRECHARGE_OFF;			  // set initial precharge state to OFF
  83:Core/Src/main.c **** uint8_t lastPrechargeState = PRECHARGE_OFF;
  84:Core/Src/main.c **** uint8_t voltageCheckCount = 0;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** // CAN transmit 
  87:Core/Src/main.c **** uint32_t TxMailbox; 							            // CAN Bus Mail box variable
  88:Core/Src/main.c **** CAN_TxHeaderTypeDef txHeader0; 					      // CAN Bus Transmit Header BASE
ARM GAS  /tmp/ccc37uOe.s 			page 3


  89:Core/Src/main.c **** CAN_TxHeaderTypeDef txHeader1; 					      // CAN Bus Transmit Header DATA
  90:Core/Src/main.c **** CAN_TxHeaderTypeDef txHeader2; 					      // CAN Bus Transmit Header DATA
  91:Core/Src/main.c **** uint8_t TxData[8];                            // CAN transmit buffer
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** // CAN recive
  94:Core/Src/main.c **** CAN_RxHeaderTypeDef rxHeader; 					      // CAN Bus Receive Header
  95:Core/Src/main.c **** uint8_t canRX[8] = {0, 0, 0, 0, 0, 0, 0, 0}; 	// CAN Bus Receive Buffer
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** CAN_FilterTypeDef canFilter0; 					      // CAN Bus Filter for BMS
  98:Core/Src/main.c **** CAN_FilterTypeDef canFilter1;                 // CAN Bus Filter for Rinehart
  99:Core/Src/main.c **** /* USER CODE END PV */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 102:Core/Src/main.c **** void SystemClock_Config(void);
 103:Core/Src/main.c **** static void MX_GPIO_Init(void);
 104:Core/Src/main.c **** static void MX_CAN1_Init(void);
 105:Core/Src/main.c **** static void MX_DMA_Init(void);
 106:Core/Src/main.c **** static void MX_ADC1_Init(void);
 107:Core/Src/main.c **** static void MX_TIM14_Init(void);
 108:Core/Src/main.c **** static void MX_TIM13_Init(void);
 109:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 110:Core/Src/main.c **** void prechargeControl();
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /* USER CODE END PFP */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 115:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 116:Core/Src/main.c **** /* USER CODE END 0 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** /**
 119:Core/Src/main.c ****   * @brief  The application entry point.
 120:Core/Src/main.c ****   * @retval int
 121:Core/Src/main.c ****   */
 122:Core/Src/main.c **** int main(void)
 123:Core/Src/main.c **** {
 124:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END 1 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 131:Core/Src/main.c ****   HAL_Init();
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 134:Core/Src/main.c ****   /* USER CODE END Init */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* Configure the system clock */
 137:Core/Src/main.c ****   SystemClock_Config();
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 140:Core/Src/main.c ****   /* USER CODE END SysInit */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Initialize all configured peripherals */
 143:Core/Src/main.c ****   MX_GPIO_Init();
 144:Core/Src/main.c ****   MX_CAN1_Init();
 145:Core/Src/main.c ****   MX_DMA_Init();
ARM GAS  /tmp/ccc37uOe.s 			page 4


 146:Core/Src/main.c ****   MX_ADC1_Init();
 147:Core/Src/main.c ****   MX_TIM14_Init();
 148:Core/Src/main.c ****   MX_TIM13_Init();
 149:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   // init the CAN mailbox for BASE
 152:Core/Src/main.c ****   txHeader0.DLC = 8; // Number of bites to be transmitted max- 8
 153:Core/Src/main.c ****   txHeader0.IDE = CAN_ID_STD;
 154:Core/Src/main.c ****   txHeader0.RTR = CAN_RTR_DATA;
 155:Core/Src/main.c ****   txHeader0.StdId = 0x086;
 156:Core/Src/main.c ****   txHeader0.ExtId = 0;
 157:Core/Src/main.c ****   txHeader0.TransmitGlobalTime = DISABLE;
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   // init the CAN mailbox for DATA
 160:Core/Src/main.c ****   txHeader1.DLC = 8; // Number of bites to be transmitted max- 8
 161:Core/Src/main.c ****   txHeader1.IDE = CAN_ID_STD;
 162:Core/Src/main.c ****   txHeader1.RTR = CAN_RTR_DATA;
 163:Core/Src/main.c ****   txHeader1.StdId = 0x087;
 164:Core/Src/main.c ****   txHeader1.ExtId = 0;
 165:Core/Src/main.c ****   txHeader1.TransmitGlobalTime = DISABLE;
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   // header for rinehart (Parameter Command Message)
 168:Core/Src/main.c ****   txHeader2.DLC = 8; // Number of bites to be transmitted max- 8
 169:Core/Src/main.c ****   txHeader2.IDE = CAN_ID_STD;
 170:Core/Src/main.c ****   txHeader2.RTR = CAN_RTR_DATA;
 171:Core/Src/main.c ****   txHeader2.StdId = 0x0C1;
 172:Core/Src/main.c ****   txHeader2.ExtId = 0;
 173:Core/Src/main.c ****   txHeader2.TransmitGlobalTime = DISABLE;
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** 	HAL_CAN_Start(&hcan1); // Initialize CAN Bus
 176:Core/Src/main.c **** 	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);   // Initialize CAN Bus Rx Inte
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   // start timers
 179:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim14);
 180:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim13);
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** 	// start ADC DMA
 183:Core/Src/main.c **** 	HAL_ADC_Start_DMA(&hadc1, adc_buf, ADC_BUF_LEN);
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE END 2 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* Infinite loop */
 188:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 189:Core/Src/main.c ****   while (1)
 190:Core/Src/main.c ****   {
 191:Core/Src/main.c ****     /* USER CODE END WHILE */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c ****   /* USER CODE END 3 */
 196:Core/Src/main.c **** }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****   * @brief System Clock Configuration
 200:Core/Src/main.c ****   * @retval None
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c **** void SystemClock_Config(void)
ARM GAS  /tmp/ccc37uOe.s 			page 5


 203:Core/Src/main.c **** {
 204:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 205:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 210:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 211:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 212:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 213:Core/Src/main.c ****   */
 214:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 215:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 216:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 224:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 225:Core/Src/main.c ****   {
 226:Core/Src/main.c ****     Error_Handler();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 231:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 232:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 233:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 238:Core/Src/main.c ****   {
 239:Core/Src/main.c ****     Error_Handler();
 240:Core/Src/main.c ****   }
 241:Core/Src/main.c **** }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /**
 244:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 245:Core/Src/main.c ****   * @param None
 246:Core/Src/main.c ****   * @retval None
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c **** static void MX_ADC1_Init(void)
 249:Core/Src/main.c **** {
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 252:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 257:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 258:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 259:Core/Src/main.c ****   */
ARM GAS  /tmp/ccc37uOe.s 			page 6


 260:Core/Src/main.c ****   hadc1.Instance = ADC1;
 261:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 262:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 263:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 264:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 265:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 266:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 267:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 268:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 269:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 270:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 271:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 272:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 277:Core/Src/main.c ****   */
 278:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 279:Core/Src/main.c ****   sConfig.Rank = 1;
 280:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 281:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 282:Core/Src/main.c ****   {
 283:Core/Src/main.c ****     Error_Handler();
 284:Core/Src/main.c ****   }
 285:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 286:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** }
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /**
 291:Core/Src/main.c ****   * @brief CAN1 Initialization Function
 292:Core/Src/main.c ****   * @param None
 293:Core/Src/main.c ****   * @retval None
 294:Core/Src/main.c ****   */
 295:Core/Src/main.c **** static void MX_CAN1_Init(void)
 296:Core/Src/main.c **** {
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 299:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 302:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 303:Core/Src/main.c ****   hcan1.Instance = CAN1;
 304:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 305:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 306:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 307:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 308:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 309:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 310:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 311:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = ENABLE;
 312:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 313:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 314:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 315:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 316:Core/Src/main.c ****   {
ARM GAS  /tmp/ccc37uOe.s 			page 7


 317:Core/Src/main.c ****     Error_Handler();
 318:Core/Src/main.c ****   }
 319:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   // init the CAN filter for BMS messages
 322:Core/Src/main.c ****     canFilter0.FilterIdHigh = 0x001 << 5;   // BMS IDs: 0 - 0x72
 323:Core/Src/main.c ****   	canFilter0.FilterIdLow = 0x000;
 324:Core/Src/main.c ****     canFilter0.FilterMaskIdHigh = 0x001 << 5;
 325:Core/Src/main.c ****   	canFilter0.FilterMaskIdLow = 0x000;
 326:Core/Src/main.c ****     canFilter0.FilterBank = 0;
 327:Core/Src/main.c ****   	canFilter0.FilterMode = CAN_FILTERMODE_IDMASK;
 328:Core/Src/main.c ****   	canFilter0.FilterFIFOAssignment = CAN_RX_FIFO0;
 329:Core/Src/main.c ****   	canFilter0.FilterScale = CAN_FILTERSCALE_32BIT;
 330:Core/Src/main.c ****   	canFilter0.FilterActivation = ENABLE;
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****     HAL_CAN_ConfigFilter(&hcan1, &canFilter0);
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****     // init the CAN filter for Rinehart messages
 335:Core/Src/main.c ****     canFilter1.FilterIdHigh = 0x0A7 << 5;      // Rinehart IDs: 0xA0 - 0xB1
 336:Core/Src/main.c ****   	canFilter1.FilterIdLow = 0x00;
 337:Core/Src/main.c ****     canFilter1.FilterMaskIdHigh = 0x0A7 << 5;
 338:Core/Src/main.c ****   	canFilter1.FilterMaskIdLow = 0x000;
 339:Core/Src/main.c ****     canFilter1.FilterBank = 1;
 340:Core/Src/main.c ****   	canFilter1.FilterMode = CAN_FILTERMODE_IDMASK;
 341:Core/Src/main.c ****   	canFilter1.FilterFIFOAssignment = CAN_RX_FIFO0;
 342:Core/Src/main.c ****   	canFilter1.FilterScale = CAN_FILTERSCALE_32BIT;
 343:Core/Src/main.c ****   	canFilter1.FilterActivation = ENABLE;
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****     HAL_CAN_ConfigFilter(&hcan1, &canFilter1);
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** }
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** /**
 352:Core/Src/main.c ****   * @brief TIM13 Initialization Function
 353:Core/Src/main.c ****   * @param None
 354:Core/Src/main.c ****   * @retval None
 355:Core/Src/main.c ****   */
 356:Core/Src/main.c **** static void MX_TIM13_Init(void)
 357:Core/Src/main.c **** {
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 0 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* USER CODE END TIM13_Init 0 */
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 1 */
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* USER CODE END TIM13_Init 1 */
 366:Core/Src/main.c ****   htim13.Instance = TIM13;
 367:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 368:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 369:Core/Src/main.c ****   htim13.Init.Period = 1000-1;
 370:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 371:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 372:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 373:Core/Src/main.c ****   {
ARM GAS  /tmp/ccc37uOe.s 			page 8


 374:Core/Src/main.c ****     Error_Handler();
 375:Core/Src/main.c ****   }
 376:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 2 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE END TIM13_Init 2 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** }
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** /**
 383:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 384:Core/Src/main.c ****   * @param None
 385:Core/Src/main.c ****   * @retval None
 386:Core/Src/main.c ****   */
 387:Core/Src/main.c **** static void MX_TIM14_Init(void)
 388:Core/Src/main.c **** {
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 397:Core/Src/main.c ****   htim14.Instance = TIM14;
 398:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 399:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 400:Core/Src/main.c ****   htim14.Init.Period = 5000-1;
 401:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 402:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 403:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 404:Core/Src/main.c ****   {
 405:Core/Src/main.c ****     Error_Handler();
 406:Core/Src/main.c ****   }
 407:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** }
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** /**
 414:Core/Src/main.c ****   * Enable DMA controller clock
 415:Core/Src/main.c ****   */
 416:Core/Src/main.c **** static void MX_DMA_Init(void)
 417:Core/Src/main.c **** {
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   /* DMA controller clock enable */
 420:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /* DMA interrupt init */
 423:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 424:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 425:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 426:Core/Src/main.c **** 
 427:Core/Src/main.c **** }
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** /**
 430:Core/Src/main.c ****   * @brief GPIO Initialization Function
ARM GAS  /tmp/ccc37uOe.s 			page 9


 431:Core/Src/main.c ****   * @param None
 432:Core/Src/main.c ****   * @retval None
 433:Core/Src/main.c ****   */
 434:Core/Src/main.c **** static void MX_GPIO_Init(void)
 435:Core/Src/main.c **** {
  28              		.loc 1 435 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 56
 436:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 436 3 view .LVU1
  44              		.loc 1 436 20 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0394     		str	r4, [sp, #12]
  47 0008 0494     		str	r4, [sp, #16]
  48 000a 0594     		str	r4, [sp, #20]
  49 000c 0694     		str	r4, [sp, #24]
  50 000e 0794     		str	r4, [sp, #28]
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 439:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  51              		.loc 1 439 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 439 3 view .LVU4
  54 0010 0194     		str	r4, [sp, #4]
  55              		.loc 1 439 3 view .LVU5
  56 0012 1B4B     		ldr	r3, .L3
  57 0014 1A6B     		ldr	r2, [r3, #48]
  58 0016 42F08002 		orr	r2, r2, #128
  59 001a 1A63     		str	r2, [r3, #48]
  60              		.loc 1 439 3 view .LVU6
  61 001c 1A6B     		ldr	r2, [r3, #48]
  62 001e 02F08002 		and	r2, r2, #128
  63 0022 0192     		str	r2, [sp, #4]
  64              		.loc 1 439 3 view .LVU7
  65 0024 019A     		ldr	r2, [sp, #4]
  66              	.LBE4:
  67              		.loc 1 439 3 view .LVU8
 440:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 440 3 view .LVU9
  69              	.LBB5:
  70              		.loc 1 440 3 view .LVU10
  71 0026 0294     		str	r4, [sp, #8]
  72              		.loc 1 440 3 view .LVU11
  73 0028 1A6B     		ldr	r2, [r3, #48]
  74 002a 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccc37uOe.s 			page 10


  75 002e 1A63     		str	r2, [r3, #48]
  76              		.loc 1 440 3 view .LVU12
  77 0030 1B6B     		ldr	r3, [r3, #48]
  78 0032 03F00103 		and	r3, r3, #1
  79 0036 0293     		str	r3, [sp, #8]
  80              		.loc 1 440 3 view .LVU13
  81 0038 029B     		ldr	r3, [sp, #8]
  82              	.LBE5:
  83              		.loc 1 440 3 view .LVU14
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 443:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  84              		.loc 1 443 3 view .LVU15
  85 003a 124D     		ldr	r5, .L3+4
  86 003c 2246     		mov	r2, r4
  87 003e 0321     		movs	r1, #3
  88 0040 2846     		mov	r0, r5
  89 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  90              	.LVL0:
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /*Configure GPIO pin : PA0 */
 446:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
  91              		.loc 1 446 3 view .LVU16
  92              		.loc 1 446 23 is_stmt 0 view .LVU17
  93 0046 0126     		movs	r6, #1
  94 0048 0396     		str	r6, [sp, #12]
 447:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  95              		.loc 1 447 3 is_stmt 1 view .LVU18
  96              		.loc 1 447 24 is_stmt 0 view .LVU19
  97 004a 0496     		str	r6, [sp, #16]
 448:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  98              		.loc 1 448 3 is_stmt 1 view .LVU20
  99              		.loc 1 448 24 is_stmt 0 view .LVU21
 100 004c 0227     		movs	r7, #2
 101 004e 0597     		str	r7, [sp, #20]
 449:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 102              		.loc 1 449 3 is_stmt 1 view .LVU22
 103              		.loc 1 449 25 is_stmt 0 view .LVU23
 104 0050 0694     		str	r4, [sp, #24]
 450:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 105              		.loc 1 450 3 is_stmt 1 view .LVU24
 106 0052 03A9     		add	r1, sp, #12
 107 0054 2846     		mov	r0, r5
 108 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 109              	.LVL1:
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /*Configure GPIO pin : PA1 */
 453:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
 110              		.loc 1 453 3 view .LVU25
 111              		.loc 1 453 23 is_stmt 0 view .LVU26
 112 005a 0397     		str	r7, [sp, #12]
 454:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 113              		.loc 1 454 3 is_stmt 1 view .LVU27
 114              		.loc 1 454 24 is_stmt 0 view .LVU28
 115 005c 0496     		str	r6, [sp, #16]
 455:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 116              		.loc 1 455 3 is_stmt 1 view .LVU29
ARM GAS  /tmp/ccc37uOe.s 			page 11


 117              		.loc 1 455 24 is_stmt 0 view .LVU30
 118 005e 0596     		str	r6, [sp, #20]
 456:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 119              		.loc 1 456 3 is_stmt 1 view .LVU31
 120              		.loc 1 456 25 is_stmt 0 view .LVU32
 121 0060 0694     		str	r4, [sp, #24]
 457:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 122              		.loc 1 457 3 is_stmt 1 view .LVU33
 123 0062 03A9     		add	r1, sp, #12
 124 0064 2846     		mov	r0, r5
 125 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL2:
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /*Configure GPIO pin : PA2 */
 460:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 127              		.loc 1 460 3 view .LVU34
 128              		.loc 1 460 23 is_stmt 0 view .LVU35
 129 006a 0423     		movs	r3, #4
 130 006c 0393     		str	r3, [sp, #12]
 461:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 131              		.loc 1 461 3 is_stmt 1 view .LVU36
 132              		.loc 1 461 24 is_stmt 0 view .LVU37
 133 006e 0494     		str	r4, [sp, #16]
 462:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 134              		.loc 1 462 3 is_stmt 1 view .LVU38
 135              		.loc 1 462 24 is_stmt 0 view .LVU39
 136 0070 0594     		str	r4, [sp, #20]
 463:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 137              		.loc 1 463 3 is_stmt 1 view .LVU40
 138 0072 03A9     		add	r1, sp, #12
 139 0074 2846     		mov	r0, r5
 140 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 141              	.LVL3:
 464:Core/Src/main.c **** 
 465:Core/Src/main.c **** }
 142              		.loc 1 465 1 is_stmt 0 view .LVU41
 143 007a 09B0     		add	sp, sp, #36
 144              	.LCFI2:
 145              		.cfi_def_cfa_offset 20
 146              		@ sp needed
 147 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 148              	.L4:
 149 007e 00BF     		.align	2
 150              	.L3:
 151 0080 00380240 		.word	1073887232
 152 0084 00000240 		.word	1073872896
 153              		.cfi_endproc
 154              	.LFE223:
 156              		.section	.text.MX_DMA_Init,"ax",%progbits
 157              		.align	1
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	MX_DMA_Init:
 164              	.LFB222:
 417:Core/Src/main.c **** 
ARM GAS  /tmp/ccc37uOe.s 			page 12


 165              		.loc 1 417 1 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 8
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 00B5     		push	{lr}
 170              	.LCFI3:
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 14, -4
 173 0002 83B0     		sub	sp, sp, #12
 174              	.LCFI4:
 175              		.cfi_def_cfa_offset 16
 420:Core/Src/main.c **** 
 176              		.loc 1 420 3 view .LVU43
 177              	.LBB6:
 420:Core/Src/main.c **** 
 178              		.loc 1 420 3 view .LVU44
 179 0004 0021     		movs	r1, #0
 180 0006 0191     		str	r1, [sp, #4]
 420:Core/Src/main.c **** 
 181              		.loc 1 420 3 view .LVU45
 182 0008 094B     		ldr	r3, .L7
 183 000a 1A6B     		ldr	r2, [r3, #48]
 184 000c 42F48002 		orr	r2, r2, #4194304
 185 0010 1A63     		str	r2, [r3, #48]
 420:Core/Src/main.c **** 
 186              		.loc 1 420 3 view .LVU46
 187 0012 1B6B     		ldr	r3, [r3, #48]
 188 0014 03F48003 		and	r3, r3, #4194304
 189 0018 0193     		str	r3, [sp, #4]
 420:Core/Src/main.c **** 
 190              		.loc 1 420 3 view .LVU47
 191 001a 019B     		ldr	r3, [sp, #4]
 192              	.LBE6:
 420:Core/Src/main.c **** 
 193              		.loc 1 420 3 view .LVU48
 424:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 194              		.loc 1 424 3 view .LVU49
 195 001c 0A46     		mov	r2, r1
 196 001e 3820     		movs	r0, #56
 197 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 198              	.LVL4:
 425:Core/Src/main.c **** 
 199              		.loc 1 425 3 view .LVU50
 200 0024 3820     		movs	r0, #56
 201 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 202              	.LVL5:
 427:Core/Src/main.c **** 
 203              		.loc 1 427 1 is_stmt 0 view .LVU51
 204 002a 03B0     		add	sp, sp, #12
 205              	.LCFI5:
 206              		.cfi_def_cfa_offset 4
 207              		@ sp needed
 208 002c 5DF804FB 		ldr	pc, [sp], #4
 209              	.L8:
 210              		.align	2
 211              	.L7:
 212 0030 00380240 		.word	1073887232
ARM GAS  /tmp/ccc37uOe.s 			page 13


 213              		.cfi_endproc
 214              	.LFE222:
 216              		.global	__aeabi_ui2d
 217              		.global	__aeabi_dmul
 218              		.global	__aeabi_dcmpgt
 219              		.global	__aeabi_dcmple
 220              		.section	.text.prechargeControl,"ax",%progbits
 221              		.align	1
 222              		.global	prechargeControl
 223              		.syntax unified
 224              		.thumb
 225              		.thumb_func
 226              		.fpu fpv4-sp-d16
 228              	prechargeControl:
 229              	.LFB225:
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c **** // *** functions *** //
 470:Core/Src/main.c **** 
 471:Core/Src/main.c **** 
 472:Core/Src/main.c **** /**
 473:Core/Src/main.c ****  * overwriting the weak function defined in the includes which is the ISR for the CAN interrupt
 474:Core/Src/main.c ****  */
 475:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan1)
 476:Core/Src/main.c **** {
 477:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(hcan1, CAN_RX_FIFO0, &rxHeader, canRX) != HAL_OK)
 478:Core/Src/main.c ****     Error_Handler();
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****   // get rinehart bus voltage
 481:Core/Src/main.c ****   if (rxHeader.StdId == 0x0A7)
 482:Core/Src/main.c ****   {
 483:Core/Src/main.c ****     // rinehart voltage is spread across the first 2 bytes
 484:Core/Src/main.c **** 	  int rine1 = canRX[0];
 485:Core/Src/main.c ****     int rine2 = canRX[1];
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****     // combine the first two bytes and assign that to the rinehart voltage
 488:Core/Src/main.c ****     rinehartVoltage = (rine1 << 8) | rine2;
 489:Core/Src/main.c ****   }
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   // get BMS total voltages
 492:Core/Src/main.c ****   if (rxHeader.StdId == 0x001)
 493:Core/Src/main.c ****   {
 494:Core/Src/main.c ****     uint8_t volt1 = canRX[4] >> 8 & 0xFF;
 495:Core/Src/main.c ****     uint8_t volt2 = canRX[3] & 0xFF;
 496:Core/Src/main.c ****     uint8_t volt3 = canRX[6] >> 24;
 497:Core/Src/main.c ****     uint8_t volt4 = canRX[5] >> 16 & 0xFF;
 498:Core/Src/main.c **** 
 499:Core/Src/main.c ****     uint16_t emus1 = (volt2 << 8) | volt1;
 500:Core/Src/main.c ****     uint16_t emus2 = (volt4 << 8) | volt3;
 501:Core/Src/main.c ****     emusVoltage = volt3 << 24 | (((volt4 << 16) | ((volt1 << 8)) | (volt2)));
 502:Core/Src/main.c ****     emusVoltage = emusVoltage / 10; // scale down to rinehart *10 scaler
 503:Core/Src/main.c ****   }
 504:Core/Src/main.c **** }
 505:Core/Src/main.c **** 
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** /**
ARM GAS  /tmp/ccc37uOe.s 			page 14


 508:Core/Src/main.c ****  * @brief 
 509:Core/Src/main.c ****  * 
 510:Core/Src/main.c ****  */
 511:Core/Src/main.c **** void prechargeControl()
 512:Core/Src/main.c **** {
 230              		.loc 1 512 1 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 38B5     		push	{r3, r4, r5, lr}
 235              	.LCFI6:
 236              		.cfi_def_cfa_offset 16
 237              		.cfi_offset 3, -16
 238              		.cfi_offset 4, -12
 239              		.cfi_offset 5, -8
 240              		.cfi_offset 14, -4
 513:Core/Src/main.c **** 	switch (prechargeState)
 241              		.loc 1 513 2 view .LVU53
 242 0002 4F4B     		ldr	r3, .L29+8
 243 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 244 0006 032B     		cmp	r3, #3
 245 0008 00F29080 		bhi	.L10
 246 000c DFE803F0 		tbb	[pc, r3]
 247              	.L12:
 248 0010 02       		.byte	(.L15-.L12)/2
 249 0011 19       		.byte	(.L14-.L12)/2
 250 0012 4B       		.byte	(.L13-.L12)/2
 251 0013 7A       		.byte	(.L11-.L12)/2
 252              		.p2align 1
 253              	.L15:
 514:Core/Src/main.c **** 	{
 515:Core/Src/main.c **** 		case (PRECHARGE_OFF):
 516:Core/Src/main.c **** 			// set ready to drive to false
 517:Core/Src/main.c **** 			readyToDrive = 0;
 254              		.loc 1 517 4 view .LVU54
 255              		.loc 1 517 17 is_stmt 0 view .LVU55
 256 0014 4B4A     		ldr	r2, .L29+12
 257 0016 0021     		movs	r1, #0
 258 0018 1160     		str	r1, [r2]
 518:Core/Src/main.c **** 
 519:Core/Src/main.c ****       // this state sends a message to rinehart
 520:Core/Src/main.c ****       if (lastPrechargeState != prechargeState)
 259              		.loc 1 520 7 is_stmt 1 view .LVU56
 260              		.loc 1 520 30 is_stmt 0 view .LVU57
 261 001a 4B4A     		ldr	r2, .L29+16
 262 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 263              		.loc 1 520 10 view .LVU58
 264 001e 9342     		cmp	r3, r2
 265 0020 03D1     		bne	.L26
 266              	.L16:
 521:Core/Src/main.c ****       {
 522:Core/Src/main.c ****         // message is sent to rinehart to turn everything off
 523:Core/Src/main.c ****         TxData[0] = 0; // TODO: update this message
 524:Core/Src/main.c ****         // send message
 525:Core/Src/main.c ****         HAL_CAN_AddTxMessage(&hcan1, &txHeader2, TxData, &TxMailbox);
 526:Core/Src/main.c ****         
 527:Core/Src/main.c ****         // update last precharge state
ARM GAS  /tmp/ccc37uOe.s 			page 15


 528:Core/Src/main.c ****         lastPrechargeState = prechargeState;
 529:Core/Src/main.c ****       }
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****       // move to precharge on
 532:Core/Src/main.c ****       prechargeState = PRECHARGE_ON;
 267              		.loc 1 532 7 is_stmt 1 view .LVU59
 268              		.loc 1 532 22 is_stmt 0 view .LVU60
 269 0022 474B     		ldr	r3, .L29+8
 270 0024 0122     		movs	r2, #1
 271 0026 1A70     		strb	r2, [r3]
 533:Core/Src/main.c **** 
 534:Core/Src/main.c **** 		break;
 272              		.loc 1 534 3 is_stmt 1 view .LVU61
 273              	.L9:
 535:Core/Src/main.c **** 
 536:Core/Src/main.c **** 		case (PRECHARGE_ON):
 537:Core/Src/main.c **** 
 538:Core/Src/main.c ****       // not ready to drive yet
 539:Core/Src/main.c ****       readyToDrive = 0;
 540:Core/Src/main.c **** 
 541:Core/Src/main.c ****       // turn on precharge relay
 542:Core/Src/main.c ****       // this state sends a message to rinehart to turn 
 543:Core/Src/main.c ****       if (lastPrechargeState != prechargeState)
 544:Core/Src/main.c ****       {
 545:Core/Src/main.c ****         // message is sent to rinehart to turn on precharge relay
 546:Core/Src/main.c ****         TxData[0] = 10; // TODO: update this message
 547:Core/Src/main.c **** 
 548:Core/Src/main.c ****         // send message
 549:Core/Src/main.c ****         HAL_CAN_AddTxMessage(&hcan1, &txHeader2, TxData, &TxMailbox);
 550:Core/Src/main.c ****         
 551:Core/Src/main.c ****         // update last precharge state
 552:Core/Src/main.c ****         lastPrechargeState = prechargeState;
 553:Core/Src/main.c ****       }
 554:Core/Src/main.c ****       
 555:Core/Src/main.c **** 			// ensure voltages are above correct values
 556:Core/Src/main.c **** 			if (rinehartVoltage > (emusVoltage * PRECHARGE_COEFFICIENT))
 557:Core/Src/main.c ****       {
 558:Core/Src/main.c ****         prechargeState = PRECHARGE_DONE;
 559:Core/Src/main.c ****       }
 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****       // if we do this for too long, move to error state
 562:Core/Src/main.c ****       if (voltageCheckCount >= NUM_VOLTAGE_CHECKS)
 563:Core/Src/main.c ****       {
 564:Core/Src/main.c ****         prechargeState = PRECHARGE_ERROR;
 565:Core/Src/main.c ****       }
 566:Core/Src/main.c ****       
 567:Core/Src/main.c ****       else
 568:Core/Src/main.c ****       {
 569:Core/Src/main.c ****         voltageCheckCount++; // add to the counter. 
 570:Core/Src/main.c ****       }
 571:Core/Src/main.c **** 		break;
 572:Core/Src/main.c **** 
 573:Core/Src/main.c **** 		case (PRECHARGE_DONE):
 574:Core/Src/main.c **** 			// now that precharge is complete we can drive the car
 575:Core/Src/main.c **** 			readyToDrive = 1;
 576:Core/Src/main.c **** 
 577:Core/Src/main.c ****       // this state sends a message to rinehart to turn 
ARM GAS  /tmp/ccc37uOe.s 			page 16


 578:Core/Src/main.c ****       if (lastPrechargeState != prechargeState)
 579:Core/Src/main.c ****       {
 580:Core/Src/main.c ****         // message is sent to rinehart to turn everything off
 581:Core/Src/main.c ****         TxData[0] = 10; // TODO: update this message
 582:Core/Src/main.c **** 
 583:Core/Src/main.c ****         // send message
 584:Core/Src/main.c ****         HAL_CAN_AddTxMessage(&hcan1, &txHeader2, TxData, &TxMailbox);
 585:Core/Src/main.c ****         
 586:Core/Src/main.c ****         // update last precharge state
 587:Core/Src/main.c ****         lastPrechargeState = prechargeState;
 588:Core/Src/main.c ****       }
 589:Core/Src/main.c **** 
 590:Core/Src/main.c ****       // if rinehart voltage drops below battery, something's wrong, 
 591:Core/Src/main.c ****       // turn everything off
 592:Core/Src/main.c **** 			if (rinehartVoltage <= (emusVoltage * PRECHARGE_COEFFICIENT))
 593:Core/Src/main.c ****       {
 594:Core/Src/main.c ****         prechargeState = PRECHARGE_OFF;
 595:Core/Src/main.c ****       }
 596:Core/Src/main.c **** 
 597:Core/Src/main.c **** 		break;
 598:Core/Src/main.c **** 
 599:Core/Src/main.c **** 		case (PRECHARGE_ERROR):
 600:Core/Src/main.c **** 			// the car is most definitly not ready to drive
 601:Core/Src/main.c ****       // set ready to drive off 
 602:Core/Src/main.c **** 			readyToDrive = 0;
 603:Core/Src/main.c **** 
 604:Core/Src/main.c ****       if (lastPrechargeState != prechargeState)
 605:Core/Src/main.c ****       {
 606:Core/Src/main.c ****         // message is sent to rinehart to turn everything off
 607:Core/Src/main.c ****         TxData[0] = 10; // TODO: update this message
 608:Core/Src/main.c **** 
 609:Core/Src/main.c ****         // send message
 610:Core/Src/main.c ****         HAL_CAN_AddTxMessage(&hcan1, &txHeader2, TxData, &TxMailbox);
 611:Core/Src/main.c ****         
 612:Core/Src/main.c ****         // update last precharge state
 613:Core/Src/main.c ****         lastPrechargeState = prechargeState;
 614:Core/Src/main.c ****       }
 615:Core/Src/main.c **** 		break;
 616:Core/Src/main.c **** 
 617:Core/Src/main.c **** 		default:
 618:Core/Src/main.c ****       // fall back state, this indicates we did some undefined action that brought us here
 619:Core/Src/main.c ****       // we will move to PRECHARGE_ERROR to ensure readyToDrive stays false :)
 620:Core/Src/main.c **** 			prechargeState = PRECHARGE_ERROR;
 621:Core/Src/main.c **** 		break;
 622:Core/Src/main.c **** 	}
 623:Core/Src/main.c **** }
 274              		.loc 1 623 1 is_stmt 0 view .LVU62
 275 0028 38BD     		pop	{r3, r4, r5, pc}
 276              	.L26:
 523:Core/Src/main.c ****         // send message
 277              		.loc 1 523 9 is_stmt 1 view .LVU63
 523:Core/Src/main.c ****         // send message
 278              		.loc 1 523 19 is_stmt 0 view .LVU64
 279 002a 484A     		ldr	r2, .L29+20
 280 002c 1170     		strb	r1, [r2]
 525:Core/Src/main.c ****         
 281              		.loc 1 525 9 is_stmt 1 view .LVU65
ARM GAS  /tmp/ccc37uOe.s 			page 17


 282 002e 484B     		ldr	r3, .L29+24
 283 0030 4849     		ldr	r1, .L29+28
 284 0032 4948     		ldr	r0, .L29+32
 285 0034 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 286              	.LVL6:
 528:Core/Src/main.c ****       }
 287              		.loc 1 528 9 view .LVU66
 528:Core/Src/main.c ****       }
 288              		.loc 1 528 28 is_stmt 0 view .LVU67
 289 0038 414B     		ldr	r3, .L29+8
 290 003a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 291 003c 424B     		ldr	r3, .L29+16
 292 003e 1A70     		strb	r2, [r3]
 293 0040 EFE7     		b	.L16
 294              	.L14:
 539:Core/Src/main.c **** 
 295              		.loc 1 539 7 is_stmt 1 view .LVU68
 539:Core/Src/main.c **** 
 296              		.loc 1 539 20 is_stmt 0 view .LVU69
 297 0042 404A     		ldr	r2, .L29+12
 298 0044 0021     		movs	r1, #0
 299 0046 1160     		str	r1, [r2]
 543:Core/Src/main.c ****       {
 300              		.loc 1 543 7 is_stmt 1 view .LVU70
 543:Core/Src/main.c ****       {
 301              		.loc 1 543 30 is_stmt 0 view .LVU71
 302 0048 3F4A     		ldr	r2, .L29+16
 303 004a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 543:Core/Src/main.c ****       {
 304              		.loc 1 543 10 view .LVU72
 305 004c 9342     		cmp	r3, r2
 306 004e 1DD1     		bne	.L27
 307              	.L18:
 556:Core/Src/main.c ****       {
 308              		.loc 1 556 4 is_stmt 1 view .LVU73
 556:Core/Src/main.c ****       {
 309              		.loc 1 556 24 is_stmt 0 view .LVU74
 310 0050 424B     		ldr	r3, .L29+36
 311 0052 1868     		ldr	r0, [r3]
 312 0054 FFF7FEFF 		bl	__aeabi_ui2d
 313              	.LVL7:
 314 0058 0446     		mov	r4, r0
 315 005a 0D46     		mov	r5, r1
 556:Core/Src/main.c ****       {
 316              		.loc 1 556 39 view .LVU75
 317 005c 404B     		ldr	r3, .L29+40
 318 005e 1868     		ldr	r0, [r3]
 319 0060 FFF7FEFF 		bl	__aeabi_ui2d
 320              	.LVL8:
 321 0064 34A3     		adr	r3, .L29
 322 0066 D3E90023 		ldrd	r2, [r3]
 323 006a FFF7FEFF 		bl	__aeabi_dmul
 324              	.LVL9:
 325 006e 0246     		mov	r2, r0
 326 0070 0B46     		mov	r3, r1
 556:Core/Src/main.c ****       {
 327              		.loc 1 556 7 view .LVU76
ARM GAS  /tmp/ccc37uOe.s 			page 18


 328 0072 2046     		mov	r0, r4
 329 0074 2946     		mov	r1, r5
 330 0076 FFF7FEFF 		bl	__aeabi_dcmpgt
 331              	.LVL10:
 332 007a 10B1     		cbz	r0, .L19
 558:Core/Src/main.c ****       }
 333              		.loc 1 558 9 is_stmt 1 view .LVU77
 558:Core/Src/main.c ****       }
 334              		.loc 1 558 24 is_stmt 0 view .LVU78
 335 007c 304B     		ldr	r3, .L29+8
 336 007e 0222     		movs	r2, #2
 337 0080 1A70     		strb	r2, [r3]
 338              	.L19:
 562:Core/Src/main.c ****       {
 339              		.loc 1 562 7 is_stmt 1 view .LVU79
 569:Core/Src/main.c ****       }
 340              		.loc 1 569 9 view .LVU80
 569:Core/Src/main.c ****       }
 341              		.loc 1 569 26 is_stmt 0 view .LVU81
 342 0082 384A     		ldr	r2, .L29+44
 343 0084 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 344 0086 0133     		adds	r3, r3, #1
 345 0088 1370     		strb	r3, [r2]
 571:Core/Src/main.c **** 
 346              		.loc 1 571 3 is_stmt 1 view .LVU82
 347 008a CDE7     		b	.L9
 348              	.L27:
 546:Core/Src/main.c **** 
 349              		.loc 1 546 9 view .LVU83
 546:Core/Src/main.c **** 
 350              		.loc 1 546 19 is_stmt 0 view .LVU84
 351 008c 2F4A     		ldr	r2, .L29+20
 352 008e 0A23     		movs	r3, #10
 353 0090 1370     		strb	r3, [r2]
 549:Core/Src/main.c ****         
 354              		.loc 1 549 9 is_stmt 1 view .LVU85
 355 0092 2F4B     		ldr	r3, .L29+24
 356 0094 2F49     		ldr	r1, .L29+28
 357 0096 3048     		ldr	r0, .L29+32
 358 0098 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 359              	.LVL11:
 552:Core/Src/main.c ****       }
 360              		.loc 1 552 9 view .LVU86
 552:Core/Src/main.c ****       }
 361              		.loc 1 552 28 is_stmt 0 view .LVU87
 362 009c 284B     		ldr	r3, .L29+8
 363 009e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 364 00a0 294B     		ldr	r3, .L29+16
 365 00a2 1A70     		strb	r2, [r3]
 366 00a4 D4E7     		b	.L18
 367              	.L13:
 575:Core/Src/main.c **** 
 368              		.loc 1 575 4 is_stmt 1 view .LVU88
 575:Core/Src/main.c **** 
 369              		.loc 1 575 17 is_stmt 0 view .LVU89
 370 00a6 274A     		ldr	r2, .L29+12
 371 00a8 0121     		movs	r1, #1
ARM GAS  /tmp/ccc37uOe.s 			page 19


 372 00aa 1160     		str	r1, [r2]
 578:Core/Src/main.c ****       {
 373              		.loc 1 578 7 is_stmt 1 view .LVU90
 578:Core/Src/main.c ****       {
 374              		.loc 1 578 30 is_stmt 0 view .LVU91
 375 00ac 264A     		ldr	r2, .L29+16
 376 00ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 578:Core/Src/main.c ****       {
 377              		.loc 1 578 10 view .LVU92
 378 00b0 9342     		cmp	r3, r2
 379 00b2 1AD1     		bne	.L28
 380              	.L21:
 592:Core/Src/main.c ****       {
 381              		.loc 1 592 4 is_stmt 1 view .LVU93
 592:Core/Src/main.c ****       {
 382              		.loc 1 592 24 is_stmt 0 view .LVU94
 383 00b4 294B     		ldr	r3, .L29+36
 384 00b6 1868     		ldr	r0, [r3]
 385 00b8 FFF7FEFF 		bl	__aeabi_ui2d
 386              	.LVL12:
 387 00bc 0446     		mov	r4, r0
 388 00be 0D46     		mov	r5, r1
 592:Core/Src/main.c ****       {
 389              		.loc 1 592 40 view .LVU95
 390 00c0 274B     		ldr	r3, .L29+40
 391 00c2 1868     		ldr	r0, [r3]
 392 00c4 FFF7FEFF 		bl	__aeabi_ui2d
 393              	.LVL13:
 394 00c8 1BA3     		adr	r3, .L29
 395 00ca D3E90023 		ldrd	r2, [r3]
 396 00ce FFF7FEFF 		bl	__aeabi_dmul
 397              	.LVL14:
 398 00d2 0246     		mov	r2, r0
 399 00d4 0B46     		mov	r3, r1
 592:Core/Src/main.c ****       {
 400              		.loc 1 592 7 view .LVU96
 401 00d6 2046     		mov	r0, r4
 402 00d8 2946     		mov	r1, r5
 403 00da FFF7FEFF 		bl	__aeabi_dcmple
 404              	.LVL15:
 405 00de 0028     		cmp	r0, #0
 406 00e0 A2D0     		beq	.L9
 594:Core/Src/main.c ****       }
 407              		.loc 1 594 9 is_stmt 1 view .LVU97
 594:Core/Src/main.c ****       }
 408              		.loc 1 594 24 is_stmt 0 view .LVU98
 409 00e2 174B     		ldr	r3, .L29+8
 410 00e4 0022     		movs	r2, #0
 411 00e6 1A70     		strb	r2, [r3]
 412 00e8 9EE7     		b	.L9
 413              	.L28:
 581:Core/Src/main.c **** 
 414              		.loc 1 581 9 is_stmt 1 view .LVU99
 581:Core/Src/main.c **** 
 415              		.loc 1 581 19 is_stmt 0 view .LVU100
 416 00ea 184A     		ldr	r2, .L29+20
 417 00ec 0A23     		movs	r3, #10
ARM GAS  /tmp/ccc37uOe.s 			page 20


 418 00ee 1370     		strb	r3, [r2]
 584:Core/Src/main.c ****         
 419              		.loc 1 584 9 is_stmt 1 view .LVU101
 420 00f0 174B     		ldr	r3, .L29+24
 421 00f2 1849     		ldr	r1, .L29+28
 422 00f4 1848     		ldr	r0, .L29+32
 423 00f6 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 424              	.LVL16:
 587:Core/Src/main.c ****       }
 425              		.loc 1 587 9 view .LVU102
 587:Core/Src/main.c ****       }
 426              		.loc 1 587 28 is_stmt 0 view .LVU103
 427 00fa 114B     		ldr	r3, .L29+8
 428 00fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 429 00fe 124B     		ldr	r3, .L29+16
 430 0100 1A70     		strb	r2, [r3]
 431 0102 D7E7     		b	.L21
 432              	.L11:
 602:Core/Src/main.c **** 
 433              		.loc 1 602 4 is_stmt 1 view .LVU104
 602:Core/Src/main.c **** 
 434              		.loc 1 602 17 is_stmt 0 view .LVU105
 435 0104 0F4A     		ldr	r2, .L29+12
 436 0106 0021     		movs	r1, #0
 437 0108 1160     		str	r1, [r2]
 604:Core/Src/main.c ****       {
 438              		.loc 1 604 7 is_stmt 1 view .LVU106
 604:Core/Src/main.c ****       {
 439              		.loc 1 604 30 is_stmt 0 view .LVU107
 440 010a 0F4A     		ldr	r2, .L29+16
 441 010c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 604:Core/Src/main.c ****       {
 442              		.loc 1 604 10 view .LVU108
 443 010e 9342     		cmp	r3, r2
 444 0110 8AD0     		beq	.L9
 607:Core/Src/main.c **** 
 445              		.loc 1 607 9 is_stmt 1 view .LVU109
 607:Core/Src/main.c **** 
 446              		.loc 1 607 19 is_stmt 0 view .LVU110
 447 0112 0E4A     		ldr	r2, .L29+20
 448 0114 0A23     		movs	r3, #10
 449 0116 1370     		strb	r3, [r2]
 610:Core/Src/main.c ****         
 450              		.loc 1 610 9 is_stmt 1 view .LVU111
 451 0118 0D4B     		ldr	r3, .L29+24
 452 011a 0E49     		ldr	r1, .L29+28
 453 011c 0E48     		ldr	r0, .L29+32
 454 011e FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 455              	.LVL17:
 613:Core/Src/main.c ****       }
 456              		.loc 1 613 9 view .LVU112
 613:Core/Src/main.c ****       }
 457              		.loc 1 613 28 is_stmt 0 view .LVU113
 458 0122 074B     		ldr	r3, .L29+8
 459 0124 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 460 0126 084B     		ldr	r3, .L29+16
 461 0128 1A70     		strb	r2, [r3]
ARM GAS  /tmp/ccc37uOe.s 			page 21


 462 012a 7DE7     		b	.L9
 463              	.L10:
 620:Core/Src/main.c **** 		break;
 464              		.loc 1 620 4 is_stmt 1 view .LVU114
 620:Core/Src/main.c **** 		break;
 465              		.loc 1 620 19 is_stmt 0 view .LVU115
 466 012c 044B     		ldr	r3, .L29+8
 467 012e 0322     		movs	r2, #3
 468 0130 1A70     		strb	r2, [r3]
 621:Core/Src/main.c **** 	}
 469              		.loc 1 621 3 is_stmt 1 view .LVU116
 470              		.loc 1 623 1 is_stmt 0 view .LVU117
 471 0132 79E7     		b	.L9
 472              	.L30:
 473 0134 AFF30080 		.align	3
 474              	.L29:
 475 0138 CDCCCCCC 		.word	3435973837
 476 013c CCCCEC3F 		.word	1072483532
 477 0140 00000000 		.word	.LANCHOR0
 478 0144 00000000 		.word	.LANCHOR1
 479 0148 00000000 		.word	.LANCHOR2
 480 014c 00000000 		.word	TxData
 481 0150 00000000 		.word	TxMailbox
 482 0154 00000000 		.word	txHeader2
 483 0158 00000000 		.word	hcan1
 484 015c 00000000 		.word	.LANCHOR3
 485 0160 00000000 		.word	.LANCHOR4
 486 0164 00000000 		.word	.LANCHOR5
 487              		.cfi_endproc
 488              	.LFE225:
 490              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 491              		.align	1
 492              		.global	HAL_TIM_PeriodElapsedCallback
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 496              		.fpu fpv4-sp-d16
 498              	HAL_TIM_PeriodElapsedCallback:
 499              	.LVL18:
 500              	.LFB226:
 624:Core/Src/main.c **** 
 625:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 626:Core/Src/main.c **** {
 501              		.loc 1 626 1 is_stmt 1 view -0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              		.loc 1 626 1 is_stmt 0 view .LVU119
 506 0000 10B5     		push	{r4, lr}
 507              	.LCFI7:
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 4, -8
 510              		.cfi_offset 14, -4
 511 0002 0446     		mov	r4, r0
 627:Core/Src/main.c ****   // on __Hz interval
 628:Core/Src/main.c ****   if (htim == &htim14)
 512              		.loc 1 628 3 is_stmt 1 view .LVU120
ARM GAS  /tmp/ccc37uOe.s 			page 22


 513              		.loc 1 628 6 is_stmt 0 view .LVU121
 514 0004 114B     		ldr	r3, .L37
 515 0006 9842     		cmp	r0, r3
 516 0008 03D0     		beq	.L35
 517              	.LVL19:
 518              	.L32:
 629:Core/Src/main.c ****   {
 630:Core/Src/main.c ****     // build message for _____
 631:Core/Src/main.c ****     TxData[0] = readyToDrive; // controled by precharge
 632:Core/Src/main.c ****     TxData[1] = DCDCFault; // 0 for now TODO: implement fault detection
 633:Core/Src/main.c ****     TxData[2] = vicoreTemp; // DMA update
 634:Core/Src/main.c ****     TxData[3] = rinehartVoltage >> 8; // update on CAN message
 635:Core/Src/main.c ****     TxData[4] = rinehartVoltage & 0xFF; // update on CAN message
 636:Core/Src/main.c ****     TxData[5] = emusVoltage >> 8; // update on CAN message
 637:Core/Src/main.c ****     TxData[6] = emusVoltage ; // update on CAN message
 638:Core/Src/main.c **** 
 639:Core/Src/main.c ****     // send message
 640:Core/Src/main.c ****     HAL_CAN_AddTxMessage(&hcan1, &txHeader1, TxData, &TxMailbox);
 641:Core/Src/main.c ****   }
 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****   // on __Hz interval 
 644:Core/Src/main.c ****   if(htim == &htim13)
 519              		.loc 1 644 3 is_stmt 1 view .LVU122
 520              		.loc 1 644 5 is_stmt 0 view .LVU123
 521 000a 114B     		ldr	r3, .L37+4
 522 000c 9C42     		cmp	r4, r3
 523 000e 1AD0     		beq	.L36
 524              	.L31:
 645:Core/Src/main.c ****   {
 646:Core/Src/main.c ****     // check precharge status
 647:Core/Src/main.c ****     prechargeControl();
 648:Core/Src/main.c ****   }
 649:Core/Src/main.c **** }
 525              		.loc 1 649 1 view .LVU124
 526 0010 10BD     		pop	{r4, pc}
 527              	.LVL20:
 528              	.L35:
 631:Core/Src/main.c ****     TxData[1] = DCDCFault; // 0 for now TODO: implement fault detection
 529              		.loc 1 631 5 is_stmt 1 view .LVU125
 631:Core/Src/main.c ****     TxData[1] = DCDCFault; // 0 for now TODO: implement fault detection
 530              		.loc 1 631 15 is_stmt 0 view .LVU126
 531 0012 104A     		ldr	r2, .L37+8
 532 0014 104B     		ldr	r3, .L37+12
 533 0016 1B68     		ldr	r3, [r3]
 534 0018 1370     		strb	r3, [r2]
 632:Core/Src/main.c ****     TxData[2] = vicoreTemp; // DMA update
 535              		.loc 1 632 5 is_stmt 1 view .LVU127
 632:Core/Src/main.c ****     TxData[2] = vicoreTemp; // DMA update
 536              		.loc 1 632 15 is_stmt 0 view .LVU128
 537 001a 104B     		ldr	r3, .L37+16
 538 001c 1B68     		ldr	r3, [r3]
 539 001e 5370     		strb	r3, [r2, #1]
 633:Core/Src/main.c ****     TxData[3] = rinehartVoltage >> 8; // update on CAN message
 540              		.loc 1 633 5 is_stmt 1 view .LVU129
 633:Core/Src/main.c ****     TxData[3] = rinehartVoltage >> 8; // update on CAN message
 541              		.loc 1 633 15 is_stmt 0 view .LVU130
 542 0020 0F4B     		ldr	r3, .L37+20
ARM GAS  /tmp/ccc37uOe.s 			page 23


 543 0022 1B68     		ldr	r3, [r3]
 544 0024 9370     		strb	r3, [r2, #2]
 634:Core/Src/main.c ****     TxData[4] = rinehartVoltage & 0xFF; // update on CAN message
 545              		.loc 1 634 5 is_stmt 1 view .LVU131
 634:Core/Src/main.c ****     TxData[4] = rinehartVoltage & 0xFF; // update on CAN message
 546              		.loc 1 634 33 is_stmt 0 view .LVU132
 547 0026 0F4B     		ldr	r3, .L37+24
 548 0028 1B68     		ldr	r3, [r3]
 549 002a 190A     		lsrs	r1, r3, #8
 634:Core/Src/main.c ****     TxData[4] = rinehartVoltage & 0xFF; // update on CAN message
 550              		.loc 1 634 15 view .LVU133
 551 002c D170     		strb	r1, [r2, #3]
 635:Core/Src/main.c ****     TxData[5] = emusVoltage >> 8; // update on CAN message
 552              		.loc 1 635 5 is_stmt 1 view .LVU134
 635:Core/Src/main.c ****     TxData[5] = emusVoltage >> 8; // update on CAN message
 553              		.loc 1 635 15 is_stmt 0 view .LVU135
 554 002e 1371     		strb	r3, [r2, #4]
 636:Core/Src/main.c ****     TxData[6] = emusVoltage ; // update on CAN message
 555              		.loc 1 636 5 is_stmt 1 view .LVU136
 636:Core/Src/main.c ****     TxData[6] = emusVoltage ; // update on CAN message
 556              		.loc 1 636 29 is_stmt 0 view .LVU137
 557 0030 0D4B     		ldr	r3, .L37+28
 558 0032 1B68     		ldr	r3, [r3]
 559 0034 190A     		lsrs	r1, r3, #8
 636:Core/Src/main.c ****     TxData[6] = emusVoltage ; // update on CAN message
 560              		.loc 1 636 15 view .LVU138
 561 0036 5171     		strb	r1, [r2, #5]
 637:Core/Src/main.c **** 
 562              		.loc 1 637 5 is_stmt 1 view .LVU139
 637:Core/Src/main.c **** 
 563              		.loc 1 637 15 is_stmt 0 view .LVU140
 564 0038 9371     		strb	r3, [r2, #6]
 640:Core/Src/main.c ****   }
 565              		.loc 1 640 5 is_stmt 1 view .LVU141
 566 003a 0C4B     		ldr	r3, .L37+32
 567 003c 0C49     		ldr	r1, .L37+36
 568 003e 0D48     		ldr	r0, .L37+40
 569              	.LVL21:
 640:Core/Src/main.c ****   }
 570              		.loc 1 640 5 is_stmt 0 view .LVU142
 571 0040 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 572              	.LVL22:
 573 0044 E1E7     		b	.L32
 574              	.L36:
 647:Core/Src/main.c ****   }
 575              		.loc 1 647 5 is_stmt 1 view .LVU143
 576 0046 FFF7FEFF 		bl	prechargeControl
 577              	.LVL23:
 578              		.loc 1 649 1 is_stmt 0 view .LVU144
 579 004a E1E7     		b	.L31
 580              	.L38:
 581              		.align	2
 582              	.L37:
 583 004c 00000000 		.word	htim14
 584 0050 00000000 		.word	htim13
 585 0054 00000000 		.word	TxData
 586 0058 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccc37uOe.s 			page 24


 587 005c 00000000 		.word	.LANCHOR6
 588 0060 00000000 		.word	.LANCHOR7
 589 0064 00000000 		.word	.LANCHOR3
 590 0068 00000000 		.word	.LANCHOR4
 591 006c 00000000 		.word	TxMailbox
 592 0070 00000000 		.word	txHeader1
 593 0074 00000000 		.word	hcan1
 594              		.cfi_endproc
 595              	.LFE226:
 597              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 598              		.align	1
 599              		.global	HAL_ADC_ConvCpltCallback
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 603              		.fpu fpv4-sp-d16
 605              	HAL_ADC_ConvCpltCallback:
 606              	.LVL24:
 607              	.LFB227:
 650:Core/Src/main.c **** 
 651:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 652:Core/Src/main.c **** {
 608              		.loc 1 652 1 is_stmt 1 view -0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 612              		.loc 1 652 1 is_stmt 0 view .LVU146
 613 0000 08B5     		push	{r3, lr}
 614              	.LCFI8:
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 3, -8
 617              		.cfi_offset 14, -4
 653:Core/Src/main.c ****   // TODO: check analog values for the temperature conversion
 654:Core/Src/main.c ****   // Define threshold for when the fan should turn on
 655:Core/Src/main.c **** 
 656:Core/Src/main.c ****   // update vicor temp
 657:Core/Src/main.c ****   vicoreTemp = adc_buf[0];
 618              		.loc 1 657 3 is_stmt 1 view .LVU147
 619              		.loc 1 657 23 is_stmt 0 view .LVU148
 620 0002 094B     		ldr	r3, .L43
 621 0004 1B68     		ldr	r3, [r3]
 622              		.loc 1 657 14 view .LVU149
 623 0006 094A     		ldr	r2, .L43+4
 624 0008 1360     		str	r3, [r2]
 658:Core/Src/main.c **** 
 659:Core/Src/main.c ****   // set fan based on value
 660:Core/Src/main.c ****   if (vicoreTemp >= 2048)
 625              		.loc 1 660 3 is_stmt 1 view .LVU150
 626              		.loc 1 660 6 is_stmt 0 view .LVU151
 627 000a B3F5006F 		cmp	r3, #2048
 628 000e 05DB     		blt	.L40
 661:Core/Src/main.c ****   {
 662:Core/Src/main.c ****     // set the fan high
 663:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 629              		.loc 1 663 5 is_stmt 1 view .LVU152
 630 0010 0122     		movs	r2, #1
 631 0012 1146     		mov	r1, r2
ARM GAS  /tmp/ccc37uOe.s 			page 25


 632 0014 0648     		ldr	r0, .L43+8
 633              	.LVL25:
 634              		.loc 1 663 5 is_stmt 0 view .LVU153
 635 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 636              	.LVL26:
 637              	.L39:
 664:Core/Src/main.c ****   }
 665:Core/Src/main.c **** 
 666:Core/Src/main.c ****   else
 667:Core/Src/main.c ****   {
 668:Core/Src/main.c ****     // set fan low
 669:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 670:Core/Src/main.c ****   }
 671:Core/Src/main.c **** }
 638              		.loc 1 671 1 view .LVU154
 639 001a 08BD     		pop	{r3, pc}
 640              	.LVL27:
 641              	.L40:
 669:Core/Src/main.c ****   }
 642              		.loc 1 669 5 is_stmt 1 view .LVU155
 643 001c 0022     		movs	r2, #0
 644 001e 0121     		movs	r1, #1
 645 0020 0348     		ldr	r0, .L43+8
 646              	.LVL28:
 669:Core/Src/main.c ****   }
 647              		.loc 1 669 5 is_stmt 0 view .LVU156
 648 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 649              	.LVL29:
 650              		.loc 1 671 1 view .LVU157
 651 0026 F8E7     		b	.L39
 652              	.L44:
 653              		.align	2
 654              	.L43:
 655 0028 00000000 		.word	adc_buf
 656 002c 00000000 		.word	.LANCHOR7
 657 0030 00000240 		.word	1073872896
 658              		.cfi_endproc
 659              	.LFE227:
 661              		.section	.text.Error_Handler,"ax",%progbits
 662              		.align	1
 663              		.global	Error_Handler
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 667              		.fpu fpv4-sp-d16
 669              	Error_Handler:
 670              	.LFB228:
 672:Core/Src/main.c **** 
 673:Core/Src/main.c **** /* USER CODE END 4 */
 674:Core/Src/main.c **** 
 675:Core/Src/main.c **** /**
 676:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 677:Core/Src/main.c ****   * @retval None
 678:Core/Src/main.c ****   */
 679:Core/Src/main.c **** void Error_Handler(void)
 680:Core/Src/main.c **** {
 671              		.loc 1 680 1 is_stmt 1 view -0
ARM GAS  /tmp/ccc37uOe.s 			page 26


 672              		.cfi_startproc
 673              		@ Volatile: function does not return.
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 681:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 682:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 683:Core/Src/main.c ****   __disable_irq();
 677              		.loc 1 683 3 view .LVU159
 678              	.LBB7:
 679              	.LBI7:
 680              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccc37uOe.s 			page 27


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  /tmp/ccc37uOe.s 			page 28


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 681              		.loc 2 140 27 view .LVU160
 682              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 683              		.loc 2 142 3 view .LVU161
 684              		.syntax unified
 685              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 686 0000 72B6     		cpsid i
 687              	@ 0 "" 2
 688              		.thumb
 689              		.syntax unified
 690              	.L46:
 691              	.LBE8:
 692              	.LBE7:
 684:Core/Src/main.c ****   while (1)
 693              		.loc 1 684 3 discriminator 1 view .LVU162
 685:Core/Src/main.c ****   {
 686:Core/Src/main.c ****   }
 694              		.loc 1 686 3 discriminator 1 view .LVU163
ARM GAS  /tmp/ccc37uOe.s 			page 29


 684:Core/Src/main.c ****   while (1)
 695              		.loc 1 684 9 discriminator 1 view .LVU164
 696 0002 FEE7     		b	.L46
 697              		.cfi_endproc
 698              	.LFE228:
 700              		.section	.text.MX_CAN1_Init,"ax",%progbits
 701              		.align	1
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 705              		.fpu fpv4-sp-d16
 707              	MX_CAN1_Init:
 708              	.LFB219:
 296:Core/Src/main.c **** 
 709              		.loc 1 296 1 view -0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713 0000 70B5     		push	{r4, r5, r6, lr}
 714              	.LCFI9:
 715              		.cfi_def_cfa_offset 16
 716              		.cfi_offset 4, -16
 717              		.cfi_offset 5, -12
 718              		.cfi_offset 6, -8
 719              		.cfi_offset 14, -4
 303:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 720              		.loc 1 303 3 view .LVU166
 303:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 721              		.loc 1 303 18 is_stmt 0 view .LVU167
 722 0002 1C48     		ldr	r0, .L51
 723 0004 1C4B     		ldr	r3, .L51+4
 724 0006 0360     		str	r3, [r0]
 304:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 725              		.loc 1 304 3 is_stmt 1 view .LVU168
 304:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 726              		.loc 1 304 24 is_stmt 0 view .LVU169
 727 0008 1223     		movs	r3, #18
 728 000a 4360     		str	r3, [r0, #4]
 305:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 729              		.loc 1 305 3 is_stmt 1 view .LVU170
 305:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 730              		.loc 1 305 19 is_stmt 0 view .LVU171
 731 000c 0023     		movs	r3, #0
 732 000e 8360     		str	r3, [r0, #8]
 306:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 733              		.loc 1 306 3 is_stmt 1 view .LVU172
 306:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 734              		.loc 1 306 28 is_stmt 0 view .LVU173
 735 0010 C360     		str	r3, [r0, #12]
 307:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 736              		.loc 1 307 3 is_stmt 1 view .LVU174
 307:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 737              		.loc 1 307 23 is_stmt 0 view .LVU175
 738 0012 4FF40032 		mov	r2, #131072
 739 0016 0261     		str	r2, [r0, #16]
 308:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 740              		.loc 1 308 3 is_stmt 1 view .LVU176
ARM GAS  /tmp/ccc37uOe.s 			page 30


 308:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 741              		.loc 1 308 23 is_stmt 0 view .LVU177
 742 0018 4361     		str	r3, [r0, #20]
 309:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 743              		.loc 1 309 3 is_stmt 1 view .LVU178
 309:Core/Src/main.c ****   hcan1.Init.AutoBusOff = DISABLE;
 744              		.loc 1 309 32 is_stmt 0 view .LVU179
 745 001a 0376     		strb	r3, [r0, #24]
 310:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = ENABLE;
 746              		.loc 1 310 3 is_stmt 1 view .LVU180
 310:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = ENABLE;
 747              		.loc 1 310 25 is_stmt 0 view .LVU181
 748 001c 4376     		strb	r3, [r0, #25]
 311:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 749              		.loc 1 311 3 is_stmt 1 view .LVU182
 311:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 750              		.loc 1 311 25 is_stmt 0 view .LVU183
 751 001e 0122     		movs	r2, #1
 752 0020 8276     		strb	r2, [r0, #26]
 312:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 753              		.loc 1 312 3 is_stmt 1 view .LVU184
 312:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 754              		.loc 1 312 33 is_stmt 0 view .LVU185
 755 0022 C276     		strb	r2, [r0, #27]
 313:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 756              		.loc 1 313 3 is_stmt 1 view .LVU186
 313:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 757              		.loc 1 313 32 is_stmt 0 view .LVU187
 758 0024 0377     		strb	r3, [r0, #28]
 314:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 759              		.loc 1 314 3 is_stmt 1 view .LVU188
 314:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 760              		.loc 1 314 35 is_stmt 0 view .LVU189
 761 0026 4377     		strb	r3, [r0, #29]
 315:Core/Src/main.c ****   {
 762              		.loc 1 315 3 is_stmt 1 view .LVU190
 315:Core/Src/main.c ****   {
 763              		.loc 1 315 7 is_stmt 0 view .LVU191
 764 0028 FFF7FEFF 		bl	HAL_CAN_Init
 765              	.LVL30:
 315:Core/Src/main.c ****   {
 766              		.loc 1 315 6 view .LVU192
 767 002c 00BB     		cbnz	r0, .L50
 322:Core/Src/main.c ****   	canFilter0.FilterIdLow = 0x000;
 768              		.loc 1 322 5 is_stmt 1 view .LVU193
 322:Core/Src/main.c ****   	canFilter0.FilterIdLow = 0x000;
 769              		.loc 1 322 29 is_stmt 0 view .LVU194
 770 002e 1349     		ldr	r1, .L51+8
 771 0030 2023     		movs	r3, #32
 772 0032 0B60     		str	r3, [r1]
 323:Core/Src/main.c ****     canFilter0.FilterMaskIdHigh = 0x001 << 5;
 773              		.loc 1 323 4 is_stmt 1 view .LVU195
 323:Core/Src/main.c ****     canFilter0.FilterMaskIdHigh = 0x001 << 5;
 774              		.loc 1 323 27 is_stmt 0 view .LVU196
 775 0034 0024     		movs	r4, #0
 776 0036 4C60     		str	r4, [r1, #4]
 324:Core/Src/main.c ****   	canFilter0.FilterMaskIdLow = 0x000;
ARM GAS  /tmp/ccc37uOe.s 			page 31


 777              		.loc 1 324 5 is_stmt 1 view .LVU197
 324:Core/Src/main.c ****   	canFilter0.FilterMaskIdLow = 0x000;
 778              		.loc 1 324 33 is_stmt 0 view .LVU198
 779 0038 8B60     		str	r3, [r1, #8]
 325:Core/Src/main.c ****     canFilter0.FilterBank = 0;
 780              		.loc 1 325 4 is_stmt 1 view .LVU199
 325:Core/Src/main.c ****     canFilter0.FilterBank = 0;
 781              		.loc 1 325 31 is_stmt 0 view .LVU200
 782 003a CC60     		str	r4, [r1, #12]
 326:Core/Src/main.c ****   	canFilter0.FilterMode = CAN_FILTERMODE_IDMASK;
 783              		.loc 1 326 5 is_stmt 1 view .LVU201
 326:Core/Src/main.c ****   	canFilter0.FilterMode = CAN_FILTERMODE_IDMASK;
 784              		.loc 1 326 27 is_stmt 0 view .LVU202
 785 003c 4C61     		str	r4, [r1, #20]
 327:Core/Src/main.c ****   	canFilter0.FilterFIFOAssignment = CAN_RX_FIFO0;
 786              		.loc 1 327 4 is_stmt 1 view .LVU203
 327:Core/Src/main.c ****   	canFilter0.FilterFIFOAssignment = CAN_RX_FIFO0;
 787              		.loc 1 327 26 is_stmt 0 view .LVU204
 788 003e 8C61     		str	r4, [r1, #24]
 328:Core/Src/main.c ****   	canFilter0.FilterScale = CAN_FILTERSCALE_32BIT;
 789              		.loc 1 328 4 is_stmt 1 view .LVU205
 328:Core/Src/main.c ****   	canFilter0.FilterScale = CAN_FILTERSCALE_32BIT;
 790              		.loc 1 328 36 is_stmt 0 view .LVU206
 791 0040 0C61     		str	r4, [r1, #16]
 329:Core/Src/main.c ****   	canFilter0.FilterActivation = ENABLE;
 792              		.loc 1 329 4 is_stmt 1 view .LVU207
 329:Core/Src/main.c ****   	canFilter0.FilterActivation = ENABLE;
 793              		.loc 1 329 27 is_stmt 0 view .LVU208
 794 0042 0125     		movs	r5, #1
 795 0044 CD61     		str	r5, [r1, #28]
 330:Core/Src/main.c **** 
 796              		.loc 1 330 4 is_stmt 1 view .LVU209
 330:Core/Src/main.c **** 
 797              		.loc 1 330 32 is_stmt 0 view .LVU210
 798 0046 0D62     		str	r5, [r1, #32]
 332:Core/Src/main.c **** 
 799              		.loc 1 332 5 is_stmt 1 view .LVU211
 800 0048 0A4E     		ldr	r6, .L51
 801 004a 3046     		mov	r0, r6
 802 004c FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 803              	.LVL31:
 335:Core/Src/main.c ****   	canFilter1.FilterIdLow = 0x00;
 804              		.loc 1 335 5 view .LVU212
 335:Core/Src/main.c ****   	canFilter1.FilterIdLow = 0x00;
 805              		.loc 1 335 29 is_stmt 0 view .LVU213
 806 0050 0B49     		ldr	r1, .L51+12
 807 0052 4FF4A753 		mov	r3, #5344
 808 0056 0B60     		str	r3, [r1]
 336:Core/Src/main.c ****     canFilter1.FilterMaskIdHigh = 0x0A7 << 5;
 809              		.loc 1 336 4 is_stmt 1 view .LVU214
 336:Core/Src/main.c ****     canFilter1.FilterMaskIdHigh = 0x0A7 << 5;
 810              		.loc 1 336 27 is_stmt 0 view .LVU215
 811 0058 4C60     		str	r4, [r1, #4]
 337:Core/Src/main.c ****   	canFilter1.FilterMaskIdLow = 0x000;
 812              		.loc 1 337 5 is_stmt 1 view .LVU216
 337:Core/Src/main.c ****   	canFilter1.FilterMaskIdLow = 0x000;
 813              		.loc 1 337 33 is_stmt 0 view .LVU217
ARM GAS  /tmp/ccc37uOe.s 			page 32


 814 005a 8B60     		str	r3, [r1, #8]
 338:Core/Src/main.c ****     canFilter1.FilterBank = 1;
 815              		.loc 1 338 4 is_stmt 1 view .LVU218
 338:Core/Src/main.c ****     canFilter1.FilterBank = 1;
 816              		.loc 1 338 31 is_stmt 0 view .LVU219
 817 005c CC60     		str	r4, [r1, #12]
 339:Core/Src/main.c ****   	canFilter1.FilterMode = CAN_FILTERMODE_IDMASK;
 818              		.loc 1 339 5 is_stmt 1 view .LVU220
 339:Core/Src/main.c ****   	canFilter1.FilterMode = CAN_FILTERMODE_IDMASK;
 819              		.loc 1 339 27 is_stmt 0 view .LVU221
 820 005e 4D61     		str	r5, [r1, #20]
 340:Core/Src/main.c ****   	canFilter1.FilterFIFOAssignment = CAN_RX_FIFO0;
 821              		.loc 1 340 4 is_stmt 1 view .LVU222
 340:Core/Src/main.c ****   	canFilter1.FilterFIFOAssignment = CAN_RX_FIFO0;
 822              		.loc 1 340 26 is_stmt 0 view .LVU223
 823 0060 8C61     		str	r4, [r1, #24]
 341:Core/Src/main.c ****   	canFilter1.FilterScale = CAN_FILTERSCALE_32BIT;
 824              		.loc 1 341 4 is_stmt 1 view .LVU224
 341:Core/Src/main.c ****   	canFilter1.FilterScale = CAN_FILTERSCALE_32BIT;
 825              		.loc 1 341 36 is_stmt 0 view .LVU225
 826 0062 0C61     		str	r4, [r1, #16]
 342:Core/Src/main.c ****   	canFilter1.FilterActivation = ENABLE;
 827              		.loc 1 342 4 is_stmt 1 view .LVU226
 342:Core/Src/main.c ****   	canFilter1.FilterActivation = ENABLE;
 828              		.loc 1 342 27 is_stmt 0 view .LVU227
 829 0064 CD61     		str	r5, [r1, #28]
 343:Core/Src/main.c **** 
 830              		.loc 1 343 4 is_stmt 1 view .LVU228
 343:Core/Src/main.c **** 
 831              		.loc 1 343 32 is_stmt 0 view .LVU229
 832 0066 0D62     		str	r5, [r1, #32]
 345:Core/Src/main.c **** 
 833              		.loc 1 345 5 is_stmt 1 view .LVU230
 834 0068 3046     		mov	r0, r6
 835 006a FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 836              	.LVL32:
 349:Core/Src/main.c **** 
 837              		.loc 1 349 1 is_stmt 0 view .LVU231
 838 006e 70BD     		pop	{r4, r5, r6, pc}
 839              	.L50:
 317:Core/Src/main.c ****   }
 840              		.loc 1 317 5 is_stmt 1 view .LVU232
 841 0070 FFF7FEFF 		bl	Error_Handler
 842              	.LVL33:
 843              	.L52:
 844              		.align	2
 845              	.L51:
 846 0074 00000000 		.word	hcan1
 847 0078 00640040 		.word	1073767424
 848 007c 00000000 		.word	canFilter0
 849 0080 00000000 		.word	canFilter1
 850              		.cfi_endproc
 851              	.LFE219:
 853              		.section	.text.MX_ADC1_Init,"ax",%progbits
 854              		.align	1
 855              		.syntax unified
 856              		.thumb
ARM GAS  /tmp/ccc37uOe.s 			page 33


 857              		.thumb_func
 858              		.fpu fpv4-sp-d16
 860              	MX_ADC1_Init:
 861              	.LFB218:
 249:Core/Src/main.c **** 
 862              		.loc 1 249 1 view -0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 16
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866 0000 00B5     		push	{lr}
 867              	.LCFI10:
 868              		.cfi_def_cfa_offset 4
 869              		.cfi_offset 14, -4
 870 0002 85B0     		sub	sp, sp, #20
 871              	.LCFI11:
 872              		.cfi_def_cfa_offset 24
 254:Core/Src/main.c **** 
 873              		.loc 1 254 3 view .LVU234
 254:Core/Src/main.c **** 
 874              		.loc 1 254 26 is_stmt 0 view .LVU235
 875 0004 0023     		movs	r3, #0
 876 0006 0093     		str	r3, [sp]
 877 0008 0193     		str	r3, [sp, #4]
 878 000a 0293     		str	r3, [sp, #8]
 879 000c 0393     		str	r3, [sp, #12]
 260:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 880              		.loc 1 260 3 is_stmt 1 view .LVU236
 260:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 881              		.loc 1 260 18 is_stmt 0 view .LVU237
 882 000e 1448     		ldr	r0, .L59
 883 0010 144A     		ldr	r2, .L59+4
 884 0012 0260     		str	r2, [r0]
 261:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 885              		.loc 1 261 3 is_stmt 1 view .LVU238
 261:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 886              		.loc 1 261 29 is_stmt 0 view .LVU239
 887 0014 4FF48032 		mov	r2, #65536
 888 0018 4260     		str	r2, [r0, #4]
 262:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 889              		.loc 1 262 3 is_stmt 1 view .LVU240
 262:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 890              		.loc 1 262 25 is_stmt 0 view .LVU241
 891 001a 8360     		str	r3, [r0, #8]
 263:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 892              		.loc 1 263 3 is_stmt 1 view .LVU242
 263:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 893              		.loc 1 263 27 is_stmt 0 view .LVU243
 894 001c 0361     		str	r3, [r0, #16]
 264:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 895              		.loc 1 264 3 is_stmt 1 view .LVU244
 264:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 896              		.loc 1 264 33 is_stmt 0 view .LVU245
 897 001e 0122     		movs	r2, #1
 898 0020 0276     		strb	r2, [r0, #24]
 265:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 899              		.loc 1 265 3 is_stmt 1 view .LVU246
 265:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
ARM GAS  /tmp/ccc37uOe.s 			page 34


 900              		.loc 1 265 36 is_stmt 0 view .LVU247
 901 0022 80F82030 		strb	r3, [r0, #32]
 266:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 902              		.loc 1 266 3 is_stmt 1 view .LVU248
 266:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 903              		.loc 1 266 35 is_stmt 0 view .LVU249
 904 0026 C362     		str	r3, [r0, #44]
 267:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 905              		.loc 1 267 3 is_stmt 1 view .LVU250
 267:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 906              		.loc 1 267 31 is_stmt 0 view .LVU251
 907 0028 0F49     		ldr	r1, .L59+8
 908 002a 8162     		str	r1, [r0, #40]
 268:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 909              		.loc 1 268 3 is_stmt 1 view .LVU252
 268:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 910              		.loc 1 268 24 is_stmt 0 view .LVU253
 911 002c C360     		str	r3, [r0, #12]
 269:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 912              		.loc 1 269 3 is_stmt 1 view .LVU254
 269:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 913              		.loc 1 269 30 is_stmt 0 view .LVU255
 914 002e C261     		str	r2, [r0, #28]
 270:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 915              		.loc 1 270 3 is_stmt 1 view .LVU256
 270:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 916              		.loc 1 270 36 is_stmt 0 view .LVU257
 917 0030 80F83020 		strb	r2, [r0, #48]
 271:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 918              		.loc 1 271 3 is_stmt 1 view .LVU258
 271:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 919              		.loc 1 271 27 is_stmt 0 view .LVU259
 920 0034 4261     		str	r2, [r0, #20]
 272:Core/Src/main.c ****   {
 921              		.loc 1 272 3 is_stmt 1 view .LVU260
 272:Core/Src/main.c ****   {
 922              		.loc 1 272 7 is_stmt 0 view .LVU261
 923 0036 FFF7FEFF 		bl	HAL_ADC_Init
 924              	.LVL34:
 272:Core/Src/main.c ****   {
 925              		.loc 1 272 6 view .LVU262
 926 003a 68B9     		cbnz	r0, .L57
 278:Core/Src/main.c ****   sConfig.Rank = 1;
 927              		.loc 1 278 3 is_stmt 1 view .LVU263
 278:Core/Src/main.c ****   sConfig.Rank = 1;
 928              		.loc 1 278 19 is_stmt 0 view .LVU264
 929 003c 0723     		movs	r3, #7
 930 003e 0093     		str	r3, [sp]
 279:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 931              		.loc 1 279 3 is_stmt 1 view .LVU265
 279:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 932              		.loc 1 279 16 is_stmt 0 view .LVU266
 933 0040 0123     		movs	r3, #1
 934 0042 0193     		str	r3, [sp, #4]
 280:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 935              		.loc 1 280 3 is_stmt 1 view .LVU267
 280:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
ARM GAS  /tmp/ccc37uOe.s 			page 35


 936              		.loc 1 280 24 is_stmt 0 view .LVU268
 937 0044 0023     		movs	r3, #0
 938 0046 0293     		str	r3, [sp, #8]
 281:Core/Src/main.c ****   {
 939              		.loc 1 281 3 is_stmt 1 view .LVU269
 281:Core/Src/main.c ****   {
 940              		.loc 1 281 7 is_stmt 0 view .LVU270
 941 0048 6946     		mov	r1, sp
 942 004a 0548     		ldr	r0, .L59
 943 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 944              	.LVL35:
 281:Core/Src/main.c ****   {
 945              		.loc 1 281 6 view .LVU271
 946 0050 20B9     		cbnz	r0, .L58
 288:Core/Src/main.c **** 
 947              		.loc 1 288 1 view .LVU272
 948 0052 05B0     		add	sp, sp, #20
 949              	.LCFI12:
 950              		.cfi_remember_state
 951              		.cfi_def_cfa_offset 4
 952              		@ sp needed
 953 0054 5DF804FB 		ldr	pc, [sp], #4
 954              	.L57:
 955              	.LCFI13:
 956              		.cfi_restore_state
 274:Core/Src/main.c ****   }
 957              		.loc 1 274 5 is_stmt 1 view .LVU273
 958 0058 FFF7FEFF 		bl	Error_Handler
 959              	.LVL36:
 960              	.L58:
 283:Core/Src/main.c ****   }
 961              		.loc 1 283 5 view .LVU274
 962 005c FFF7FEFF 		bl	Error_Handler
 963              	.LVL37:
 964              	.L60:
 965              		.align	2
 966              	.L59:
 967 0060 00000000 		.word	hadc1
 968 0064 00200140 		.word	1073815552
 969 0068 0100000F 		.word	251658241
 970              		.cfi_endproc
 971              	.LFE218:
 973              		.section	.text.MX_TIM14_Init,"ax",%progbits
 974              		.align	1
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 978              		.fpu fpv4-sp-d16
 980              	MX_TIM14_Init:
 981              	.LFB221:
 388:Core/Src/main.c **** 
 982              		.loc 1 388 1 view -0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 986 0000 08B5     		push	{r3, lr}
 987              	.LCFI14:
ARM GAS  /tmp/ccc37uOe.s 			page 36


 988              		.cfi_def_cfa_offset 8
 989              		.cfi_offset 3, -8
 990              		.cfi_offset 14, -4
 397:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 991              		.loc 1 397 3 view .LVU276
 397:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 992              		.loc 1 397 19 is_stmt 0 view .LVU277
 993 0002 0948     		ldr	r0, .L65
 994 0004 094B     		ldr	r3, .L65+4
 995 0006 0360     		str	r3, [r0]
 398:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 996              		.loc 1 398 3 is_stmt 1 view .LVU278
 398:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 997              		.loc 1 398 25 is_stmt 0 view .LVU279
 998 0008 42F22733 		movw	r3, #8999
 999 000c 4360     		str	r3, [r0, #4]
 399:Core/Src/main.c ****   htim14.Init.Period = 5000-1;
 1000              		.loc 1 399 3 is_stmt 1 view .LVU280
 399:Core/Src/main.c ****   htim14.Init.Period = 5000-1;
 1001              		.loc 1 399 27 is_stmt 0 view .LVU281
 1002 000e 0023     		movs	r3, #0
 1003 0010 8360     		str	r3, [r0, #8]
 400:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1004              		.loc 1 400 3 is_stmt 1 view .LVU282
 400:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1005              		.loc 1 400 22 is_stmt 0 view .LVU283
 1006 0012 41F28732 		movw	r2, #4999
 1007 0016 C260     		str	r2, [r0, #12]
 401:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1008              		.loc 1 401 3 is_stmt 1 view .LVU284
 401:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1009              		.loc 1 401 29 is_stmt 0 view .LVU285
 1010 0018 0361     		str	r3, [r0, #16]
 402:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 1011              		.loc 1 402 3 is_stmt 1 view .LVU286
 402:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 1012              		.loc 1 402 33 is_stmt 0 view .LVU287
 1013 001a 8361     		str	r3, [r0, #24]
 403:Core/Src/main.c ****   {
 1014              		.loc 1 403 3 is_stmt 1 view .LVU288
 403:Core/Src/main.c ****   {
 1015              		.loc 1 403 7 is_stmt 0 view .LVU289
 1016 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1017              	.LVL38:
 403:Core/Src/main.c ****   {
 1018              		.loc 1 403 6 view .LVU290
 1019 0020 00B9     		cbnz	r0, .L64
 411:Core/Src/main.c **** 
 1020              		.loc 1 411 1 view .LVU291
 1021 0022 08BD     		pop	{r3, pc}
 1022              	.L64:
 405:Core/Src/main.c ****   }
 1023              		.loc 1 405 5 is_stmt 1 view .LVU292
 1024 0024 FFF7FEFF 		bl	Error_Handler
 1025              	.LVL39:
 1026              	.L66:
 1027              		.align	2
ARM GAS  /tmp/ccc37uOe.s 			page 37


 1028              	.L65:
 1029 0028 00000000 		.word	htim14
 1030 002c 00200040 		.word	1073750016
 1031              		.cfi_endproc
 1032              	.LFE221:
 1034              		.section	.text.MX_TIM13_Init,"ax",%progbits
 1035              		.align	1
 1036              		.syntax unified
 1037              		.thumb
 1038              		.thumb_func
 1039              		.fpu fpv4-sp-d16
 1041              	MX_TIM13_Init:
 1042              	.LFB220:
 357:Core/Src/main.c **** 
 1043              		.loc 1 357 1 view -0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 0
 1046              		@ frame_needed = 0, uses_anonymous_args = 0
 1047 0000 08B5     		push	{r3, lr}
 1048              	.LCFI15:
 1049              		.cfi_def_cfa_offset 8
 1050              		.cfi_offset 3, -8
 1051              		.cfi_offset 14, -4
 366:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 1052              		.loc 1 366 3 view .LVU294
 366:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 1053              		.loc 1 366 19 is_stmt 0 view .LVU295
 1054 0002 0948     		ldr	r0, .L71
 1055 0004 094B     		ldr	r3, .L71+4
 1056 0006 0360     		str	r3, [r0]
 367:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 1057              		.loc 1 367 3 is_stmt 1 view .LVU296
 367:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 1058              		.loc 1 367 25 is_stmt 0 view .LVU297
 1059 0008 42F22733 		movw	r3, #8999
 1060 000c 4360     		str	r3, [r0, #4]
 368:Core/Src/main.c ****   htim13.Init.Period = 1000-1;
 1061              		.loc 1 368 3 is_stmt 1 view .LVU298
 368:Core/Src/main.c ****   htim13.Init.Period = 1000-1;
 1062              		.loc 1 368 27 is_stmt 0 view .LVU299
 1063 000e 0023     		movs	r3, #0
 1064 0010 8360     		str	r3, [r0, #8]
 369:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1065              		.loc 1 369 3 is_stmt 1 view .LVU300
 369:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1066              		.loc 1 369 22 is_stmt 0 view .LVU301
 1067 0012 40F2E732 		movw	r2, #999
 1068 0016 C260     		str	r2, [r0, #12]
 370:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1069              		.loc 1 370 3 is_stmt 1 view .LVU302
 370:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1070              		.loc 1 370 29 is_stmt 0 view .LVU303
 1071 0018 0361     		str	r3, [r0, #16]
 371:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 1072              		.loc 1 371 3 is_stmt 1 view .LVU304
 371:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 1073              		.loc 1 371 33 is_stmt 0 view .LVU305
ARM GAS  /tmp/ccc37uOe.s 			page 38


 1074 001a 8361     		str	r3, [r0, #24]
 372:Core/Src/main.c ****   {
 1075              		.loc 1 372 3 is_stmt 1 view .LVU306
 372:Core/Src/main.c ****   {
 1076              		.loc 1 372 7 is_stmt 0 view .LVU307
 1077 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1078              	.LVL40:
 372:Core/Src/main.c ****   {
 1079              		.loc 1 372 6 view .LVU308
 1080 0020 00B9     		cbnz	r0, .L70
 380:Core/Src/main.c **** 
 1081              		.loc 1 380 1 view .LVU309
 1082 0022 08BD     		pop	{r3, pc}
 1083              	.L70:
 374:Core/Src/main.c ****   }
 1084              		.loc 1 374 5 is_stmt 1 view .LVU310
 1085 0024 FFF7FEFF 		bl	Error_Handler
 1086              	.LVL41:
 1087              	.L72:
 1088              		.align	2
 1089              	.L71:
 1090 0028 00000000 		.word	htim13
 1091 002c 001C0040 		.word	1073748992
 1092              		.cfi_endproc
 1093              	.LFE220:
 1095              		.section	.text.SystemClock_Config,"ax",%progbits
 1096              		.align	1
 1097              		.global	SystemClock_Config
 1098              		.syntax unified
 1099              		.thumb
 1100              		.thumb_func
 1101              		.fpu fpv4-sp-d16
 1103              	SystemClock_Config:
 1104              	.LFB217:
 203:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1105              		.loc 1 203 1 view -0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 80
 1108              		@ frame_needed = 0, uses_anonymous_args = 0
 1109 0000 00B5     		push	{lr}
 1110              	.LCFI16:
 1111              		.cfi_def_cfa_offset 4
 1112              		.cfi_offset 14, -4
 1113 0002 95B0     		sub	sp, sp, #84
 1114              	.LCFI17:
 1115              		.cfi_def_cfa_offset 88
 204:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1116              		.loc 1 204 3 view .LVU312
 204:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1117              		.loc 1 204 22 is_stmt 0 view .LVU313
 1118 0004 3422     		movs	r2, #52
 1119 0006 0021     		movs	r1, #0
 1120 0008 07A8     		add	r0, sp, #28
 1121 000a FFF7FEFF 		bl	memset
 1122              	.LVL42:
 205:Core/Src/main.c **** 
 1123              		.loc 1 205 3 is_stmt 1 view .LVU314
ARM GAS  /tmp/ccc37uOe.s 			page 39


 205:Core/Src/main.c **** 
 1124              		.loc 1 205 22 is_stmt 0 view .LVU315
 1125 000e 0023     		movs	r3, #0
 1126 0010 0293     		str	r3, [sp, #8]
 1127 0012 0393     		str	r3, [sp, #12]
 1128 0014 0493     		str	r3, [sp, #16]
 1129 0016 0593     		str	r3, [sp, #20]
 1130 0018 0693     		str	r3, [sp, #24]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1131              		.loc 1 209 3 is_stmt 1 view .LVU316
 1132              	.LBB9:
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1133              		.loc 1 209 3 view .LVU317
 1134 001a 0093     		str	r3, [sp]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1135              		.loc 1 209 3 view .LVU318
 1136 001c 1E4A     		ldr	r2, .L79
 1137 001e 116C     		ldr	r1, [r2, #64]
 1138 0020 41F08051 		orr	r1, r1, #268435456
 1139 0024 1164     		str	r1, [r2, #64]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1140              		.loc 1 209 3 view .LVU319
 1141 0026 126C     		ldr	r2, [r2, #64]
 1142 0028 02F08052 		and	r2, r2, #268435456
 1143 002c 0092     		str	r2, [sp]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1144              		.loc 1 209 3 view .LVU320
 1145 002e 009A     		ldr	r2, [sp]
 1146              	.LBE9:
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1147              		.loc 1 209 3 view .LVU321
 210:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1148              		.loc 1 210 3 view .LVU322
 1149              	.LBB10:
 210:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1150              		.loc 1 210 3 view .LVU323
 1151 0030 0193     		str	r3, [sp, #4]
 210:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1152              		.loc 1 210 3 view .LVU324
 1153 0032 1A4A     		ldr	r2, .L79+4
 1154 0034 1168     		ldr	r1, [r2]
 1155 0036 41F44041 		orr	r1, r1, #49152
 1156 003a 1160     		str	r1, [r2]
 210:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1157              		.loc 1 210 3 view .LVU325
 1158 003c 1268     		ldr	r2, [r2]
 1159 003e 02F44042 		and	r2, r2, #49152
 1160 0042 0192     		str	r2, [sp, #4]
 210:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1161              		.loc 1 210 3 view .LVU326
 1162 0044 019A     		ldr	r2, [sp, #4]
 1163              	.LBE10:
 210:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1164              		.loc 1 210 3 view .LVU327
 214:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1165              		.loc 1 214 3 view .LVU328
 214:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  /tmp/ccc37uOe.s 			page 40


 1166              		.loc 1 214 36 is_stmt 0 view .LVU329
 1167 0046 0222     		movs	r2, #2
 1168 0048 0792     		str	r2, [sp, #28]
 215:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1169              		.loc 1 215 3 is_stmt 1 view .LVU330
 215:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1170              		.loc 1 215 30 is_stmt 0 view .LVU331
 1171 004a 0121     		movs	r1, #1
 1172 004c 0A91     		str	r1, [sp, #40]
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1173              		.loc 1 216 3 is_stmt 1 view .LVU332
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1174              		.loc 1 216 41 is_stmt 0 view .LVU333
 1175 004e 1021     		movs	r1, #16
 1176 0050 0B91     		str	r1, [sp, #44]
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1177              		.loc 1 217 3 is_stmt 1 view .LVU334
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1178              		.loc 1 217 34 is_stmt 0 view .LVU335
 1179 0052 0D92     		str	r2, [sp, #52]
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1180              		.loc 1 218 3 is_stmt 1 view .LVU336
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1181              		.loc 1 218 35 is_stmt 0 view .LVU337
 1182 0054 0E93     		str	r3, [sp, #56]
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 1183              		.loc 1 219 3 is_stmt 1 view .LVU338
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 1184              		.loc 1 219 30 is_stmt 0 view .LVU339
 1185 0056 0823     		movs	r3, #8
 1186 0058 0F93     		str	r3, [sp, #60]
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1187              		.loc 1 220 3 is_stmt 1 view .LVU340
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1188              		.loc 1 220 30 is_stmt 0 view .LVU341
 1189 005a 5A23     		movs	r3, #90
 1190 005c 1093     		str	r3, [sp, #64]
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1191              		.loc 1 221 3 is_stmt 1 view .LVU342
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1192              		.loc 1 221 30 is_stmt 0 view .LVU343
 1193 005e 1192     		str	r2, [sp, #68]
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1194              		.loc 1 222 3 is_stmt 1 view .LVU344
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1195              		.loc 1 222 30 is_stmt 0 view .LVU345
 1196 0060 1292     		str	r2, [sp, #72]
 223:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1197              		.loc 1 223 3 is_stmt 1 view .LVU346
 223:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1198              		.loc 1 223 30 is_stmt 0 view .LVU347
 1199 0062 1392     		str	r2, [sp, #76]
 224:Core/Src/main.c ****   {
 1200              		.loc 1 224 3 is_stmt 1 view .LVU348
 224:Core/Src/main.c ****   {
 1201              		.loc 1 224 7 is_stmt 0 view .LVU349
 1202 0064 07A8     		add	r0, sp, #28
ARM GAS  /tmp/ccc37uOe.s 			page 41


 1203 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1204              	.LVL43:
 224:Core/Src/main.c ****   {
 1205              		.loc 1 224 6 view .LVU350
 1206 006a 88B9     		cbnz	r0, .L77
 230:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1207              		.loc 1 230 3 is_stmt 1 view .LVU351
 230:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1208              		.loc 1 230 31 is_stmt 0 view .LVU352
 1209 006c 0F23     		movs	r3, #15
 1210 006e 0293     		str	r3, [sp, #8]
 232:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1211              		.loc 1 232 3 is_stmt 1 view .LVU353
 232:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1212              		.loc 1 232 34 is_stmt 0 view .LVU354
 1213 0070 0223     		movs	r3, #2
 1214 0072 0393     		str	r3, [sp, #12]
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1215              		.loc 1 233 3 is_stmt 1 view .LVU355
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1216              		.loc 1 233 35 is_stmt 0 view .LVU356
 1217 0074 0023     		movs	r3, #0
 1218 0076 0493     		str	r3, [sp, #16]
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1219              		.loc 1 234 3 is_stmt 1 view .LVU357
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1220              		.loc 1 234 36 is_stmt 0 view .LVU358
 1221 0078 4FF48052 		mov	r2, #4096
 1222 007c 0592     		str	r2, [sp, #20]
 235:Core/Src/main.c **** 
 1223              		.loc 1 235 3 is_stmt 1 view .LVU359
 235:Core/Src/main.c **** 
 1224              		.loc 1 235 36 is_stmt 0 view .LVU360
 1225 007e 0693     		str	r3, [sp, #24]
 237:Core/Src/main.c ****   {
 1226              		.loc 1 237 3 is_stmt 1 view .LVU361
 237:Core/Src/main.c ****   {
 1227              		.loc 1 237 7 is_stmt 0 view .LVU362
 1228 0080 0321     		movs	r1, #3
 1229 0082 02A8     		add	r0, sp, #8
 1230 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1231              	.LVL44:
 237:Core/Src/main.c ****   {
 1232              		.loc 1 237 6 view .LVU363
 1233 0088 20B9     		cbnz	r0, .L78
 241:Core/Src/main.c **** 
 1234              		.loc 1 241 1 view .LVU364
 1235 008a 15B0     		add	sp, sp, #84
 1236              	.LCFI18:
 1237              		.cfi_remember_state
 1238              		.cfi_def_cfa_offset 4
 1239              		@ sp needed
 1240 008c 5DF804FB 		ldr	pc, [sp], #4
 1241              	.L77:
 1242              	.LCFI19:
 1243              		.cfi_restore_state
 226:Core/Src/main.c ****   }
ARM GAS  /tmp/ccc37uOe.s 			page 42


 1244              		.loc 1 226 5 is_stmt 1 view .LVU365
 1245 0090 FFF7FEFF 		bl	Error_Handler
 1246              	.LVL45:
 1247              	.L78:
 239:Core/Src/main.c ****   }
 1248              		.loc 1 239 5 view .LVU366
 1249 0094 FFF7FEFF 		bl	Error_Handler
 1250              	.LVL46:
 1251              	.L80:
 1252              		.align	2
 1253              	.L79:
 1254 0098 00380240 		.word	1073887232
 1255 009c 00700040 		.word	1073770496
 1256              		.cfi_endproc
 1257              	.LFE217:
 1259              		.section	.text.main,"ax",%progbits
 1260              		.align	1
 1261              		.global	main
 1262              		.syntax unified
 1263              		.thumb
 1264              		.thumb_func
 1265              		.fpu fpv4-sp-d16
 1267              	main:
 1268              	.LFB216:
 123:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1269              		.loc 1 123 1 view -0
 1270              		.cfi_startproc
 1271              		@ Volatile: function does not return.
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274 0000 08B5     		push	{r3, lr}
 1275              	.LCFI20:
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 3, -8
 1278              		.cfi_offset 14, -4
 131:Core/Src/main.c **** 
 1279              		.loc 1 131 3 view .LVU368
 1280 0002 FFF7FEFF 		bl	HAL_Init
 1281              	.LVL47:
 137:Core/Src/main.c **** 
 1282              		.loc 1 137 3 view .LVU369
 1283 0006 FFF7FEFF 		bl	SystemClock_Config
 1284              	.LVL48:
 143:Core/Src/main.c ****   MX_CAN1_Init();
 1285              		.loc 1 143 3 view .LVU370
 1286 000a FFF7FEFF 		bl	MX_GPIO_Init
 1287              	.LVL49:
 144:Core/Src/main.c ****   MX_DMA_Init();
 1288              		.loc 1 144 3 view .LVU371
 1289 000e FFF7FEFF 		bl	MX_CAN1_Init
 1290              	.LVL50:
 145:Core/Src/main.c ****   MX_ADC1_Init();
 1291              		.loc 1 145 3 view .LVU372
 1292 0012 FFF7FEFF 		bl	MX_DMA_Init
 1293              	.LVL51:
 146:Core/Src/main.c ****   MX_TIM14_Init();
 1294              		.loc 1 146 3 view .LVU373
ARM GAS  /tmp/ccc37uOe.s 			page 43


 1295 0016 FFF7FEFF 		bl	MX_ADC1_Init
 1296              	.LVL52:
 147:Core/Src/main.c ****   MX_TIM13_Init();
 1297              		.loc 1 147 3 view .LVU374
 1298 001a FFF7FEFF 		bl	MX_TIM14_Init
 1299              	.LVL53:
 148:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1300              		.loc 1 148 3 view .LVU375
 1301 001e FFF7FEFF 		bl	MX_TIM13_Init
 1302              	.LVL54:
 152:Core/Src/main.c ****   txHeader0.IDE = CAN_ID_STD;
 1303              		.loc 1 152 3 view .LVU376
 152:Core/Src/main.c ****   txHeader0.IDE = CAN_ID_STD;
 1304              		.loc 1 152 17 is_stmt 0 view .LVU377
 1305 0022 174A     		ldr	r2, .L84
 1306 0024 0821     		movs	r1, #8
 1307 0026 1161     		str	r1, [r2, #16]
 153:Core/Src/main.c ****   txHeader0.RTR = CAN_RTR_DATA;
 1308              		.loc 1 153 3 is_stmt 1 view .LVU378
 153:Core/Src/main.c ****   txHeader0.RTR = CAN_RTR_DATA;
 1309              		.loc 1 153 17 is_stmt 0 view .LVU379
 1310 0028 0023     		movs	r3, #0
 1311 002a 9360     		str	r3, [r2, #8]
 154:Core/Src/main.c ****   txHeader0.StdId = 0x086;
 1312              		.loc 1 154 3 is_stmt 1 view .LVU380
 154:Core/Src/main.c ****   txHeader0.StdId = 0x086;
 1313              		.loc 1 154 17 is_stmt 0 view .LVU381
 1314 002c D360     		str	r3, [r2, #12]
 155:Core/Src/main.c ****   txHeader0.ExtId = 0;
 1315              		.loc 1 155 3 is_stmt 1 view .LVU382
 155:Core/Src/main.c ****   txHeader0.ExtId = 0;
 1316              		.loc 1 155 19 is_stmt 0 view .LVU383
 1317 002e 8620     		movs	r0, #134
 1318 0030 1060     		str	r0, [r2]
 156:Core/Src/main.c ****   txHeader0.TransmitGlobalTime = DISABLE;
 1319              		.loc 1 156 3 is_stmt 1 view .LVU384
 156:Core/Src/main.c ****   txHeader0.TransmitGlobalTime = DISABLE;
 1320              		.loc 1 156 19 is_stmt 0 view .LVU385
 1321 0032 5360     		str	r3, [r2, #4]
 157:Core/Src/main.c **** 
 1322              		.loc 1 157 3 is_stmt 1 view .LVU386
 157:Core/Src/main.c **** 
 1323              		.loc 1 157 32 is_stmt 0 view .LVU387
 1324 0034 1375     		strb	r3, [r2, #20]
 160:Core/Src/main.c ****   txHeader1.IDE = CAN_ID_STD;
 1325              		.loc 1 160 3 is_stmt 1 view .LVU388
 160:Core/Src/main.c ****   txHeader1.IDE = CAN_ID_STD;
 1326              		.loc 1 160 17 is_stmt 0 view .LVU389
 1327 0036 134A     		ldr	r2, .L84+4
 1328 0038 1161     		str	r1, [r2, #16]
 161:Core/Src/main.c ****   txHeader1.RTR = CAN_RTR_DATA;
 1329              		.loc 1 161 3 is_stmt 1 view .LVU390
 161:Core/Src/main.c ****   txHeader1.RTR = CAN_RTR_DATA;
 1330              		.loc 1 161 17 is_stmt 0 view .LVU391
 1331 003a 9360     		str	r3, [r2, #8]
 162:Core/Src/main.c ****   txHeader1.StdId = 0x087;
 1332              		.loc 1 162 3 is_stmt 1 view .LVU392
ARM GAS  /tmp/ccc37uOe.s 			page 44


 162:Core/Src/main.c ****   txHeader1.StdId = 0x087;
 1333              		.loc 1 162 17 is_stmt 0 view .LVU393
 1334 003c D360     		str	r3, [r2, #12]
 163:Core/Src/main.c ****   txHeader1.ExtId = 0;
 1335              		.loc 1 163 3 is_stmt 1 view .LVU394
 163:Core/Src/main.c ****   txHeader1.ExtId = 0;
 1336              		.loc 1 163 19 is_stmt 0 view .LVU395
 1337 003e 8720     		movs	r0, #135
 1338 0040 1060     		str	r0, [r2]
 164:Core/Src/main.c ****   txHeader1.TransmitGlobalTime = DISABLE;
 1339              		.loc 1 164 3 is_stmt 1 view .LVU396
 164:Core/Src/main.c ****   txHeader1.TransmitGlobalTime = DISABLE;
 1340              		.loc 1 164 19 is_stmt 0 view .LVU397
 1341 0042 5360     		str	r3, [r2, #4]
 165:Core/Src/main.c **** 
 1342              		.loc 1 165 3 is_stmt 1 view .LVU398
 165:Core/Src/main.c **** 
 1343              		.loc 1 165 32 is_stmt 0 view .LVU399
 1344 0044 1375     		strb	r3, [r2, #20]
 168:Core/Src/main.c ****   txHeader2.IDE = CAN_ID_STD;
 1345              		.loc 1 168 3 is_stmt 1 view .LVU400
 168:Core/Src/main.c ****   txHeader2.IDE = CAN_ID_STD;
 1346              		.loc 1 168 17 is_stmt 0 view .LVU401
 1347 0046 104A     		ldr	r2, .L84+8
 1348 0048 1161     		str	r1, [r2, #16]
 169:Core/Src/main.c ****   txHeader2.RTR = CAN_RTR_DATA;
 1349              		.loc 1 169 3 is_stmt 1 view .LVU402
 169:Core/Src/main.c ****   txHeader2.RTR = CAN_RTR_DATA;
 1350              		.loc 1 169 17 is_stmt 0 view .LVU403
 1351 004a 9360     		str	r3, [r2, #8]
 170:Core/Src/main.c ****   txHeader2.StdId = 0x0C1;
 1352              		.loc 1 170 3 is_stmt 1 view .LVU404
 170:Core/Src/main.c ****   txHeader2.StdId = 0x0C1;
 1353              		.loc 1 170 17 is_stmt 0 view .LVU405
 1354 004c D360     		str	r3, [r2, #12]
 171:Core/Src/main.c ****   txHeader2.ExtId = 0;
 1355              		.loc 1 171 3 is_stmt 1 view .LVU406
 171:Core/Src/main.c ****   txHeader2.ExtId = 0;
 1356              		.loc 1 171 19 is_stmt 0 view .LVU407
 1357 004e C121     		movs	r1, #193
 1358 0050 1160     		str	r1, [r2]
 172:Core/Src/main.c ****   txHeader2.TransmitGlobalTime = DISABLE;
 1359              		.loc 1 172 3 is_stmt 1 view .LVU408
 172:Core/Src/main.c ****   txHeader2.TransmitGlobalTime = DISABLE;
 1360              		.loc 1 172 19 is_stmt 0 view .LVU409
 1361 0052 5360     		str	r3, [r2, #4]
 173:Core/Src/main.c **** 
 1362              		.loc 1 173 3 is_stmt 1 view .LVU410
 173:Core/Src/main.c **** 
 1363              		.loc 1 173 32 is_stmt 0 view .LVU411
 1364 0054 1375     		strb	r3, [r2, #20]
 175:Core/Src/main.c **** 	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);   // Initialize CAN Bus Rx Inte
 1365              		.loc 1 175 2 is_stmt 1 view .LVU412
 1366 0056 0D4C     		ldr	r4, .L84+12
 1367 0058 2046     		mov	r0, r4
 1368 005a FFF7FEFF 		bl	HAL_CAN_Start
 1369              	.LVL55:
ARM GAS  /tmp/ccc37uOe.s 			page 45


 176:Core/Src/main.c **** 
 1370              		.loc 1 176 2 view .LVU413
 1371 005e 0221     		movs	r1, #2
 1372 0060 2046     		mov	r0, r4
 1373 0062 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 1374              	.LVL56:
 179:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim13);
 1375              		.loc 1 179 3 view .LVU414
 1376 0066 0A48     		ldr	r0, .L84+16
 1377 0068 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1378              	.LVL57:
 180:Core/Src/main.c **** 
 1379              		.loc 1 180 3 view .LVU415
 1380 006c 0948     		ldr	r0, .L84+20
 1381 006e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1382              	.LVL58:
 183:Core/Src/main.c **** 
 1383              		.loc 1 183 2 view .LVU416
 1384 0072 40F6F672 		movw	r2, #4086
 1385 0076 0849     		ldr	r1, .L84+24
 1386 0078 0848     		ldr	r0, .L84+28
 1387 007a FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1388              	.LVL59:
 1389              	.L82:
 189:Core/Src/main.c ****   {
 1390              		.loc 1 189 3 discriminator 1 view .LVU417
 194:Core/Src/main.c ****   /* USER CODE END 3 */
 1391              		.loc 1 194 3 discriminator 1 view .LVU418
 189:Core/Src/main.c ****   {
 1392              		.loc 1 189 9 discriminator 1 view .LVU419
 1393 007e FEE7     		b	.L82
 1394              	.L85:
 1395              		.align	2
 1396              	.L84:
 1397 0080 00000000 		.word	txHeader0
 1398 0084 00000000 		.word	txHeader1
 1399 0088 00000000 		.word	txHeader2
 1400 008c 00000000 		.word	hcan1
 1401 0090 00000000 		.word	htim14
 1402 0094 00000000 		.word	htim13
 1403 0098 00000000 		.word	adc_buf
 1404 009c 00000000 		.word	hadc1
 1405              		.cfi_endproc
 1406              	.LFE216:
 1408              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 1409              		.align	1
 1410              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 1411              		.syntax unified
 1412              		.thumb
 1413              		.thumb_func
 1414              		.fpu fpv4-sp-d16
 1416              	HAL_CAN_RxFifo0MsgPendingCallback:
 1417              	.LVL60:
 1418              	.LFB224:
 476:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(hcan1, CAN_RX_FIFO0, &rxHeader, canRX) != HAL_OK)
 1419              		.loc 1 476 1 view -0
 1420              		.cfi_startproc
ARM GAS  /tmp/ccc37uOe.s 			page 46


 1421              		@ args = 0, pretend = 0, frame = 0
 1422              		@ frame_needed = 0, uses_anonymous_args = 0
 476:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(hcan1, CAN_RX_FIFO0, &rxHeader, canRX) != HAL_OK)
 1423              		.loc 1 476 1 is_stmt 0 view .LVU421
 1424 0000 08B5     		push	{r3, lr}
 1425              	.LCFI21:
 1426              		.cfi_def_cfa_offset 8
 1427              		.cfi_offset 3, -8
 1428              		.cfi_offset 14, -4
 477:Core/Src/main.c ****     Error_Handler();
 1429              		.loc 1 477 3 is_stmt 1 view .LVU422
 477:Core/Src/main.c ****     Error_Handler();
 1430              		.loc 1 477 7 is_stmt 0 view .LVU423
 1431 0002 104B     		ldr	r3, .L94
 1432 0004 104A     		ldr	r2, .L94+4
 1433 0006 0021     		movs	r1, #0
 1434 0008 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 1435              	.LVL61:
 477:Core/Src/main.c ****     Error_Handler();
 1436              		.loc 1 477 6 view .LVU424
 1437 000c 30B9     		cbnz	r0, .L91
 481:Core/Src/main.c ****   {
 1438              		.loc 1 481 3 is_stmt 1 view .LVU425
 481:Core/Src/main.c ****   {
 1439              		.loc 1 481 15 is_stmt 0 view .LVU426
 1440 000e 0E4B     		ldr	r3, .L94+4
 1441 0010 1B68     		ldr	r3, [r3]
 481:Core/Src/main.c ****   {
 1442              		.loc 1 481 6 view .LVU427
 1443 0012 A72B     		cmp	r3, #167
 1444 0014 04D0     		beq	.L92
 1445              	.L88:
 492:Core/Src/main.c ****   {
 1446              		.loc 1 492 3 is_stmt 1 view .LVU428
 492:Core/Src/main.c ****   {
 1447              		.loc 1 492 6 is_stmt 0 view .LVU429
 1448 0016 012B     		cmp	r3, #1
 1449 0018 0AD0     		beq	.L93
 1450              	.L86:
 504:Core/Src/main.c **** 
 1451              		.loc 1 504 1 view .LVU430
 1452 001a 08BD     		pop	{r3, pc}
 1453              	.L91:
 478:Core/Src/main.c **** 
 1454              		.loc 1 478 5 is_stmt 1 view .LVU431
 1455 001c FFF7FEFF 		bl	Error_Handler
 1456              	.LVL62:
 1457              	.L92:
 1458              	.LBB11:
 484:Core/Src/main.c ****     int rine2 = canRX[1];
 1459              		.loc 1 484 4 view .LVU432
 484:Core/Src/main.c ****     int rine2 = canRX[1];
 1460              		.loc 1 484 21 is_stmt 0 view .LVU433
 1461 0020 0849     		ldr	r1, .L94
 1462 0022 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1463              	.LVL63:
 485:Core/Src/main.c **** 
ARM GAS  /tmp/ccc37uOe.s 			page 47


 1464              		.loc 1 485 5 is_stmt 1 view .LVU434
 485:Core/Src/main.c **** 
 1465              		.loc 1 485 22 is_stmt 0 view .LVU435
 1466 0024 4A78     		ldrb	r2, [r1, #1]	@ zero_extendqisi2
 1467              	.LVL64:
 488:Core/Src/main.c ****   }
 1468              		.loc 1 488 5 is_stmt 1 view .LVU436
 488:Core/Src/main.c ****   }
 1469              		.loc 1 488 36 is_stmt 0 view .LVU437
 1470 0026 42EA0022 		orr	r2, r2, r0, lsl #8
 1471              	.LVL65:
 488:Core/Src/main.c ****   }
 1472              		.loc 1 488 21 view .LVU438
 1473 002a 0849     		ldr	r1, .L94+8
 1474 002c 0A60     		str	r2, [r1]
 1475 002e F2E7     		b	.L88
 1476              	.LVL66:
 1477              	.L93:
 488:Core/Src/main.c ****   }
 1478              		.loc 1 488 21 view .LVU439
 1479              	.LBE11:
 1480              	.LBB12:
 494:Core/Src/main.c ****     uint8_t volt2 = canRX[3] & 0xFF;
 1481              		.loc 1 494 5 is_stmt 1 view .LVU440
 495:Core/Src/main.c ****     uint8_t volt3 = canRX[6] >> 24;
 1482              		.loc 1 495 5 view .LVU441
 495:Core/Src/main.c ****     uint8_t volt3 = canRX[6] >> 24;
 1483              		.loc 1 495 13 is_stmt 0 view .LVU442
 1484 0030 044B     		ldr	r3, .L94
 1485 0032 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1486              	.LVL67:
 496:Core/Src/main.c ****     uint8_t volt4 = canRX[5] >> 16 & 0xFF;
 1487              		.loc 1 496 5 is_stmt 1 view .LVU443
 497:Core/Src/main.c **** 
 1488              		.loc 1 497 5 view .LVU444
 499:Core/Src/main.c ****     uint16_t emus2 = (volt4 << 8) | volt3;
 1489              		.loc 1 499 5 view .LVU445
 500:Core/Src/main.c ****     emusVoltage = volt3 << 24 | (((volt4 << 16) | ((volt1 << 8)) | (volt2)));
 1490              		.loc 1 500 5 view .LVU446
 501:Core/Src/main.c ****     emusVoltage = emusVoltage / 10; // scale down to rinehart *10 scaler
 1491              		.loc 1 501 5 view .LVU447
 502:Core/Src/main.c ****   }
 1492              		.loc 1 502 5 view .LVU448
 502:Core/Src/main.c ****   }
 1493              		.loc 1 502 31 is_stmt 0 view .LVU449
 1494 0034 064A     		ldr	r2, .L94+12
 1495 0036 A2FB0323 		umull	r2, r3, r2, r3
 1496              	.LVL68:
 502:Core/Src/main.c ****   }
 1497              		.loc 1 502 31 view .LVU450
 1498 003a DB08     		lsrs	r3, r3, #3
 502:Core/Src/main.c ****   }
 1499              		.loc 1 502 17 view .LVU451
 1500 003c 054A     		ldr	r2, .L94+16
 1501 003e 1360     		str	r3, [r2]
 1502              	.LBE12:
 504:Core/Src/main.c **** 
ARM GAS  /tmp/ccc37uOe.s 			page 48


 1503              		.loc 1 504 1 view .LVU452
 1504 0040 EBE7     		b	.L86
 1505              	.L95:
 1506 0042 00BF     		.align	2
 1507              	.L94:
 1508 0044 00000000 		.word	.LANCHOR8
 1509 0048 00000000 		.word	rxHeader
 1510 004c 00000000 		.word	.LANCHOR3
 1511 0050 CDCCCCCC 		.word	-858993459
 1512 0054 00000000 		.word	.LANCHOR4
 1513              		.cfi_endproc
 1514              	.LFE224:
 1516              		.comm	canFilter1,40,4
 1517              		.comm	canFilter0,40,4
 1518              		.global	canRX
 1519              		.comm	rxHeader,28,4
 1520              		.comm	TxData,8,4
 1521              		.comm	txHeader2,24,4
 1522              		.comm	txHeader1,24,4
 1523              		.comm	txHeader0,24,4
 1524              		.comm	TxMailbox,4,4
 1525              		.global	voltageCheckCount
 1526              		.global	lastPrechargeState
 1527              		.global	prechargeState
 1528              		.global	readyToDrive
 1529              		.global	DCDCFault
 1530              		.comm	adc_buf,16344,4
 1531              		.global	RTDButtonPressed
 1532              		.global	DCDCEnable
 1533              		.global	vicoreTemp
 1534              		.global	emusVoltage
 1535              		.global	rinehartVoltage
 1536              		.global	rinehart_send_command_count
 1537              		.comm	htim14,72,4
 1538              		.comm	htim13,72,4
 1539              		.comm	hcan1,40,4
 1540              		.comm	hdma_adc1,96,4
 1541              		.comm	hadc1,72,4
 1542              		.section	.bss.DCDCEnable,"aw",%nobits
 1543              		.align	2
 1546              	DCDCEnable:
 1547 0000 00000000 		.space	4
 1548              		.section	.bss.DCDCFault,"aw",%nobits
 1549              		.align	2
 1550              		.set	.LANCHOR6,. + 0
 1553              	DCDCFault:
 1554 0000 00000000 		.space	4
 1555              		.section	.bss.RTDButtonPressed,"aw",%nobits
 1556              		.align	2
 1559              	RTDButtonPressed:
 1560 0000 00000000 		.space	4
 1561              		.section	.bss.canRX,"aw",%nobits
 1562              		.align	2
 1563              		.set	.LANCHOR8,. + 0
 1566              	canRX:
 1567 0000 00000000 		.space	8
 1567      00000000 
ARM GAS  /tmp/ccc37uOe.s 			page 49


 1568              		.section	.bss.emusVoltage,"aw",%nobits
 1569              		.align	2
 1570              		.set	.LANCHOR4,. + 0
 1573              	emusVoltage:
 1574 0000 00000000 		.space	4
 1575              		.section	.bss.lastPrechargeState,"aw",%nobits
 1576              		.set	.LANCHOR2,. + 0
 1579              	lastPrechargeState:
 1580 0000 00       		.space	1
 1581              		.section	.bss.prechargeState,"aw",%nobits
 1582              		.set	.LANCHOR0,. + 0
 1585              	prechargeState:
 1586 0000 00       		.space	1
 1587              		.section	.bss.readyToDrive,"aw",%nobits
 1588              		.align	2
 1589              		.set	.LANCHOR1,. + 0
 1592              	readyToDrive:
 1593 0000 00000000 		.space	4
 1594              		.section	.bss.rinehartVoltage,"aw",%nobits
 1595              		.align	2
 1596              		.set	.LANCHOR3,. + 0
 1599              	rinehartVoltage:
 1600 0000 00000000 		.space	4
 1601              		.section	.bss.rinehart_send_command_count,"aw",%nobits
 1604              	rinehart_send_command_count:
 1605 0000 00       		.space	1
 1606              		.section	.bss.vicoreTemp,"aw",%nobits
 1607              		.align	2
 1608              		.set	.LANCHOR7,. + 0
 1611              	vicoreTemp:
 1612 0000 00000000 		.space	4
 1613              		.section	.bss.voltageCheckCount,"aw",%nobits
 1614              		.set	.LANCHOR5,. + 0
 1617              	voltageCheckCount:
 1618 0000 00       		.space	1
 1619              		.text
 1620              	.Letext0:
 1621              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1622              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1623              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1624              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
 1625              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1626              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1627              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1628              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1629              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1630              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1631              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1632              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1633              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1634              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1635              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1636              		.file 18 "<built-in>"
ARM GAS  /tmp/ccc37uOe.s 			page 50


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccc37uOe.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccc37uOe.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccc37uOe.s:151    .text.MX_GPIO_Init:0000000000000080 $d
     /tmp/ccc37uOe.s:157    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccc37uOe.s:163    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccc37uOe.s:212    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/ccc37uOe.s:221    .text.prechargeControl:0000000000000000 $t
     /tmp/ccc37uOe.s:228    .text.prechargeControl:0000000000000000 prechargeControl
     /tmp/ccc37uOe.s:248    .text.prechargeControl:0000000000000010 $d
     /tmp/ccc37uOe.s:252    .text.prechargeControl:0000000000000014 $t
     /tmp/ccc37uOe.s:475    .text.prechargeControl:0000000000000138 $d
                            *COM*:0000000000000008 TxData
                            *COM*:0000000000000004 TxMailbox
                            *COM*:0000000000000018 txHeader2
                            *COM*:0000000000000028 hcan1
     /tmp/ccc37uOe.s:491    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccc37uOe.s:498    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccc37uOe.s:583    .text.HAL_TIM_PeriodElapsedCallback:000000000000004c $d
                            *COM*:0000000000000048 htim14
                            *COM*:0000000000000048 htim13
                            *COM*:0000000000000018 txHeader1
     /tmp/ccc37uOe.s:598    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccc37uOe.s:605    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccc37uOe.s:655    .text.HAL_ADC_ConvCpltCallback:0000000000000028 $d
                            *COM*:0000000000003fd8 adc_buf
     /tmp/ccc37uOe.s:662    .text.Error_Handler:0000000000000000 $t
     /tmp/ccc37uOe.s:669    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccc37uOe.s:701    .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccc37uOe.s:707    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccc37uOe.s:846    .text.MX_CAN1_Init:0000000000000074 $d
                            *COM*:0000000000000028 canFilter0
                            *COM*:0000000000000028 canFilter1
     /tmp/ccc37uOe.s:854    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccc37uOe.s:860    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccc37uOe.s:967    .text.MX_ADC1_Init:0000000000000060 $d
                            *COM*:0000000000000048 hadc1
     /tmp/ccc37uOe.s:974    .text.MX_TIM14_Init:0000000000000000 $t
     /tmp/ccc37uOe.s:980    .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
     /tmp/ccc37uOe.s:1029   .text.MX_TIM14_Init:0000000000000028 $d
     /tmp/ccc37uOe.s:1035   .text.MX_TIM13_Init:0000000000000000 $t
     /tmp/ccc37uOe.s:1041   .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
     /tmp/ccc37uOe.s:1090   .text.MX_TIM13_Init:0000000000000028 $d
     /tmp/ccc37uOe.s:1096   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccc37uOe.s:1103   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccc37uOe.s:1254   .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccc37uOe.s:1260   .text.main:0000000000000000 $t
     /tmp/ccc37uOe.s:1267   .text.main:0000000000000000 main
     /tmp/ccc37uOe.s:1397   .text.main:0000000000000080 $d
                            *COM*:0000000000000018 txHeader0
     /tmp/ccc37uOe.s:1409   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccc37uOe.s:1416   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccc37uOe.s:1508   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000044 $d
                            *COM*:000000000000001c rxHeader
     /tmp/ccc37uOe.s:1566   .bss.canRX:0000000000000000 canRX
     /tmp/ccc37uOe.s:1617   .bss.voltageCheckCount:0000000000000000 voltageCheckCount
ARM GAS  /tmp/ccc37uOe.s 			page 51


     /tmp/ccc37uOe.s:1579   .bss.lastPrechargeState:0000000000000000 lastPrechargeState
     /tmp/ccc37uOe.s:1585   .bss.prechargeState:0000000000000000 prechargeState
     /tmp/ccc37uOe.s:1592   .bss.readyToDrive:0000000000000000 readyToDrive
     /tmp/ccc37uOe.s:1553   .bss.DCDCFault:0000000000000000 DCDCFault
     /tmp/ccc37uOe.s:1559   .bss.RTDButtonPressed:0000000000000000 RTDButtonPressed
     /tmp/ccc37uOe.s:1546   .bss.DCDCEnable:0000000000000000 DCDCEnable
     /tmp/ccc37uOe.s:1611   .bss.vicoreTemp:0000000000000000 vicoreTemp
     /tmp/ccc37uOe.s:1573   .bss.emusVoltage:0000000000000000 emusVoltage
     /tmp/ccc37uOe.s:1599   .bss.rinehartVoltage:0000000000000000 rinehartVoltage
     /tmp/ccc37uOe.s:1604   .bss.rinehart_send_command_count:0000000000000000 rinehart_send_command_count
                            *COM*:0000000000000060 hdma_adc1
     /tmp/ccc37uOe.s:1543   .bss.DCDCEnable:0000000000000000 $d
     /tmp/ccc37uOe.s:1549   .bss.DCDCFault:0000000000000000 $d
     /tmp/ccc37uOe.s:1556   .bss.RTDButtonPressed:0000000000000000 $d
     /tmp/ccc37uOe.s:1562   .bss.canRX:0000000000000000 $d
     /tmp/ccc37uOe.s:1569   .bss.emusVoltage:0000000000000000 $d
     /tmp/ccc37uOe.s:1580   .bss.lastPrechargeState:0000000000000000 $d
     /tmp/ccc37uOe.s:1586   .bss.prechargeState:0000000000000000 $d
     /tmp/ccc37uOe.s:1588   .bss.readyToDrive:0000000000000000 $d
     /tmp/ccc37uOe.s:1595   .bss.rinehartVoltage:0000000000000000 $d
     /tmp/ccc37uOe.s:1605   .bss.rinehart_send_command_count:0000000000000000 $d
     /tmp/ccc37uOe.s:1607   .bss.vicoreTemp:0000000000000000 $d
     /tmp/ccc37uOe.s:1618   .bss.voltageCheckCount:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_ui2d
__aeabi_dmul
__aeabi_dcmpgt
__aeabi_dcmple
HAL_CAN_AddTxMessage
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_TIM_Base_Start_IT
HAL_ADC_Start_DMA
HAL_CAN_GetRxMessage
