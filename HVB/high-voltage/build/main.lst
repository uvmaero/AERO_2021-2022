ARM GAS  /tmp/ccDN7Cpg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB223:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** /* USER CODE END PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccDN7Cpg.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN PD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** // analog buffer
  35:Core/Src/main.c **** #define ADC_BUF_LEN 4086
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** // precharge
  38:Core/Src/main.c **** #define PRECHARGE_COEFFICIENT       0.95          // 95% complete with precharge so it's probably s
  39:Core/Src/main.c **** #define NUM_COMMAND_MSG             10            // number of command messages we see from rinehar
  40:Core/Src/main.c **** #define NUM_VOLTAGE_CHECKS          500           // since we're checking at 10ms Interrupts, 500 w
  41:Core/Src/main.c ****                                                   // precharge should be done in less than 2 second
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  50:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc1;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** CAN_HandleTypeDef hcan1;
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** TIM_HandleTypeDef htim13;
  55:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE BEGIN PV */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** // counters for Rinehart message sending in precharge
  60:Core/Src/main.c **** uint8_t rinehart_send_command_count = 0;
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** // inputs
  63:Core/Src/main.c **** uint32_t rinehartVoltage = 0;                 // read from CAN
  64:Core/Src/main.c **** uint32_t bmsVoltage = 0;					            // read from CAN
  65:Core/Src/main.c **** int vicoreTemp = 0;					                  // read from DMA, vicore temp
  66:Core/Src/main.c **** int DCDCEnable = 0;                           // dc-dc enable (0 = disabled, 1 = enabled)
  67:Core/Src/main.c **** int RTDButtonPressed = 0;                     // read this from CAN, if it's 1 we can finish precha
  68:Core/Src/main.c **** uint32_t adc_buf[ADC_BUF_LEN];				        // adc read buffer
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** // output
  71:Core/Src/main.c **** int DCDCFault = 0;                            // the dc-dc fault indicator (0 = no fault, 1 = fault
  72:Core/Src/main.c **** int readyToDrive = 0;					                // the car is ready to drive! (0 = not ready, 1 = ready)
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** // precharge states
  75:Core/Src/main.c **** enum prechargeStates
  76:Core/Src/main.c **** {
  77:Core/Src/main.c **** 	PRECHARGE_OFF,
  78:Core/Src/main.c **** 	PRECHARGE_ON,
  79:Core/Src/main.c **** 	PRECHARGE_DONE,
  80:Core/Src/main.c **** 	PRECHARGE_ERROR
  81:Core/Src/main.c **** };
  82:Core/Src/main.c **** uint8_t prechargeState = PRECHARGE_OFF;			  // set initial precharge state to OFF
  83:Core/Src/main.c **** uint8_t lastPrechargeState = PRECHARGE_OFF;
  84:Core/Src/main.c **** uint8_t voltageCheckCount = 0;
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** // CAN transmit 
  87:Core/Src/main.c **** uint32_t TxMailbox; 							            // CAN Bus Mail box variable
  88:Core/Src/main.c **** CAN_TxHeaderTypeDef txHeader0; 					      // CAN Bus Transmit Header BASE
ARM GAS  /tmp/ccDN7Cpg.s 			page 3


  89:Core/Src/main.c **** CAN_TxHeaderTypeDef txHeader1; 					      // CAN Bus Transmit Header DATA
  90:Core/Src/main.c **** CAN_TxHeaderTypeDef txHeader2; 					      // CAN Bus Transmit Header DATA
  91:Core/Src/main.c **** uint8_t TxData[8];                            // CAN transmit buffer
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** // CAN recive
  94:Core/Src/main.c **** CAN_RxHeaderTypeDef rxHeader; 					      // CAN Bus Receive Header
  95:Core/Src/main.c **** uint8_t canRX[8] = {0, 0, 0, 0, 0, 0, 0, 0}; 	// CAN Bus Receive Buffer
  96:Core/Src/main.c **** 
  97:Core/Src/main.c **** CAN_FilterTypeDef canFilter0; 					      // CAN Bus Filter for BMS
  98:Core/Src/main.c **** CAN_FilterTypeDef canFilter1;                 // CAN Bus Filter for Rinehart
  99:Core/Src/main.c **** /* USER CODE END PV */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 102:Core/Src/main.c **** void SystemClock_Config(void);
 103:Core/Src/main.c **** static void MX_GPIO_Init(void);
 104:Core/Src/main.c **** static void MX_CAN1_Init(void);
 105:Core/Src/main.c **** static void MX_DMA_Init(void);
 106:Core/Src/main.c **** static void MX_ADC1_Init(void);
 107:Core/Src/main.c **** static void MX_TIM14_Init(void);
 108:Core/Src/main.c **** static void MX_TIM13_Init(void);
 109:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 110:Core/Src/main.c **** void prechargeControl();
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /* USER CODE END PFP */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 115:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 116:Core/Src/main.c **** /* USER CODE END 0 */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** /**
 119:Core/Src/main.c ****   * @brief  The application entry point.
 120:Core/Src/main.c ****   * @retval int
 121:Core/Src/main.c ****   */
 122:Core/Src/main.c **** int main(void)
 123:Core/Src/main.c **** {
 124:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END 1 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 131:Core/Src/main.c ****   HAL_Init();
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 134:Core/Src/main.c ****   /* USER CODE END Init */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /* Configure the system clock */
 137:Core/Src/main.c ****   SystemClock_Config();
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 140:Core/Src/main.c ****   /* USER CODE END SysInit */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* Initialize all configured peripherals */
 143:Core/Src/main.c ****   MX_GPIO_Init();
 144:Core/Src/main.c ****   MX_CAN1_Init();
 145:Core/Src/main.c ****   MX_DMA_Init();
ARM GAS  /tmp/ccDN7Cpg.s 			page 4


 146:Core/Src/main.c ****   MX_ADC1_Init();
 147:Core/Src/main.c ****   MX_TIM14_Init();
 148:Core/Src/main.c ****   MX_TIM13_Init();
 149:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   // init the CAN mailbox for BASE
 152:Core/Src/main.c ****   txHeader0.DLC = 8; // Number of bites to be transmitted max- 8
 153:Core/Src/main.c ****   txHeader0.IDE = CAN_ID_STD;
 154:Core/Src/main.c ****   txHeader0.RTR = CAN_RTR_DATA;
 155:Core/Src/main.c ****   txHeader0.StdId = 0x086;
 156:Core/Src/main.c ****   txHeader0.ExtId = 0;
 157:Core/Src/main.c ****   txHeader0.TransmitGlobalTime = DISABLE;
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   // init the CAN mailbox for DATA
 160:Core/Src/main.c ****   txHeader1.DLC = 8; // Number of bites to be transmitted max- 8
 161:Core/Src/main.c ****   txHeader1.IDE = CAN_ID_STD;
 162:Core/Src/main.c ****   txHeader1.RTR = CAN_RTR_DATA;
 163:Core/Src/main.c ****   txHeader1.StdId = 0x087;
 164:Core/Src/main.c ****   txHeader1.ExtId = 0;
 165:Core/Src/main.c ****   txHeader1.TransmitGlobalTime = DISABLE;
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   // header for rinehart (Parameter Command Message)
 168:Core/Src/main.c ****   txHeader2.DLC = 8; // Number of bites to be transmitted max- 8
 169:Core/Src/main.c ****   txHeader2.IDE = CAN_ID_STD;
 170:Core/Src/main.c ****   txHeader2.RTR = CAN_RTR_DATA;
 171:Core/Src/main.c ****   txHeader2.StdId = 0x0C1;
 172:Core/Src/main.c ****   txHeader2.ExtId = 0;
 173:Core/Src/main.c ****   txHeader2.TransmitGlobalTime = DISABLE;
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** 	HAL_CAN_Start(&hcan1); // Initialize CAN Bus
 176:Core/Src/main.c **** 	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);   // Initialize CAN Bus Rx Inte
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   // start timers
 179:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim14);
 180:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim13);
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** 	// start ADC DMA
 183:Core/Src/main.c **** 	HAL_ADC_Start_DMA(&hadc1, adc_buf, ADC_BUF_LEN);
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE END 2 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* Infinite loop */
 188:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 189:Core/Src/main.c ****   while (1)
 190:Core/Src/main.c ****   {
 191:Core/Src/main.c ****     /* USER CODE END WHILE */
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c ****   /* USER CODE END 3 */
 196:Core/Src/main.c **** }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****   * @brief System Clock Configuration
 200:Core/Src/main.c ****   * @retval None
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c **** void SystemClock_Config(void)
ARM GAS  /tmp/ccDN7Cpg.s 			page 5


 203:Core/Src/main.c **** {
 204:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 205:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 210:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 211:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 212:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 213:Core/Src/main.c ****   */
 214:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 215:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 216:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 224:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 225:Core/Src/main.c ****   {
 226:Core/Src/main.c ****     Error_Handler();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 231:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 232:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 233:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 238:Core/Src/main.c ****   {
 239:Core/Src/main.c ****     Error_Handler();
 240:Core/Src/main.c ****   }
 241:Core/Src/main.c **** }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /**
 244:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 245:Core/Src/main.c ****   * @param None
 246:Core/Src/main.c ****   * @retval None
 247:Core/Src/main.c ****   */
 248:Core/Src/main.c **** static void MX_ADC1_Init(void)
 249:Core/Src/main.c **** {
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 252:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 257:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 258:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 259:Core/Src/main.c ****   */
ARM GAS  /tmp/ccDN7Cpg.s 			page 6


 260:Core/Src/main.c ****   hadc1.Instance = ADC1;
 261:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 262:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 263:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 264:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 265:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 266:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 267:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 268:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 269:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 270:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 271:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 272:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 273:Core/Src/main.c ****   {
 274:Core/Src/main.c ****     Error_Handler();
 275:Core/Src/main.c ****   }
 276:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 277:Core/Src/main.c ****   */
 278:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 279:Core/Src/main.c ****   sConfig.Rank = 1;
 280:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 281:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 282:Core/Src/main.c ****   {
 283:Core/Src/main.c ****     Error_Handler();
 284:Core/Src/main.c ****   }
 285:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 286:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** }
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /**
 291:Core/Src/main.c ****   * @brief CAN1 Initialization Function
 292:Core/Src/main.c ****   * @param None
 293:Core/Src/main.c ****   * @retval None
 294:Core/Src/main.c ****   */
 295:Core/Src/main.c **** static void MX_CAN1_Init(void)
 296:Core/Src/main.c **** {
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 0 */
 299:Core/Src/main.c ****   /* USER CODE END CAN1_Init 0 */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 1 */
 302:Core/Src/main.c ****   /* USER CODE END CAN1_Init 1 */
 303:Core/Src/main.c ****   hcan1.Instance = CAN1;
 304:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 305:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 306:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 307:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 308:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 309:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 310:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 311:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 312:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 313:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 314:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 315:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 316:Core/Src/main.c ****   {
ARM GAS  /tmp/ccDN7Cpg.s 			page 7


 317:Core/Src/main.c ****     Error_Handler();
 318:Core/Src/main.c ****   }
 319:Core/Src/main.c ****   /* USER CODE BEGIN CAN1_Init 2 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   // init the CAN filter for BMS messages
 322:Core/Src/main.c ****     canFilter0.FilterIdHigh = 0x6B0 << 5;   // Orion ID: 0x6B0
 323:Core/Src/main.c ****   	canFilter0.FilterIdLow = 0x000;
 324:Core/Src/main.c ****     canFilter0.FilterMaskIdHigh = 0x6B0 << 5;
 325:Core/Src/main.c ****   	canFilter0.FilterMaskIdLow = 0x000;
 326:Core/Src/main.c ****     canFilter0.FilterBank = 0;
 327:Core/Src/main.c ****   	canFilter0.FilterMode = CAN_FILTERMODE_IDMASK;
 328:Core/Src/main.c ****   	canFilter0.FilterFIFOAssignment = CAN_RX_FIFO0;
 329:Core/Src/main.c ****   	canFilter0.FilterScale = CAN_FILTERSCALE_32BIT;
 330:Core/Src/main.c ****   	canFilter0.FilterActivation = ENABLE;
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****     HAL_CAN_ConfigFilter(&hcan1, &canFilter0);
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****     // init the CAN filter for Rinehart messages
 335:Core/Src/main.c ****     canFilter1.FilterIdHigh = 0x0A7 << 5;      // Rinehart IDs: 0xA0 - 0xB1
 336:Core/Src/main.c ****   	canFilter1.FilterIdLow = 0x000;
 337:Core/Src/main.c ****     canFilter1.FilterMaskIdHigh = 0x0A7 << 5;
 338:Core/Src/main.c ****   	canFilter1.FilterMaskIdLow = 0x000;
 339:Core/Src/main.c ****     canFilter1.FilterBank = 1;
 340:Core/Src/main.c ****   	canFilter1.FilterMode = CAN_FILTERMODE_IDMASK;
 341:Core/Src/main.c ****   	canFilter1.FilterFIFOAssignment = CAN_RX_FIFO0;
 342:Core/Src/main.c ****   	canFilter1.FilterScale = CAN_FILTERSCALE_32BIT;
 343:Core/Src/main.c ****   	canFilter1.FilterActivation = ENABLE;
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****     HAL_CAN_ConfigFilter(&hcan1, &canFilter1);
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE END CAN1_Init 2 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** }
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** /**
 352:Core/Src/main.c ****   * @brief TIM13 Initialization Function
 353:Core/Src/main.c ****   * @param None
 354:Core/Src/main.c ****   * @retval None
 355:Core/Src/main.c ****   */
 356:Core/Src/main.c **** static void MX_TIM13_Init(void)
 357:Core/Src/main.c **** {
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 0 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /* USER CODE END TIM13_Init 0 */
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 1 */
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* USER CODE END TIM13_Init 1 */
 366:Core/Src/main.c ****   htim13.Instance = TIM13;
 367:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 368:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 369:Core/Src/main.c ****   htim13.Init.Period = 1000-1;
 370:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 371:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 372:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 373:Core/Src/main.c ****   {
ARM GAS  /tmp/ccDN7Cpg.s 			page 8


 374:Core/Src/main.c ****     Error_Handler();
 375:Core/Src/main.c ****   }
 376:Core/Src/main.c ****   /* USER CODE BEGIN TIM13_Init 2 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE END TIM13_Init 2 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c **** }
 381:Core/Src/main.c **** 
 382:Core/Src/main.c **** /**
 383:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 384:Core/Src/main.c ****   * @param None
 385:Core/Src/main.c ****   * @retval None
 386:Core/Src/main.c ****   */
 387:Core/Src/main.c **** static void MX_TIM14_Init(void)
 388:Core/Src/main.c **** {
 389:Core/Src/main.c **** 
 390:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 391:Core/Src/main.c **** 
 392:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 393:Core/Src/main.c **** 
 394:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 397:Core/Src/main.c ****   htim14.Instance = TIM14;
 398:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 399:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 400:Core/Src/main.c ****   htim14.Init.Period = 500-1;
 401:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 402:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 403:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 404:Core/Src/main.c ****   {
 405:Core/Src/main.c ****     Error_Handler();
 406:Core/Src/main.c ****   }
 407:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 410:Core/Src/main.c **** 
 411:Core/Src/main.c **** }
 412:Core/Src/main.c **** 
 413:Core/Src/main.c **** /**
 414:Core/Src/main.c ****   * Enable DMA controller clock
 415:Core/Src/main.c ****   */
 416:Core/Src/main.c **** static void MX_DMA_Init(void)
 417:Core/Src/main.c **** {
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   /* DMA controller clock enable */
 420:Core/Src/main.c ****   __HAL_RCC_DMA2_CLK_ENABLE();
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /* DMA interrupt init */
 423:Core/Src/main.c ****   /* DMA2_Stream0_IRQn interrupt configuration */
 424:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 425:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 426:Core/Src/main.c **** 
 427:Core/Src/main.c **** }
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** /**
 430:Core/Src/main.c ****   * @brief GPIO Initialization Function
ARM GAS  /tmp/ccDN7Cpg.s 			page 9


 431:Core/Src/main.c ****   * @param None
 432:Core/Src/main.c ****   * @retval None
 433:Core/Src/main.c ****   */
 434:Core/Src/main.c **** static void MX_GPIO_Init(void)
 435:Core/Src/main.c **** {
  28              		.loc 1 435 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 89B0     		sub	sp, sp, #36
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 56
 436:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  43              		.loc 1 436 3 view .LVU1
  44              		.loc 1 436 20 is_stmt 0 view .LVU2
  45 0004 0024     		movs	r4, #0
  46 0006 0394     		str	r4, [sp, #12]
  47 0008 0494     		str	r4, [sp, #16]
  48 000a 0594     		str	r4, [sp, #20]
  49 000c 0694     		str	r4, [sp, #24]
  50 000e 0794     		str	r4, [sp, #28]
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 439:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  51              		.loc 1 439 3 is_stmt 1 view .LVU3
  52              	.LBB4:
  53              		.loc 1 439 3 view .LVU4
  54 0010 0194     		str	r4, [sp, #4]
  55              		.loc 1 439 3 view .LVU5
  56 0012 1B4B     		ldr	r3, .L3
  57 0014 1A6B     		ldr	r2, [r3, #48]
  58 0016 42F08002 		orr	r2, r2, #128
  59 001a 1A63     		str	r2, [r3, #48]
  60              		.loc 1 439 3 view .LVU6
  61 001c 1A6B     		ldr	r2, [r3, #48]
  62 001e 02F08002 		and	r2, r2, #128
  63 0022 0192     		str	r2, [sp, #4]
  64              		.loc 1 439 3 view .LVU7
  65 0024 019A     		ldr	r2, [sp, #4]
  66              	.LBE4:
  67              		.loc 1 439 3 view .LVU8
 440:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 440 3 view .LVU9
  69              	.LBB5:
  70              		.loc 1 440 3 view .LVU10
  71 0026 0294     		str	r4, [sp, #8]
  72              		.loc 1 440 3 view .LVU11
  73 0028 1A6B     		ldr	r2, [r3, #48]
  74 002a 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccDN7Cpg.s 			page 10


  75 002e 1A63     		str	r2, [r3, #48]
  76              		.loc 1 440 3 view .LVU12
  77 0030 1B6B     		ldr	r3, [r3, #48]
  78 0032 03F00103 		and	r3, r3, #1
  79 0036 0293     		str	r3, [sp, #8]
  80              		.loc 1 440 3 view .LVU13
  81 0038 029B     		ldr	r3, [sp, #8]
  82              	.LBE5:
  83              		.loc 1 440 3 view .LVU14
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 443:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  84              		.loc 1 443 3 view .LVU15
  85 003a 124D     		ldr	r5, .L3+4
  86 003c 2246     		mov	r2, r4
  87 003e 0321     		movs	r1, #3
  88 0040 2846     		mov	r0, r5
  89 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  90              	.LVL0:
 444:Core/Src/main.c **** 
 445:Core/Src/main.c ****   /*Configure GPIO pin : PA0 */
 446:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
  91              		.loc 1 446 3 view .LVU16
  92              		.loc 1 446 23 is_stmt 0 view .LVU17
  93 0046 0126     		movs	r6, #1
  94 0048 0396     		str	r6, [sp, #12]
 447:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  95              		.loc 1 447 3 is_stmt 1 view .LVU18
  96              		.loc 1 447 24 is_stmt 0 view .LVU19
  97 004a 0496     		str	r6, [sp, #16]
 448:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  98              		.loc 1 448 3 is_stmt 1 view .LVU20
  99              		.loc 1 448 24 is_stmt 0 view .LVU21
 100 004c 0227     		movs	r7, #2
 101 004e 0597     		str	r7, [sp, #20]
 449:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 102              		.loc 1 449 3 is_stmt 1 view .LVU22
 103              		.loc 1 449 25 is_stmt 0 view .LVU23
 104 0050 0694     		str	r4, [sp, #24]
 450:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 105              		.loc 1 450 3 is_stmt 1 view .LVU24
 106 0052 03A9     		add	r1, sp, #12
 107 0054 2846     		mov	r0, r5
 108 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 109              	.LVL1:
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****   /*Configure GPIO pin : PA1 */
 453:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1;
 110              		.loc 1 453 3 view .LVU25
 111              		.loc 1 453 23 is_stmt 0 view .LVU26
 112 005a 0397     		str	r7, [sp, #12]
 454:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 113              		.loc 1 454 3 is_stmt 1 view .LVU27
 114              		.loc 1 454 24 is_stmt 0 view .LVU28
 115 005c 0496     		str	r6, [sp, #16]
 455:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 116              		.loc 1 455 3 is_stmt 1 view .LVU29
ARM GAS  /tmp/ccDN7Cpg.s 			page 11


 117              		.loc 1 455 24 is_stmt 0 view .LVU30
 118 005e 0596     		str	r6, [sp, #20]
 456:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 119              		.loc 1 456 3 is_stmt 1 view .LVU31
 120              		.loc 1 456 25 is_stmt 0 view .LVU32
 121 0060 0694     		str	r4, [sp, #24]
 457:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 122              		.loc 1 457 3 is_stmt 1 view .LVU33
 123 0062 03A9     		add	r1, sp, #12
 124 0064 2846     		mov	r0, r5
 125 0066 FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL2:
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   /*Configure GPIO pin : PA2 */
 460:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 127              		.loc 1 460 3 view .LVU34
 128              		.loc 1 460 23 is_stmt 0 view .LVU35
 129 006a 0423     		movs	r3, #4
 130 006c 0393     		str	r3, [sp, #12]
 461:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 131              		.loc 1 461 3 is_stmt 1 view .LVU36
 132              		.loc 1 461 24 is_stmt 0 view .LVU37
 133 006e 0494     		str	r4, [sp, #16]
 462:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 134              		.loc 1 462 3 is_stmt 1 view .LVU38
 135              		.loc 1 462 24 is_stmt 0 view .LVU39
 136 0070 0594     		str	r4, [sp, #20]
 463:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 137              		.loc 1 463 3 is_stmt 1 view .LVU40
 138 0072 03A9     		add	r1, sp, #12
 139 0074 2846     		mov	r0, r5
 140 0076 FFF7FEFF 		bl	HAL_GPIO_Init
 141              	.LVL3:
 464:Core/Src/main.c **** 
 465:Core/Src/main.c **** }
 142              		.loc 1 465 1 is_stmt 0 view .LVU41
 143 007a 09B0     		add	sp, sp, #36
 144              	.LCFI2:
 145              		.cfi_def_cfa_offset 20
 146              		@ sp needed
 147 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 148              	.L4:
 149 007e 00BF     		.align	2
 150              	.L3:
 151 0080 00380240 		.word	1073887232
 152 0084 00000240 		.word	1073872896
 153              		.cfi_endproc
 154              	.LFE223:
 156              		.section	.text.MX_DMA_Init,"ax",%progbits
 157              		.align	1
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	MX_DMA_Init:
 164              	.LFB222:
 417:Core/Src/main.c **** 
ARM GAS  /tmp/ccDN7Cpg.s 			page 12


 165              		.loc 1 417 1 is_stmt 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 8
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169 0000 00B5     		push	{lr}
 170              	.LCFI3:
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 14, -4
 173 0002 83B0     		sub	sp, sp, #12
 174              	.LCFI4:
 175              		.cfi_def_cfa_offset 16
 420:Core/Src/main.c **** 
 176              		.loc 1 420 3 view .LVU43
 177              	.LBB6:
 420:Core/Src/main.c **** 
 178              		.loc 1 420 3 view .LVU44
 179 0004 0021     		movs	r1, #0
 180 0006 0191     		str	r1, [sp, #4]
 420:Core/Src/main.c **** 
 181              		.loc 1 420 3 view .LVU45
 182 0008 094B     		ldr	r3, .L7
 183 000a 1A6B     		ldr	r2, [r3, #48]
 184 000c 42F48002 		orr	r2, r2, #4194304
 185 0010 1A63     		str	r2, [r3, #48]
 420:Core/Src/main.c **** 
 186              		.loc 1 420 3 view .LVU46
 187 0012 1B6B     		ldr	r3, [r3, #48]
 188 0014 03F48003 		and	r3, r3, #4194304
 189 0018 0193     		str	r3, [sp, #4]
 420:Core/Src/main.c **** 
 190              		.loc 1 420 3 view .LVU47
 191 001a 019B     		ldr	r3, [sp, #4]
 192              	.LBE6:
 420:Core/Src/main.c **** 
 193              		.loc 1 420 3 view .LVU48
 424:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 194              		.loc 1 424 3 view .LVU49
 195 001c 0A46     		mov	r2, r1
 196 001e 3820     		movs	r0, #56
 197 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 198              	.LVL4:
 425:Core/Src/main.c **** 
 199              		.loc 1 425 3 view .LVU50
 200 0024 3820     		movs	r0, #56
 201 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 202              	.LVL5:
 427:Core/Src/main.c **** 
 203              		.loc 1 427 1 is_stmt 0 view .LVU51
 204 002a 03B0     		add	sp, sp, #12
 205              	.LCFI5:
 206              		.cfi_def_cfa_offset 4
 207              		@ sp needed
 208 002c 5DF804FB 		ldr	pc, [sp], #4
 209              	.L8:
 210              		.align	2
 211              	.L7:
 212 0030 00380240 		.word	1073887232
ARM GAS  /tmp/ccDN7Cpg.s 			page 13


 213              		.cfi_endproc
 214              	.LFE222:
 216              		.global	__aeabi_ui2d
 217              		.global	__aeabi_dmul
 218              		.global	__aeabi_dcmpgt
 219              		.section	.text.prechargeControl,"ax",%progbits
 220              		.align	1
 221              		.global	prechargeControl
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu fpv4-sp-d16
 227              	prechargeControl:
 228              	.LFB225:
 466:Core/Src/main.c **** 
 467:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 468:Core/Src/main.c **** 
 469:Core/Src/main.c **** // *** functions *** //
 470:Core/Src/main.c **** 
 471:Core/Src/main.c **** 
 472:Core/Src/main.c **** /**
 473:Core/Src/main.c ****  * overwriting the weak function defined in the includes which is the ISR for the CAN interrupt
 474:Core/Src/main.c ****  */
 475:Core/Src/main.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan1)
 476:Core/Src/main.c **** {
 477:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(hcan1, CAN_RX_FIFO0, &rxHeader, canRX) != HAL_OK)
 478:Core/Src/main.c ****     Error_Handler();
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****   // get rinehart bus voltage
 481:Core/Src/main.c ****   if (rxHeader.StdId == 0x0A7 && rxHeader.DLC == 8)    // sometimes rinehart sends 0 length message
 482:Core/Src/main.c ****   {
 483:Core/Src/main.c ****     // rinehart voltage is spread across the first 2 bytes
 484:Core/Src/main.c **** 	  int rine1 = canRX[0];
 485:Core/Src/main.c ****     int rine2 = canRX[1];
 486:Core/Src/main.c **** 
 487:Core/Src/main.c ****     // combine the first two bytes and assign that to the rinehart voltage
 488:Core/Src/main.c ****     rinehartVoltage = (rine2 << 8) | rine1;
 489:Core/Src/main.c ****   }
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   // get BMS total voltages
 492:Core/Src/main.c ****   if (rxHeader.StdId == 0x6B0)
 493:Core/Src/main.c ****   {
 494:Core/Src/main.c ****     // BMS voltage is spread across the first 2 bytes
 495:Core/Src/main.c **** 	  int volt1 = canRX[2];
 496:Core/Src/main.c ****     int volt2 = canRX[3];
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****     // combine the first two bytes and assign that to the BMS voltage
 499:Core/Src/main.c ****     bmsVoltage = (volt1 << 8) | volt2; // orion has a pre-scaller of *10
 500:Core/Src/main.c ****   }
 501:Core/Src/main.c **** }
 502:Core/Src/main.c **** 
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** /**
 505:Core/Src/main.c ****  * @brief 
 506:Core/Src/main.c ****  * 
 507:Core/Src/main.c ****  */
 508:Core/Src/main.c **** void prechargeControl()
ARM GAS  /tmp/ccDN7Cpg.s 			page 14


 509:Core/Src/main.c **** {
 229              		.loc 1 509 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233 0000 38B5     		push	{r3, r4, r5, lr}
 234              	.LCFI6:
 235              		.cfi_def_cfa_offset 16
 236              		.cfi_offset 3, -16
 237              		.cfi_offset 4, -12
 238              		.cfi_offset 5, -8
 239              		.cfi_offset 14, -4
 510:Core/Src/main.c ****   // NOTE: Weird thing about Rinehart 0x0A7 message: 
 511:Core/Src/main.c ****   //      Sometimes it sends a 0 byte length data. Make sure we're only reading
 512:Core/Src/main.c ****   //      The value if the DLC is 8
 513:Core/Src/main.c **** 	switch (prechargeState)
 240              		.loc 1 513 2 view .LVU53
 241 0002 534B     		ldr	r3, .L24+8
 242 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 243 0006 032B     		cmp	r3, #3
 244 0008 00F29780 		bhi	.L10
 245 000c DFE803F0 		tbb	[pc, r3]
 246              	.L12:
 247 0010 02       		.byte	(.L15-.L12)/2
 248 0011 23       		.byte	(.L14-.L12)/2
 249 0012 5B       		.byte	(.L13-.L12)/2
 250 0013 78       		.byte	(.L11-.L12)/2
 251              		.p2align 1
 252              	.L15:
 514:Core/Src/main.c **** 	{
 515:Core/Src/main.c **** 		case (PRECHARGE_OFF):
 516:Core/Src/main.c **** 			// set ready to drive to false
 517:Core/Src/main.c **** 			readyToDrive = 0;
 253              		.loc 1 517 4 view .LVU54
 254              		.loc 1 517 17 is_stmt 0 view .LVU55
 255 0014 4F4A     		ldr	r2, .L24+12
 256 0016 0021     		movs	r1, #0
 257 0018 1160     		str	r1, [r2]
 518:Core/Src/main.c **** 
 519:Core/Src/main.c ****       // this state sends a message to rinehart
 520:Core/Src/main.c ****       if (lastPrechargeState != prechargeState)
 258              		.loc 1 520 7 is_stmt 1 view .LVU56
 259              		.loc 1 520 30 is_stmt 0 view .LVU57
 260 001a 4F4A     		ldr	r2, .L24+16
 261 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 262              		.loc 1 520 10 view .LVU58
 263 001e 9342     		cmp	r3, r2
 264 0020 03D1     		bne	.L22
 265              	.L16:
 521:Core/Src/main.c ****       {
 522:Core/Src/main.c ****         // message is sent to rinehart to turn everything off
 523:Core/Src/main.c ****         TxData[0] = 1;          // parameter address. LSB
 524:Core/Src/main.c ****         TxData[1] = 0;          // parameter address. MSB
 525:Core/Src/main.c ****         TxData[2] = 1;          // Read / Write. 1 is write
 526:Core/Src/main.c ****         TxData[3] = 0;          // N/A
 527:Core/Src/main.c ****         TxData[4] = 0;          // Data. "0" off, "1": relay 1 on, "2": relay 2 on, "3": relay 1 an
 528:Core/Src/main.c ****         TxData[5] = 55;         // 55 means relay control
ARM GAS  /tmp/ccDN7Cpg.s 			page 15


 529:Core/Src/main.c ****         TxData[6] = 0;          // N/A
 530:Core/Src/main.c ****         TxData[7] = 0;          // N/A
 531:Core/Src/main.c **** 
 532:Core/Src/main.c ****         // send message
 533:Core/Src/main.c ****         HAL_CAN_AddTxMessage(&hcan1, &txHeader2, TxData, &TxMailbox);
 534:Core/Src/main.c ****         
 535:Core/Src/main.c ****         // update last precharge state
 536:Core/Src/main.c ****         lastPrechargeState = prechargeState;
 537:Core/Src/main.c ****       }
 538:Core/Src/main.c **** 
 539:Core/Src/main.c ****       // move to precharge on
 540:Core/Src/main.c ****       prechargeState = PRECHARGE_ON;
 266              		.loc 1 540 7 is_stmt 1 view .LVU59
 267              		.loc 1 540 22 is_stmt 0 view .LVU60
 268 0022 4B4B     		ldr	r3, .L24+8
 269 0024 0122     		movs	r2, #1
 270 0026 1A70     		strb	r2, [r3]
 541:Core/Src/main.c **** 		break;
 271              		.loc 1 541 3 is_stmt 1 view .LVU61
 272              	.L9:
 542:Core/Src/main.c **** 
 543:Core/Src/main.c **** 		case (PRECHARGE_ON):
 544:Core/Src/main.c ****       // not ready to drive yet
 545:Core/Src/main.c ****       readyToDrive = 0;
 546:Core/Src/main.c **** 
 547:Core/Src/main.c ****       // turn on precharge relay
 548:Core/Src/main.c ****       // this state sends a message to rinehart to turn 
 549:Core/Src/main.c ****       if (lastPrechargeState != prechargeState)
 550:Core/Src/main.c ****       {
 551:Core/Src/main.c ****         // message is sent to rinehart to turn on precharge relay
 552:Core/Src/main.c ****         // precharge relay is on relay 1 from Rinehart
 553:Core/Src/main.c ****         TxData[0] = 1;            // parameter address. LSB
 554:Core/Src/main.c ****         TxData[1] = 0;            // parameter address. MSB
 555:Core/Src/main.c ****         TxData[2] = 1;            // Read / Write. 1 is write
 556:Core/Src/main.c ****         TxData[3] = 0;            // N/A
 557:Core/Src/main.c ****         TxData[4] = 1;            // Data. "0" off, "1": relay 1 on, "2": relay 2 on, "3": relay 1 
 558:Core/Src/main.c ****         TxData[5] = 55;           // 55 means relay control
 559:Core/Src/main.c ****         TxData[6] = 0;            // N/A
 560:Core/Src/main.c ****         TxData[7] = 0;            // N/A
 561:Core/Src/main.c **** 
 562:Core/Src/main.c ****         // send message
 563:Core/Src/main.c ****         HAL_CAN_AddTxMessage(&hcan1, &txHeader2, TxData, &TxMailbox);
 564:Core/Src/main.c ****         
 565:Core/Src/main.c ****         // update last precharge state
 566:Core/Src/main.c ****         lastPrechargeState = prechargeState;
 567:Core/Src/main.c ****       }
 568:Core/Src/main.c ****       
 569:Core/Src/main.c **** 			// ensure voltages are above correct values
 570:Core/Src/main.c **** 			if (rinehartVoltage > (bmsVoltage * PRECHARGE_COEFFICIENT))
 571:Core/Src/main.c ****       {
 572:Core/Src/main.c ****         prechargeState = PRECHARGE_DONE;
 573:Core/Src/main.c ****       }
 574:Core/Src/main.c **** 
 575:Core/Src/main.c ****       // if we do this for too long, move to error state
 576:Core/Src/main.c ****       // if (voltageCheckCount >= NUM_VOLTAGE_CHECKS)
 577:Core/Src/main.c ****       // {
 578:Core/Src/main.c ****       //   prechargeState = PRECHARGE_ERROR;
ARM GAS  /tmp/ccDN7Cpg.s 			page 16


 579:Core/Src/main.c ****       // }
 580:Core/Src/main.c ****       
 581:Core/Src/main.c ****       // else
 582:Core/Src/main.c ****       // {
 583:Core/Src/main.c ****       //   voltageCheckCount++; // add to the counter. 
 584:Core/Src/main.c ****       // }
 585:Core/Src/main.c **** 		break;
 586:Core/Src/main.c **** 
 587:Core/Src/main.c **** 		case (PRECHARGE_DONE):
 588:Core/Src/main.c ****       // this state sends a message to rinehart to turn 
 589:Core/Src/main.c ****       if (lastPrechargeState != prechargeState)
 590:Core/Src/main.c ****       {
 591:Core/Src/main.c ****         // message is sent to rinehart to turn everything on
 592:Core/Src/main.c ****         // Keep precharge relay on and turn on main contactor
 593:Core/Src/main.c ****         TxData[0] = 1; // parameter address. LSB
 594:Core/Src/main.c ****         TxData[1] = 0; // parameter address. MSB
 595:Core/Src/main.c ****         TxData[2] = 1; // Read / Write. 1 is write
 596:Core/Src/main.c ****         TxData[3] = 0; // N/A
 597:Core/Src/main.c ****         TxData[4] = 3; // Data. "0" off, "1": relay 1 on, "2": relay 2 on, "3": relay 1 and 2 on
 598:Core/Src/main.c ****         TxData[5] = 55; // 55 means relay control
 599:Core/Src/main.c ****         TxData[6] = 0; // N/A
 600:Core/Src/main.c ****         TxData[7] = 0; // N/A
 601:Core/Src/main.c **** 
 602:Core/Src/main.c ****         // send message
 603:Core/Src/main.c ****         HAL_CAN_AddTxMessage(&hcan1, &txHeader2, TxData, &TxMailbox);
 604:Core/Src/main.c **** 
 605:Core/Src/main.c ****         // now that precharge is complete we can drive the car
 606:Core/Src/main.c ****         readyToDrive = 1;
 607:Core/Src/main.c ****           
 608:Core/Src/main.c ****         // update last precharge state
 609:Core/Src/main.c ****         lastPrechargeState = prechargeState;
 610:Core/Src/main.c ****       }
 611:Core/Src/main.c **** 
 612:Core/Src/main.c ****       // if rinehart voltage drops below battery, something's wrong, 
 613:Core/Src/main.c ****       // turn everything off
 614:Core/Src/main.c **** 			// if (rinehartVoltage <= (bmsVoltage * (PRECHARGE_COEFFICIENT)-20)) // 20 is a magic number
 615:Core/Src/main.c ****       // {
 616:Core/Src/main.c ****       //   prechargeState = PRECHARGE_OFF; // something weird happened. Go to error
 617:Core/Src/main.c ****       // }
 618:Core/Src/main.c **** 		break;
 619:Core/Src/main.c **** 
 620:Core/Src/main.c **** 		case (PRECHARGE_ERROR):
 621:Core/Src/main.c **** 			// the car is most definitly not ready to drive
 622:Core/Src/main.c ****       // set ready to drive off 
 623:Core/Src/main.c **** 			readyToDrive = 0;
 624:Core/Src/main.c **** 
 625:Core/Src/main.c ****       if (lastPrechargeState != prechargeState)
 626:Core/Src/main.c ****       {
 627:Core/Src/main.c ****         // message is sent to rinehart to turn everything off
 628:Core/Src/main.c ****         TxData[0] = 1;            // parameter address. LSB
 629:Core/Src/main.c ****         TxData[1] = 0;            // parameter address. MSB
 630:Core/Src/main.c ****         TxData[2] = 1;            // Read / Write. 1 is write
 631:Core/Src/main.c ****         TxData[3] = 0;            // N/A
 632:Core/Src/main.c ****         TxData[4] = 0;            // Data. "0" off, "1": relay 1 on, "2": relay 2 on, "3": relay 1 
 633:Core/Src/main.c ****         TxData[5] = 55;           // 55 means relay control
 634:Core/Src/main.c ****         TxData[6] = 0;            // N/A
 635:Core/Src/main.c ****         TxData[7] = 0;            // N/A
ARM GAS  /tmp/ccDN7Cpg.s 			page 17


 636:Core/Src/main.c **** 
 637:Core/Src/main.c ****         // send message
 638:Core/Src/main.c ****         HAL_CAN_AddTxMessage(&hcan1, &txHeader2, TxData, &TxMailbox);
 639:Core/Src/main.c ****         
 640:Core/Src/main.c ****         // update last precharge state
 641:Core/Src/main.c ****         lastPrechargeState = prechargeState;
 642:Core/Src/main.c ****       }
 643:Core/Src/main.c **** 		break;
 644:Core/Src/main.c **** 
 645:Core/Src/main.c **** 		default:
 646:Core/Src/main.c ****       // fall back state, this indicates we did some undefined action that brought us here
 647:Core/Src/main.c ****       // we will move to PRECHARGE_ERROR to ensure readyToDrive stays false :)
 648:Core/Src/main.c **** 			prechargeState = PRECHARGE_ERROR;
 649:Core/Src/main.c **** 		break;
 650:Core/Src/main.c **** 	}
 651:Core/Src/main.c **** }
 273              		.loc 1 651 1 is_stmt 0 view .LVU62
 274 0028 38BD     		pop	{r3, r4, r5, pc}
 275              	.L22:
 523:Core/Src/main.c ****         TxData[1] = 0;          // parameter address. MSB
 276              		.loc 1 523 9 is_stmt 1 view .LVU63
 523:Core/Src/main.c ****         TxData[1] = 0;          // parameter address. MSB
 277              		.loc 1 523 19 is_stmt 0 view .LVU64
 278 002a 4C4A     		ldr	r2, .L24+20
 279 002c 0121     		movs	r1, #1
 280 002e 1170     		strb	r1, [r2]
 524:Core/Src/main.c ****         TxData[2] = 1;          // Read / Write. 1 is write
 281              		.loc 1 524 9 is_stmt 1 view .LVU65
 524:Core/Src/main.c ****         TxData[2] = 1;          // Read / Write. 1 is write
 282              		.loc 1 524 19 is_stmt 0 view .LVU66
 283 0030 0023     		movs	r3, #0
 284 0032 5370     		strb	r3, [r2, #1]
 525:Core/Src/main.c ****         TxData[3] = 0;          // N/A
 285              		.loc 1 525 9 is_stmt 1 view .LVU67
 525:Core/Src/main.c ****         TxData[3] = 0;          // N/A
 286              		.loc 1 525 19 is_stmt 0 view .LVU68
 287 0034 9170     		strb	r1, [r2, #2]
 526:Core/Src/main.c ****         TxData[4] = 0;          // Data. "0" off, "1": relay 1 on, "2": relay 2 on, "3": relay 1 an
 288              		.loc 1 526 9 is_stmt 1 view .LVU69
 526:Core/Src/main.c ****         TxData[4] = 0;          // Data. "0" off, "1": relay 1 on, "2": relay 2 on, "3": relay 1 an
 289              		.loc 1 526 19 is_stmt 0 view .LVU70
 290 0036 D370     		strb	r3, [r2, #3]
 527:Core/Src/main.c ****         TxData[5] = 55;         // 55 means relay control
 291              		.loc 1 527 9 is_stmt 1 view .LVU71
 527:Core/Src/main.c ****         TxData[5] = 55;         // 55 means relay control
 292              		.loc 1 527 19 is_stmt 0 view .LVU72
 293 0038 1371     		strb	r3, [r2, #4]
 528:Core/Src/main.c ****         TxData[6] = 0;          // N/A
 294              		.loc 1 528 9 is_stmt 1 view .LVU73
 528:Core/Src/main.c ****         TxData[6] = 0;          // N/A
 295              		.loc 1 528 19 is_stmt 0 view .LVU74
 296 003a 3721     		movs	r1, #55
 297 003c 5171     		strb	r1, [r2, #5]
 529:Core/Src/main.c ****         TxData[7] = 0;          // N/A
 298              		.loc 1 529 9 is_stmt 1 view .LVU75
 529:Core/Src/main.c ****         TxData[7] = 0;          // N/A
 299              		.loc 1 529 19 is_stmt 0 view .LVU76
ARM GAS  /tmp/ccDN7Cpg.s 			page 18


 300 003e 9371     		strb	r3, [r2, #6]
 530:Core/Src/main.c **** 
 301              		.loc 1 530 9 is_stmt 1 view .LVU77
 530:Core/Src/main.c **** 
 302              		.loc 1 530 19 is_stmt 0 view .LVU78
 303 0040 D371     		strb	r3, [r2, #7]
 533:Core/Src/main.c ****         
 304              		.loc 1 533 9 is_stmt 1 view .LVU79
 305 0042 474B     		ldr	r3, .L24+24
 306 0044 4749     		ldr	r1, .L24+28
 307 0046 4848     		ldr	r0, .L24+32
 308 0048 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 309              	.LVL6:
 536:Core/Src/main.c ****       }
 310              		.loc 1 536 9 view .LVU80
 536:Core/Src/main.c ****       }
 311              		.loc 1 536 28 is_stmt 0 view .LVU81
 312 004c 404B     		ldr	r3, .L24+8
 313 004e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 314 0050 414B     		ldr	r3, .L24+16
 315 0052 1A70     		strb	r2, [r3]
 316 0054 E5E7     		b	.L16
 317              	.L14:
 545:Core/Src/main.c **** 
 318              		.loc 1 545 7 is_stmt 1 view .LVU82
 545:Core/Src/main.c **** 
 319              		.loc 1 545 20 is_stmt 0 view .LVU83
 320 0056 3F4A     		ldr	r2, .L24+12
 321 0058 0021     		movs	r1, #0
 322 005a 1160     		str	r1, [r2]
 549:Core/Src/main.c ****       {
 323              		.loc 1 549 7 is_stmt 1 view .LVU84
 549:Core/Src/main.c ****       {
 324              		.loc 1 549 30 is_stmt 0 view .LVU85
 325 005c 3E4A     		ldr	r2, .L24+16
 326 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 549:Core/Src/main.c ****       {
 327              		.loc 1 549 10 view .LVU86
 328 0060 9342     		cmp	r3, r2
 329 0062 1AD1     		bne	.L23
 330              	.L18:
 570:Core/Src/main.c ****       {
 331              		.loc 1 570 4 is_stmt 1 view .LVU87
 570:Core/Src/main.c ****       {
 332              		.loc 1 570 24 is_stmt 0 view .LVU88
 333 0064 414B     		ldr	r3, .L24+36
 334 0066 1868     		ldr	r0, [r3]
 335 0068 FFF7FEFF 		bl	__aeabi_ui2d
 336              	.LVL7:
 337 006c 0446     		mov	r4, r0
 338 006e 0D46     		mov	r5, r1
 570:Core/Src/main.c ****       {
 339              		.loc 1 570 38 view .LVU89
 340 0070 3F4B     		ldr	r3, .L24+40
 341 0072 1868     		ldr	r0, [r3]
 342 0074 FFF7FEFF 		bl	__aeabi_ui2d
 343              	.LVL8:
ARM GAS  /tmp/ccDN7Cpg.s 			page 19


 344 0078 33A3     		adr	r3, .L24
 345 007a D3E90023 		ldrd	r2, [r3]
 346 007e FFF7FEFF 		bl	__aeabi_dmul
 347              	.LVL9:
 348 0082 0246     		mov	r2, r0
 349 0084 0B46     		mov	r3, r1
 570:Core/Src/main.c ****       {
 350              		.loc 1 570 7 view .LVU90
 351 0086 2046     		mov	r0, r4
 352 0088 2946     		mov	r1, r5
 353 008a FFF7FEFF 		bl	__aeabi_dcmpgt
 354              	.LVL10:
 355 008e 0028     		cmp	r0, #0
 356 0090 CAD0     		beq	.L9
 572:Core/Src/main.c ****       }
 357              		.loc 1 572 9 is_stmt 1 view .LVU91
 572:Core/Src/main.c ****       }
 358              		.loc 1 572 24 is_stmt 0 view .LVU92
 359 0092 2F4B     		ldr	r3, .L24+8
 360 0094 0222     		movs	r2, #2
 361 0096 1A70     		strb	r2, [r3]
 362 0098 C6E7     		b	.L9
 363              	.L23:
 553:Core/Src/main.c ****         TxData[1] = 0;            // parameter address. MSB
 364              		.loc 1 553 9 is_stmt 1 view .LVU93
 553:Core/Src/main.c ****         TxData[1] = 0;            // parameter address. MSB
 365              		.loc 1 553 19 is_stmt 0 view .LVU94
 366 009a 304A     		ldr	r2, .L24+20
 367 009c 0121     		movs	r1, #1
 368 009e 1170     		strb	r1, [r2]
 554:Core/Src/main.c ****         TxData[2] = 1;            // Read / Write. 1 is write
 369              		.loc 1 554 9 is_stmt 1 view .LVU95
 554:Core/Src/main.c ****         TxData[2] = 1;            // Read / Write. 1 is write
 370              		.loc 1 554 19 is_stmt 0 view .LVU96
 371 00a0 0023     		movs	r3, #0
 372 00a2 5370     		strb	r3, [r2, #1]
 555:Core/Src/main.c ****         TxData[3] = 0;            // N/A
 373              		.loc 1 555 9 is_stmt 1 view .LVU97
 555:Core/Src/main.c ****         TxData[3] = 0;            // N/A
 374              		.loc 1 555 19 is_stmt 0 view .LVU98
 375 00a4 9170     		strb	r1, [r2, #2]
 556:Core/Src/main.c ****         TxData[4] = 1;            // Data. "0" off, "1": relay 1 on, "2": relay 2 on, "3": relay 1 
 376              		.loc 1 556 9 is_stmt 1 view .LVU99
 556:Core/Src/main.c ****         TxData[4] = 1;            // Data. "0" off, "1": relay 1 on, "2": relay 2 on, "3": relay 1 
 377              		.loc 1 556 19 is_stmt 0 view .LVU100
 378 00a6 D370     		strb	r3, [r2, #3]
 557:Core/Src/main.c ****         TxData[5] = 55;           // 55 means relay control
 379              		.loc 1 557 9 is_stmt 1 view .LVU101
 557:Core/Src/main.c ****         TxData[5] = 55;           // 55 means relay control
 380              		.loc 1 557 19 is_stmt 0 view .LVU102
 381 00a8 1171     		strb	r1, [r2, #4]
 558:Core/Src/main.c ****         TxData[6] = 0;            // N/A
 382              		.loc 1 558 9 is_stmt 1 view .LVU103
 558:Core/Src/main.c ****         TxData[6] = 0;            // N/A
 383              		.loc 1 558 19 is_stmt 0 view .LVU104
 384 00aa 3721     		movs	r1, #55
 385 00ac 5171     		strb	r1, [r2, #5]
ARM GAS  /tmp/ccDN7Cpg.s 			page 20


 559:Core/Src/main.c ****         TxData[7] = 0;            // N/A
 386              		.loc 1 559 9 is_stmt 1 view .LVU105
 559:Core/Src/main.c ****         TxData[7] = 0;            // N/A
 387              		.loc 1 559 19 is_stmt 0 view .LVU106
 388 00ae 9371     		strb	r3, [r2, #6]
 560:Core/Src/main.c **** 
 389              		.loc 1 560 9 is_stmt 1 view .LVU107
 560:Core/Src/main.c **** 
 390              		.loc 1 560 19 is_stmt 0 view .LVU108
 391 00b0 D371     		strb	r3, [r2, #7]
 563:Core/Src/main.c ****         
 392              		.loc 1 563 9 is_stmt 1 view .LVU109
 393 00b2 2B4B     		ldr	r3, .L24+24
 394 00b4 2B49     		ldr	r1, .L24+28
 395 00b6 2C48     		ldr	r0, .L24+32
 396 00b8 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 397              	.LVL11:
 566:Core/Src/main.c ****       }
 398              		.loc 1 566 9 view .LVU110
 566:Core/Src/main.c ****       }
 399              		.loc 1 566 28 is_stmt 0 view .LVU111
 400 00bc 244B     		ldr	r3, .L24+8
 401 00be 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 402 00c0 254B     		ldr	r3, .L24+16
 403 00c2 1A70     		strb	r2, [r3]
 404 00c4 CEE7     		b	.L18
 405              	.L13:
 589:Core/Src/main.c ****       {
 406              		.loc 1 589 7 is_stmt 1 view .LVU112
 589:Core/Src/main.c ****       {
 407              		.loc 1 589 30 is_stmt 0 view .LVU113
 408 00c6 244A     		ldr	r2, .L24+16
 409 00c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 589:Core/Src/main.c ****       {
 410              		.loc 1 589 10 view .LVU114
 411 00ca 9342     		cmp	r3, r2
 412 00cc ACD0     		beq	.L9
 593:Core/Src/main.c ****         TxData[1] = 0; // parameter address. MSB
 413              		.loc 1 593 9 is_stmt 1 view .LVU115
 593:Core/Src/main.c ****         TxData[1] = 0; // parameter address. MSB
 414              		.loc 1 593 19 is_stmt 0 view .LVU116
 415 00ce 234A     		ldr	r2, .L24+20
 416 00d0 0124     		movs	r4, #1
 417 00d2 1470     		strb	r4, [r2]
 594:Core/Src/main.c ****         TxData[2] = 1; // Read / Write. 1 is write
 418              		.loc 1 594 9 is_stmt 1 view .LVU117
 594:Core/Src/main.c ****         TxData[2] = 1; // Read / Write. 1 is write
 419              		.loc 1 594 19 is_stmt 0 view .LVU118
 420 00d4 0023     		movs	r3, #0
 421 00d6 5370     		strb	r3, [r2, #1]
 595:Core/Src/main.c ****         TxData[3] = 0; // N/A
 422              		.loc 1 595 9 is_stmt 1 view .LVU119
 595:Core/Src/main.c ****         TxData[3] = 0; // N/A
 423              		.loc 1 595 19 is_stmt 0 view .LVU120
 424 00d8 9470     		strb	r4, [r2, #2]
 596:Core/Src/main.c ****         TxData[4] = 3; // Data. "0" off, "1": relay 1 on, "2": relay 2 on, "3": relay 1 and 2 on
 425              		.loc 1 596 9 is_stmt 1 view .LVU121
ARM GAS  /tmp/ccDN7Cpg.s 			page 21


 596:Core/Src/main.c ****         TxData[4] = 3; // Data. "0" off, "1": relay 1 on, "2": relay 2 on, "3": relay 1 and 2 on
 426              		.loc 1 596 19 is_stmt 0 view .LVU122
 427 00da D370     		strb	r3, [r2, #3]
 597:Core/Src/main.c ****         TxData[5] = 55; // 55 means relay control
 428              		.loc 1 597 9 is_stmt 1 view .LVU123
 597:Core/Src/main.c ****         TxData[5] = 55; // 55 means relay control
 429              		.loc 1 597 19 is_stmt 0 view .LVU124
 430 00dc 0321     		movs	r1, #3
 431 00de 1171     		strb	r1, [r2, #4]
 598:Core/Src/main.c ****         TxData[6] = 0; // N/A
 432              		.loc 1 598 9 is_stmt 1 view .LVU125
 598:Core/Src/main.c ****         TxData[6] = 0; // N/A
 433              		.loc 1 598 19 is_stmt 0 view .LVU126
 434 00e0 3721     		movs	r1, #55
 435 00e2 5171     		strb	r1, [r2, #5]
 599:Core/Src/main.c ****         TxData[7] = 0; // N/A
 436              		.loc 1 599 9 is_stmt 1 view .LVU127
 599:Core/Src/main.c ****         TxData[7] = 0; // N/A
 437              		.loc 1 599 19 is_stmt 0 view .LVU128
 438 00e4 9371     		strb	r3, [r2, #6]
 600:Core/Src/main.c **** 
 439              		.loc 1 600 9 is_stmt 1 view .LVU129
 600:Core/Src/main.c **** 
 440              		.loc 1 600 19 is_stmt 0 view .LVU130
 441 00e6 D371     		strb	r3, [r2, #7]
 603:Core/Src/main.c **** 
 442              		.loc 1 603 9 is_stmt 1 view .LVU131
 443 00e8 1D4B     		ldr	r3, .L24+24
 444 00ea 1E49     		ldr	r1, .L24+28
 445 00ec 1E48     		ldr	r0, .L24+32
 446 00ee FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 447              	.LVL12:
 606:Core/Src/main.c ****           
 448              		.loc 1 606 9 view .LVU132
 606:Core/Src/main.c ****           
 449              		.loc 1 606 22 is_stmt 0 view .LVU133
 450 00f2 184B     		ldr	r3, .L24+12
 451 00f4 1C60     		str	r4, [r3]
 609:Core/Src/main.c ****       }
 452              		.loc 1 609 9 is_stmt 1 view .LVU134
 609:Core/Src/main.c ****       }
 453              		.loc 1 609 28 is_stmt 0 view .LVU135
 454 00f6 164B     		ldr	r3, .L24+8
 455 00f8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 456 00fa 174B     		ldr	r3, .L24+16
 457 00fc 1A70     		strb	r2, [r3]
 458 00fe 93E7     		b	.L9
 459              	.L11:
 623:Core/Src/main.c **** 
 460              		.loc 1 623 4 is_stmt 1 view .LVU136
 623:Core/Src/main.c **** 
 461              		.loc 1 623 17 is_stmt 0 view .LVU137
 462 0100 144A     		ldr	r2, .L24+12
 463 0102 0021     		movs	r1, #0
 464 0104 1160     		str	r1, [r2]
 625:Core/Src/main.c ****       {
 465              		.loc 1 625 7 is_stmt 1 view .LVU138
ARM GAS  /tmp/ccDN7Cpg.s 			page 22


 625:Core/Src/main.c ****       {
 466              		.loc 1 625 30 is_stmt 0 view .LVU139
 467 0106 144A     		ldr	r2, .L24+16
 468 0108 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 625:Core/Src/main.c ****       {
 469              		.loc 1 625 10 view .LVU140
 470 010a 9342     		cmp	r3, r2
 471 010c 8CD0     		beq	.L9
 628:Core/Src/main.c ****         TxData[1] = 0;            // parameter address. MSB
 472              		.loc 1 628 9 is_stmt 1 view .LVU141
 628:Core/Src/main.c ****         TxData[1] = 0;            // parameter address. MSB
 473              		.loc 1 628 19 is_stmt 0 view .LVU142
 474 010e 134A     		ldr	r2, .L24+20
 475 0110 0121     		movs	r1, #1
 476 0112 1170     		strb	r1, [r2]
 629:Core/Src/main.c ****         TxData[2] = 1;            // Read / Write. 1 is write
 477              		.loc 1 629 9 is_stmt 1 view .LVU143
 629:Core/Src/main.c ****         TxData[2] = 1;            // Read / Write. 1 is write
 478              		.loc 1 629 19 is_stmt 0 view .LVU144
 479 0114 0023     		movs	r3, #0
 480 0116 5370     		strb	r3, [r2, #1]
 630:Core/Src/main.c ****         TxData[3] = 0;            // N/A
 481              		.loc 1 630 9 is_stmt 1 view .LVU145
 630:Core/Src/main.c ****         TxData[3] = 0;            // N/A
 482              		.loc 1 630 19 is_stmt 0 view .LVU146
 483 0118 9170     		strb	r1, [r2, #2]
 631:Core/Src/main.c ****         TxData[4] = 0;            // Data. "0" off, "1": relay 1 on, "2": relay 2 on, "3": relay 1 
 484              		.loc 1 631 9 is_stmt 1 view .LVU147
 631:Core/Src/main.c ****         TxData[4] = 0;            // Data. "0" off, "1": relay 1 on, "2": relay 2 on, "3": relay 1 
 485              		.loc 1 631 19 is_stmt 0 view .LVU148
 486 011a D370     		strb	r3, [r2, #3]
 632:Core/Src/main.c ****         TxData[5] = 55;           // 55 means relay control
 487              		.loc 1 632 9 is_stmt 1 view .LVU149
 632:Core/Src/main.c ****         TxData[5] = 55;           // 55 means relay control
 488              		.loc 1 632 19 is_stmt 0 view .LVU150
 489 011c 1371     		strb	r3, [r2, #4]
 633:Core/Src/main.c ****         TxData[6] = 0;            // N/A
 490              		.loc 1 633 9 is_stmt 1 view .LVU151
 633:Core/Src/main.c ****         TxData[6] = 0;            // N/A
 491              		.loc 1 633 19 is_stmt 0 view .LVU152
 492 011e 3721     		movs	r1, #55
 493 0120 5171     		strb	r1, [r2, #5]
 634:Core/Src/main.c ****         TxData[7] = 0;            // N/A
 494              		.loc 1 634 9 is_stmt 1 view .LVU153
 634:Core/Src/main.c ****         TxData[7] = 0;            // N/A
 495              		.loc 1 634 19 is_stmt 0 view .LVU154
 496 0122 9371     		strb	r3, [r2, #6]
 635:Core/Src/main.c **** 
 497              		.loc 1 635 9 is_stmt 1 view .LVU155
 635:Core/Src/main.c **** 
 498              		.loc 1 635 19 is_stmt 0 view .LVU156
 499 0124 D371     		strb	r3, [r2, #7]
 638:Core/Src/main.c ****         
 500              		.loc 1 638 9 is_stmt 1 view .LVU157
 501 0126 0E4B     		ldr	r3, .L24+24
 502 0128 0E49     		ldr	r1, .L24+28
 503 012a 0F48     		ldr	r0, .L24+32
ARM GAS  /tmp/ccDN7Cpg.s 			page 23


 504 012c FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 505              	.LVL13:
 641:Core/Src/main.c ****       }
 506              		.loc 1 641 9 view .LVU158
 641:Core/Src/main.c ****       }
 507              		.loc 1 641 28 is_stmt 0 view .LVU159
 508 0130 074B     		ldr	r3, .L24+8
 509 0132 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 510 0134 084B     		ldr	r3, .L24+16
 511 0136 1A70     		strb	r2, [r3]
 512 0138 76E7     		b	.L9
 513              	.L10:
 648:Core/Src/main.c **** 		break;
 514              		.loc 1 648 4 is_stmt 1 view .LVU160
 648:Core/Src/main.c **** 		break;
 515              		.loc 1 648 19 is_stmt 0 view .LVU161
 516 013a 054B     		ldr	r3, .L24+8
 517 013c 0322     		movs	r2, #3
 518 013e 1A70     		strb	r2, [r3]
 649:Core/Src/main.c **** 	}
 519              		.loc 1 649 3 is_stmt 1 view .LVU162
 520              		.loc 1 651 1 is_stmt 0 view .LVU163
 521 0140 72E7     		b	.L9
 522              	.L25:
 523 0142 00BFAFF3 		.align	3
 523      0080
 524              	.L24:
 525 0148 66666666 		.word	1717986918
 526 014c 6666EE3F 		.word	1072588390
 527 0150 00000000 		.word	.LANCHOR0
 528 0154 00000000 		.word	.LANCHOR1
 529 0158 00000000 		.word	.LANCHOR2
 530 015c 00000000 		.word	TxData
 531 0160 00000000 		.word	TxMailbox
 532 0164 00000000 		.word	txHeader2
 533 0168 00000000 		.word	hcan1
 534 016c 00000000 		.word	.LANCHOR3
 535 0170 00000000 		.word	.LANCHOR4
 536              		.cfi_endproc
 537              	.LFE225:
 539              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 540              		.align	1
 541              		.global	HAL_TIM_PeriodElapsedCallback
 542              		.syntax unified
 543              		.thumb
 544              		.thumb_func
 545              		.fpu fpv4-sp-d16
 547              	HAL_TIM_PeriodElapsedCallback:
 548              	.LVL14:
 549              	.LFB226:
 652:Core/Src/main.c **** 
 653:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 654:Core/Src/main.c **** {
 550              		.loc 1 654 1 is_stmt 1 view -0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccDN7Cpg.s 			page 24


 554              		.loc 1 654 1 is_stmt 0 view .LVU165
 555 0000 10B5     		push	{r4, lr}
 556              	.LCFI7:
 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 4, -8
 559              		.cfi_offset 14, -4
 560 0002 0446     		mov	r4, r0
 655:Core/Src/main.c ****   // on __Hz interval
 656:Core/Src/main.c ****   if (htim == &htim14)
 561              		.loc 1 656 3 is_stmt 1 view .LVU166
 562              		.loc 1 656 6 is_stmt 0 view .LVU167
 563 0004 124B     		ldr	r3, .L32
 564 0006 9842     		cmp	r0, r3
 565 0008 03D0     		beq	.L30
 566              	.LVL15:
 567              	.L27:
 657:Core/Src/main.c ****   {
 658:Core/Src/main.c ****     // build message for _____
 659:Core/Src/main.c ****     TxData[0] = readyToDrive;               // controled by precharge
 660:Core/Src/main.c ****     TxData[1] = DCDCFault;                  // 0 for now TODO: implement fault detection
 661:Core/Src/main.c ****     TxData[2] = vicoreTemp;                 // DMA update
 662:Core/Src/main.c ****     TxData[3] = rinehartVoltage & 0xFF;     // update on CAN message LSB
 663:Core/Src/main.c ****     TxData[4] = rinehartVoltage >> 8;       // update on CAN message MSB
 664:Core/Src/main.c ****     TxData[5] = bmsVoltage & 0xFF;          // update on CAN message LSB
 665:Core/Src/main.c ****     TxData[6] = bmsVoltage >> 8;            // update on CAN message MSB
 666:Core/Src/main.c ****     TxData[7] = 0x07;
 667:Core/Src/main.c **** 
 668:Core/Src/main.c ****     // send message
 669:Core/Src/main.c ****     HAL_CAN_AddTxMessage(&hcan1, &txHeader1, TxData, &TxMailbox);
 670:Core/Src/main.c ****   }
 671:Core/Src/main.c **** 
 672:Core/Src/main.c ****   // on __Hz interval 
 673:Core/Src/main.c ****   if(htim == &htim13)
 568              		.loc 1 673 3 is_stmt 1 view .LVU168
 569              		.loc 1 673 5 is_stmt 0 view .LVU169
 570 000a 124B     		ldr	r3, .L32+4
 571 000c 9C42     		cmp	r4, r3
 572 000e 1CD0     		beq	.L31
 573              	.L26:
 674:Core/Src/main.c ****   {
 675:Core/Src/main.c ****     // check precharge status
 676:Core/Src/main.c ****     prechargeControl();
 677:Core/Src/main.c ****   }
 678:Core/Src/main.c **** }
 574              		.loc 1 678 1 view .LVU170
 575 0010 10BD     		pop	{r4, pc}
 576              	.LVL16:
 577              	.L30:
 659:Core/Src/main.c ****     TxData[1] = DCDCFault;                  // 0 for now TODO: implement fault detection
 578              		.loc 1 659 5 is_stmt 1 view .LVU171
 659:Core/Src/main.c ****     TxData[1] = DCDCFault;                  // 0 for now TODO: implement fault detection
 579              		.loc 1 659 15 is_stmt 0 view .LVU172
 580 0012 114A     		ldr	r2, .L32+8
 581 0014 114B     		ldr	r3, .L32+12
 582 0016 1B68     		ldr	r3, [r3]
 583 0018 1370     		strb	r3, [r2]
 660:Core/Src/main.c ****     TxData[2] = vicoreTemp;                 // DMA update
ARM GAS  /tmp/ccDN7Cpg.s 			page 25


 584              		.loc 1 660 5 is_stmt 1 view .LVU173
 660:Core/Src/main.c ****     TxData[2] = vicoreTemp;                 // DMA update
 585              		.loc 1 660 15 is_stmt 0 view .LVU174
 586 001a 114B     		ldr	r3, .L32+16
 587 001c 1B68     		ldr	r3, [r3]
 588 001e 5370     		strb	r3, [r2, #1]
 661:Core/Src/main.c ****     TxData[3] = rinehartVoltage & 0xFF;     // update on CAN message LSB
 589              		.loc 1 661 5 is_stmt 1 view .LVU175
 661:Core/Src/main.c ****     TxData[3] = rinehartVoltage & 0xFF;     // update on CAN message LSB
 590              		.loc 1 661 15 is_stmt 0 view .LVU176
 591 0020 104B     		ldr	r3, .L32+20
 592 0022 1B68     		ldr	r3, [r3]
 593 0024 9370     		strb	r3, [r2, #2]
 662:Core/Src/main.c ****     TxData[4] = rinehartVoltage >> 8;       // update on CAN message MSB
 594              		.loc 1 662 5 is_stmt 1 view .LVU177
 662:Core/Src/main.c ****     TxData[4] = rinehartVoltage >> 8;       // update on CAN message MSB
 595              		.loc 1 662 15 is_stmt 0 view .LVU178
 596 0026 104B     		ldr	r3, .L32+24
 597 0028 1B68     		ldr	r3, [r3]
 598 002a D370     		strb	r3, [r2, #3]
 663:Core/Src/main.c ****     TxData[5] = bmsVoltage & 0xFF;          // update on CAN message LSB
 599              		.loc 1 663 5 is_stmt 1 view .LVU179
 663:Core/Src/main.c ****     TxData[5] = bmsVoltage & 0xFF;          // update on CAN message LSB
 600              		.loc 1 663 33 is_stmt 0 view .LVU180
 601 002c 1B0A     		lsrs	r3, r3, #8
 663:Core/Src/main.c ****     TxData[5] = bmsVoltage & 0xFF;          // update on CAN message LSB
 602              		.loc 1 663 15 view .LVU181
 603 002e 1371     		strb	r3, [r2, #4]
 664:Core/Src/main.c ****     TxData[6] = bmsVoltage >> 8;            // update on CAN message MSB
 604              		.loc 1 664 5 is_stmt 1 view .LVU182
 664:Core/Src/main.c ****     TxData[6] = bmsVoltage >> 8;            // update on CAN message MSB
 605              		.loc 1 664 15 is_stmt 0 view .LVU183
 606 0030 0E4B     		ldr	r3, .L32+28
 607 0032 1B68     		ldr	r3, [r3]
 608 0034 5371     		strb	r3, [r2, #5]
 665:Core/Src/main.c ****     TxData[7] = 0x07;
 609              		.loc 1 665 5 is_stmt 1 view .LVU184
 665:Core/Src/main.c ****     TxData[7] = 0x07;
 610              		.loc 1 665 28 is_stmt 0 view .LVU185
 611 0036 1B0A     		lsrs	r3, r3, #8
 665:Core/Src/main.c ****     TxData[7] = 0x07;
 612              		.loc 1 665 15 view .LVU186
 613 0038 9371     		strb	r3, [r2, #6]
 666:Core/Src/main.c **** 
 614              		.loc 1 666 5 is_stmt 1 view .LVU187
 666:Core/Src/main.c **** 
 615              		.loc 1 666 15 is_stmt 0 view .LVU188
 616 003a 0723     		movs	r3, #7
 617 003c D371     		strb	r3, [r2, #7]
 669:Core/Src/main.c ****   }
 618              		.loc 1 669 5 is_stmt 1 view .LVU189
 619 003e 0C4B     		ldr	r3, .L32+32
 620 0040 0C49     		ldr	r1, .L32+36
 621 0042 0D48     		ldr	r0, .L32+40
 622              	.LVL17:
 669:Core/Src/main.c ****   }
 623              		.loc 1 669 5 is_stmt 0 view .LVU190
ARM GAS  /tmp/ccDN7Cpg.s 			page 26


 624 0044 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 625              	.LVL18:
 626 0048 DFE7     		b	.L27
 627              	.L31:
 676:Core/Src/main.c ****   }
 628              		.loc 1 676 5 is_stmt 1 view .LVU191
 629 004a FFF7FEFF 		bl	prechargeControl
 630              	.LVL19:
 631              		.loc 1 678 1 is_stmt 0 view .LVU192
 632 004e DFE7     		b	.L26
 633              	.L33:
 634              		.align	2
 635              	.L32:
 636 0050 00000000 		.word	htim14
 637 0054 00000000 		.word	htim13
 638 0058 00000000 		.word	TxData
 639 005c 00000000 		.word	.LANCHOR1
 640 0060 00000000 		.word	.LANCHOR5
 641 0064 00000000 		.word	.LANCHOR6
 642 0068 00000000 		.word	.LANCHOR3
 643 006c 00000000 		.word	.LANCHOR4
 644 0070 00000000 		.word	TxMailbox
 645 0074 00000000 		.word	txHeader1
 646 0078 00000000 		.word	hcan1
 647              		.cfi_endproc
 648              	.LFE226:
 650              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 651              		.align	1
 652              		.global	HAL_ADC_ConvCpltCallback
 653              		.syntax unified
 654              		.thumb
 655              		.thumb_func
 656              		.fpu fpv4-sp-d16
 658              	HAL_ADC_ConvCpltCallback:
 659              	.LVL20:
 660              	.LFB227:
 679:Core/Src/main.c **** 
 680:Core/Src/main.c **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
 681:Core/Src/main.c **** {
 661              		.loc 1 681 1 is_stmt 1 view -0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		.loc 1 681 1 is_stmt 0 view .LVU194
 666 0000 08B5     		push	{r3, lr}
 667              	.LCFI8:
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 3, -8
 670              		.cfi_offset 14, -4
 682:Core/Src/main.c ****   // TODO: check analog values for the temperature conversion
 683:Core/Src/main.c ****   // Define threshold for when the fan should turn on
 684:Core/Src/main.c **** 
 685:Core/Src/main.c ****   // update vicor temp
 686:Core/Src/main.c ****   vicoreTemp = adc_buf[0];
 671              		.loc 1 686 3 is_stmt 1 view .LVU195
 672              		.loc 1 686 23 is_stmt 0 view .LVU196
 673 0002 094B     		ldr	r3, .L38
ARM GAS  /tmp/ccDN7Cpg.s 			page 27


 674 0004 1B68     		ldr	r3, [r3]
 675              		.loc 1 686 14 view .LVU197
 676 0006 094A     		ldr	r2, .L38+4
 677 0008 1360     		str	r3, [r2]
 687:Core/Src/main.c **** 
 688:Core/Src/main.c ****   // set fan based on value
 689:Core/Src/main.c ****   if (vicoreTemp >= 2048)
 678              		.loc 1 689 3 is_stmt 1 view .LVU198
 679              		.loc 1 689 6 is_stmt 0 view .LVU199
 680 000a B3F5006F 		cmp	r3, #2048
 681 000e 05DB     		blt	.L35
 690:Core/Src/main.c ****   {
 691:Core/Src/main.c ****     // set the fan high
 692:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
 682              		.loc 1 692 5 is_stmt 1 view .LVU200
 683 0010 0122     		movs	r2, #1
 684 0012 1146     		mov	r1, r2
 685 0014 0648     		ldr	r0, .L38+8
 686              	.LVL21:
 687              		.loc 1 692 5 is_stmt 0 view .LVU201
 688 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 689              	.LVL22:
 690              	.L34:
 693:Core/Src/main.c ****   }
 694:Core/Src/main.c **** 
 695:Core/Src/main.c ****   else
 696:Core/Src/main.c ****   {
 697:Core/Src/main.c ****     // set fan low
 698:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
 699:Core/Src/main.c ****   }
 700:Core/Src/main.c **** }
 691              		.loc 1 700 1 view .LVU202
 692 001a 08BD     		pop	{r3, pc}
 693              	.LVL23:
 694              	.L35:
 698:Core/Src/main.c ****   }
 695              		.loc 1 698 5 is_stmt 1 view .LVU203
 696 001c 0022     		movs	r2, #0
 697 001e 0121     		movs	r1, #1
 698 0020 0348     		ldr	r0, .L38+8
 699              	.LVL24:
 698:Core/Src/main.c ****   }
 700              		.loc 1 698 5 is_stmt 0 view .LVU204
 701 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 702              	.LVL25:
 703              		.loc 1 700 1 view .LVU205
 704 0026 F8E7     		b	.L34
 705              	.L39:
 706              		.align	2
 707              	.L38:
 708 0028 00000000 		.word	adc_buf
 709 002c 00000000 		.word	.LANCHOR6
 710 0030 00000240 		.word	1073872896
 711              		.cfi_endproc
 712              	.LFE227:
 714              		.section	.text.Error_Handler,"ax",%progbits
 715              		.align	1
ARM GAS  /tmp/ccDN7Cpg.s 			page 28


 716              		.global	Error_Handler
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 720              		.fpu fpv4-sp-d16
 722              	Error_Handler:
 723              	.LFB228:
 701:Core/Src/main.c **** 
 702:Core/Src/main.c **** /* USER CODE END 4 */
 703:Core/Src/main.c **** 
 704:Core/Src/main.c **** /**
 705:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 706:Core/Src/main.c ****   * @retval None
 707:Core/Src/main.c ****   */
 708:Core/Src/main.c **** void Error_Handler(void)
 709:Core/Src/main.c **** {
 724              		.loc 1 709 1 is_stmt 1 view -0
 725              		.cfi_startproc
 726              		@ Volatile: function does not return.
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 710:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 711:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 712:Core/Src/main.c ****   __disable_irq();
 730              		.loc 1 712 3 view .LVU207
 731              	.LBB7:
 732              	.LBI7:
 733              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  /tmp/ccDN7Cpg.s 			page 29


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccDN7Cpg.s 			page 30


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 734              		.loc 2 140 27 view .LVU208
 735              	.LBB8:
ARM GAS  /tmp/ccDN7Cpg.s 			page 31


 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 736              		.loc 2 142 3 view .LVU209
 737              		.syntax unified
 738              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 739 0000 72B6     		cpsid i
 740              	@ 0 "" 2
 741              		.thumb
 742              		.syntax unified
 743              	.L41:
 744              	.LBE8:
 745              	.LBE7:
 713:Core/Src/main.c ****   while (1)
 746              		.loc 1 713 3 discriminator 1 view .LVU210
 714:Core/Src/main.c ****   {
 715:Core/Src/main.c ****   }
 747              		.loc 1 715 3 discriminator 1 view .LVU211
 713:Core/Src/main.c ****   while (1)
 748              		.loc 1 713 9 discriminator 1 view .LVU212
 749 0002 FEE7     		b	.L41
 750              		.cfi_endproc
 751              	.LFE228:
 753              		.section	.text.MX_CAN1_Init,"ax",%progbits
 754              		.align	1
 755              		.syntax unified
 756              		.thumb
 757              		.thumb_func
 758              		.fpu fpv4-sp-d16
 760              	MX_CAN1_Init:
 761              	.LFB219:
 296:Core/Src/main.c **** 
 762              		.loc 1 296 1 view -0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766 0000 70B5     		push	{r4, r5, r6, lr}
 767              	.LCFI9:
 768              		.cfi_def_cfa_offset 16
 769              		.cfi_offset 4, -16
 770              		.cfi_offset 5, -12
 771              		.cfi_offset 6, -8
 772              		.cfi_offset 14, -4
 303:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 773              		.loc 1 303 3 view .LVU214
 303:Core/Src/main.c ****   hcan1.Init.Prescaler = 18;
 774              		.loc 1 303 18 is_stmt 0 view .LVU215
 775 0002 1D48     		ldr	r0, .L46
 776 0004 1D4B     		ldr	r3, .L46+4
 777 0006 0360     		str	r3, [r0]
 304:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 778              		.loc 1 304 3 is_stmt 1 view .LVU216
 304:Core/Src/main.c ****   hcan1.Init.Mode = CAN_MODE_NORMAL;
 779              		.loc 1 304 24 is_stmt 0 view .LVU217
 780 0008 1223     		movs	r3, #18
 781 000a 4360     		str	r3, [r0, #4]
 305:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 782              		.loc 1 305 3 is_stmt 1 view .LVU218
ARM GAS  /tmp/ccDN7Cpg.s 			page 32


 305:Core/Src/main.c ****   hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 783              		.loc 1 305 19 is_stmt 0 view .LVU219
 784 000c 0023     		movs	r3, #0
 785 000e 8360     		str	r3, [r0, #8]
 306:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 786              		.loc 1 306 3 is_stmt 1 view .LVU220
 306:Core/Src/main.c ****   hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 787              		.loc 1 306 28 is_stmt 0 view .LVU221
 788 0010 C360     		str	r3, [r0, #12]
 307:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 789              		.loc 1 307 3 is_stmt 1 view .LVU222
 307:Core/Src/main.c ****   hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 790              		.loc 1 307 23 is_stmt 0 view .LVU223
 791 0012 4FF40032 		mov	r2, #131072
 792 0016 0261     		str	r2, [r0, #16]
 308:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 793              		.loc 1 308 3 is_stmt 1 view .LVU224
 308:Core/Src/main.c ****   hcan1.Init.TimeTriggeredMode = DISABLE;
 794              		.loc 1 308 23 is_stmt 0 view .LVU225
 795 0018 4361     		str	r3, [r0, #20]
 309:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 796              		.loc 1 309 3 is_stmt 1 view .LVU226
 309:Core/Src/main.c ****   hcan1.Init.AutoBusOff = ENABLE;
 797              		.loc 1 309 32 is_stmt 0 view .LVU227
 798 001a 0376     		strb	r3, [r0, #24]
 310:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 799              		.loc 1 310 3 is_stmt 1 view .LVU228
 310:Core/Src/main.c ****   hcan1.Init.AutoWakeUp = DISABLE;
 800              		.loc 1 310 25 is_stmt 0 view .LVU229
 801 001c 0122     		movs	r2, #1
 802 001e 4276     		strb	r2, [r0, #25]
 311:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 803              		.loc 1 311 3 is_stmt 1 view .LVU230
 311:Core/Src/main.c ****   hcan1.Init.AutoRetransmission = ENABLE;
 804              		.loc 1 311 25 is_stmt 0 view .LVU231
 805 0020 8376     		strb	r3, [r0, #26]
 312:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 806              		.loc 1 312 3 is_stmt 1 view .LVU232
 312:Core/Src/main.c ****   hcan1.Init.ReceiveFifoLocked = DISABLE;
 807              		.loc 1 312 33 is_stmt 0 view .LVU233
 808 0022 C276     		strb	r2, [r0, #27]
 313:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 809              		.loc 1 313 3 is_stmt 1 view .LVU234
 313:Core/Src/main.c ****   hcan1.Init.TransmitFifoPriority = DISABLE;
 810              		.loc 1 313 32 is_stmt 0 view .LVU235
 811 0024 0377     		strb	r3, [r0, #28]
 314:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 812              		.loc 1 314 3 is_stmt 1 view .LVU236
 314:Core/Src/main.c ****   if (HAL_CAN_Init(&hcan1) != HAL_OK)
 813              		.loc 1 314 35 is_stmt 0 view .LVU237
 814 0026 4377     		strb	r3, [r0, #29]
 315:Core/Src/main.c ****   {
 815              		.loc 1 315 3 is_stmt 1 view .LVU238
 315:Core/Src/main.c ****   {
 816              		.loc 1 315 7 is_stmt 0 view .LVU239
 817 0028 FFF7FEFF 		bl	HAL_CAN_Init
 818              	.LVL26:
ARM GAS  /tmp/ccDN7Cpg.s 			page 33


 315:Core/Src/main.c ****   {
 819              		.loc 1 315 6 view .LVU240
 820 002c 08BB     		cbnz	r0, .L45
 322:Core/Src/main.c ****   	canFilter0.FilterIdLow = 0x000;
 821              		.loc 1 322 5 is_stmt 1 view .LVU241
 322:Core/Src/main.c ****   	canFilter0.FilterIdLow = 0x000;
 822              		.loc 1 322 29 is_stmt 0 view .LVU242
 823 002e 1449     		ldr	r1, .L46+8
 824 0030 4FF45643 		mov	r3, #54784
 825 0034 0B60     		str	r3, [r1]
 323:Core/Src/main.c ****     canFilter0.FilterMaskIdHigh = 0x6B0 << 5;
 826              		.loc 1 323 4 is_stmt 1 view .LVU243
 323:Core/Src/main.c ****     canFilter0.FilterMaskIdHigh = 0x6B0 << 5;
 827              		.loc 1 323 27 is_stmt 0 view .LVU244
 828 0036 0024     		movs	r4, #0
 829 0038 4C60     		str	r4, [r1, #4]
 324:Core/Src/main.c ****   	canFilter0.FilterMaskIdLow = 0x000;
 830              		.loc 1 324 5 is_stmt 1 view .LVU245
 324:Core/Src/main.c ****   	canFilter0.FilterMaskIdLow = 0x000;
 831              		.loc 1 324 33 is_stmt 0 view .LVU246
 832 003a 8B60     		str	r3, [r1, #8]
 325:Core/Src/main.c ****     canFilter0.FilterBank = 0;
 833              		.loc 1 325 4 is_stmt 1 view .LVU247
 325:Core/Src/main.c ****     canFilter0.FilterBank = 0;
 834              		.loc 1 325 31 is_stmt 0 view .LVU248
 835 003c CC60     		str	r4, [r1, #12]
 326:Core/Src/main.c ****   	canFilter0.FilterMode = CAN_FILTERMODE_IDMASK;
 836              		.loc 1 326 5 is_stmt 1 view .LVU249
 326:Core/Src/main.c ****   	canFilter0.FilterMode = CAN_FILTERMODE_IDMASK;
 837              		.loc 1 326 27 is_stmt 0 view .LVU250
 838 003e 4C61     		str	r4, [r1, #20]
 327:Core/Src/main.c ****   	canFilter0.FilterFIFOAssignment = CAN_RX_FIFO0;
 839              		.loc 1 327 4 is_stmt 1 view .LVU251
 327:Core/Src/main.c ****   	canFilter0.FilterFIFOAssignment = CAN_RX_FIFO0;
 840              		.loc 1 327 26 is_stmt 0 view .LVU252
 841 0040 8C61     		str	r4, [r1, #24]
 328:Core/Src/main.c ****   	canFilter0.FilterScale = CAN_FILTERSCALE_32BIT;
 842              		.loc 1 328 4 is_stmt 1 view .LVU253
 328:Core/Src/main.c ****   	canFilter0.FilterScale = CAN_FILTERSCALE_32BIT;
 843              		.loc 1 328 36 is_stmt 0 view .LVU254
 844 0042 0C61     		str	r4, [r1, #16]
 329:Core/Src/main.c ****   	canFilter0.FilterActivation = ENABLE;
 845              		.loc 1 329 4 is_stmt 1 view .LVU255
 329:Core/Src/main.c ****   	canFilter0.FilterActivation = ENABLE;
 846              		.loc 1 329 27 is_stmt 0 view .LVU256
 847 0044 0125     		movs	r5, #1
 848 0046 CD61     		str	r5, [r1, #28]
 330:Core/Src/main.c **** 
 849              		.loc 1 330 4 is_stmt 1 view .LVU257
 330:Core/Src/main.c **** 
 850              		.loc 1 330 32 is_stmt 0 view .LVU258
 851 0048 0D62     		str	r5, [r1, #32]
 332:Core/Src/main.c **** 
 852              		.loc 1 332 5 is_stmt 1 view .LVU259
 853 004a 0B4E     		ldr	r6, .L46
 854 004c 3046     		mov	r0, r6
 855 004e FFF7FEFF 		bl	HAL_CAN_ConfigFilter
ARM GAS  /tmp/ccDN7Cpg.s 			page 34


 856              	.LVL27:
 335:Core/Src/main.c ****   	canFilter1.FilterIdLow = 0x000;
 857              		.loc 1 335 5 view .LVU260
 335:Core/Src/main.c ****   	canFilter1.FilterIdLow = 0x000;
 858              		.loc 1 335 29 is_stmt 0 view .LVU261
 859 0052 0C49     		ldr	r1, .L46+12
 860 0054 4FF4A753 		mov	r3, #5344
 861 0058 0B60     		str	r3, [r1]
 336:Core/Src/main.c ****     canFilter1.FilterMaskIdHigh = 0x0A7 << 5;
 862              		.loc 1 336 4 is_stmt 1 view .LVU262
 336:Core/Src/main.c ****     canFilter1.FilterMaskIdHigh = 0x0A7 << 5;
 863              		.loc 1 336 27 is_stmt 0 view .LVU263
 864 005a 4C60     		str	r4, [r1, #4]
 337:Core/Src/main.c ****   	canFilter1.FilterMaskIdLow = 0x000;
 865              		.loc 1 337 5 is_stmt 1 view .LVU264
 337:Core/Src/main.c ****   	canFilter1.FilterMaskIdLow = 0x000;
 866              		.loc 1 337 33 is_stmt 0 view .LVU265
 867 005c 8B60     		str	r3, [r1, #8]
 338:Core/Src/main.c ****     canFilter1.FilterBank = 1;
 868              		.loc 1 338 4 is_stmt 1 view .LVU266
 338:Core/Src/main.c ****     canFilter1.FilterBank = 1;
 869              		.loc 1 338 31 is_stmt 0 view .LVU267
 870 005e CC60     		str	r4, [r1, #12]
 339:Core/Src/main.c ****   	canFilter1.FilterMode = CAN_FILTERMODE_IDMASK;
 871              		.loc 1 339 5 is_stmt 1 view .LVU268
 339:Core/Src/main.c ****   	canFilter1.FilterMode = CAN_FILTERMODE_IDMASK;
 872              		.loc 1 339 27 is_stmt 0 view .LVU269
 873 0060 4D61     		str	r5, [r1, #20]
 340:Core/Src/main.c ****   	canFilter1.FilterFIFOAssignment = CAN_RX_FIFO0;
 874              		.loc 1 340 4 is_stmt 1 view .LVU270
 340:Core/Src/main.c ****   	canFilter1.FilterFIFOAssignment = CAN_RX_FIFO0;
 875              		.loc 1 340 26 is_stmt 0 view .LVU271
 876 0062 8C61     		str	r4, [r1, #24]
 341:Core/Src/main.c ****   	canFilter1.FilterScale = CAN_FILTERSCALE_32BIT;
 877              		.loc 1 341 4 is_stmt 1 view .LVU272
 341:Core/Src/main.c ****   	canFilter1.FilterScale = CAN_FILTERSCALE_32BIT;
 878              		.loc 1 341 36 is_stmt 0 view .LVU273
 879 0064 0C61     		str	r4, [r1, #16]
 342:Core/Src/main.c ****   	canFilter1.FilterActivation = ENABLE;
 880              		.loc 1 342 4 is_stmt 1 view .LVU274
 342:Core/Src/main.c ****   	canFilter1.FilterActivation = ENABLE;
 881              		.loc 1 342 27 is_stmt 0 view .LVU275
 882 0066 CD61     		str	r5, [r1, #28]
 343:Core/Src/main.c **** 
 883              		.loc 1 343 4 is_stmt 1 view .LVU276
 343:Core/Src/main.c **** 
 884              		.loc 1 343 32 is_stmt 0 view .LVU277
 885 0068 0D62     		str	r5, [r1, #32]
 345:Core/Src/main.c **** 
 886              		.loc 1 345 5 is_stmt 1 view .LVU278
 887 006a 3046     		mov	r0, r6
 888 006c FFF7FEFF 		bl	HAL_CAN_ConfigFilter
 889              	.LVL28:
 349:Core/Src/main.c **** 
 890              		.loc 1 349 1 is_stmt 0 view .LVU279
 891 0070 70BD     		pop	{r4, r5, r6, pc}
 892              	.L45:
ARM GAS  /tmp/ccDN7Cpg.s 			page 35


 317:Core/Src/main.c ****   }
 893              		.loc 1 317 5 is_stmt 1 view .LVU280
 894 0072 FFF7FEFF 		bl	Error_Handler
 895              	.LVL29:
 896              	.L47:
 897 0076 00BF     		.align	2
 898              	.L46:
 899 0078 00000000 		.word	hcan1
 900 007c 00640040 		.word	1073767424
 901 0080 00000000 		.word	canFilter0
 902 0084 00000000 		.word	canFilter1
 903              		.cfi_endproc
 904              	.LFE219:
 906              		.section	.text.MX_ADC1_Init,"ax",%progbits
 907              		.align	1
 908              		.syntax unified
 909              		.thumb
 910              		.thumb_func
 911              		.fpu fpv4-sp-d16
 913              	MX_ADC1_Init:
 914              	.LFB218:
 249:Core/Src/main.c **** 
 915              		.loc 1 249 1 view -0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 16
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919 0000 00B5     		push	{lr}
 920              	.LCFI10:
 921              		.cfi_def_cfa_offset 4
 922              		.cfi_offset 14, -4
 923 0002 85B0     		sub	sp, sp, #20
 924              	.LCFI11:
 925              		.cfi_def_cfa_offset 24
 254:Core/Src/main.c **** 
 926              		.loc 1 254 3 view .LVU282
 254:Core/Src/main.c **** 
 927              		.loc 1 254 26 is_stmt 0 view .LVU283
 928 0004 0023     		movs	r3, #0
 929 0006 0093     		str	r3, [sp]
 930 0008 0193     		str	r3, [sp, #4]
 931 000a 0293     		str	r3, [sp, #8]
 932 000c 0393     		str	r3, [sp, #12]
 260:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 933              		.loc 1 260 3 is_stmt 1 view .LVU284
 260:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 934              		.loc 1 260 18 is_stmt 0 view .LVU285
 935 000e 1448     		ldr	r0, .L54
 936 0010 144A     		ldr	r2, .L54+4
 937 0012 0260     		str	r2, [r0]
 261:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 938              		.loc 1 261 3 is_stmt 1 view .LVU286
 261:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 939              		.loc 1 261 29 is_stmt 0 view .LVU287
 940 0014 4FF48032 		mov	r2, #65536
 941 0018 4260     		str	r2, [r0, #4]
 262:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 942              		.loc 1 262 3 is_stmt 1 view .LVU288
ARM GAS  /tmp/ccDN7Cpg.s 			page 36


 262:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 943              		.loc 1 262 25 is_stmt 0 view .LVU289
 944 001a 8360     		str	r3, [r0, #8]
 263:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 945              		.loc 1 263 3 is_stmt 1 view .LVU290
 263:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 946              		.loc 1 263 27 is_stmt 0 view .LVU291
 947 001c 0361     		str	r3, [r0, #16]
 264:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 948              		.loc 1 264 3 is_stmt 1 view .LVU292
 264:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 949              		.loc 1 264 33 is_stmt 0 view .LVU293
 950 001e 0122     		movs	r2, #1
 951 0020 0276     		strb	r2, [r0, #24]
 265:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 952              		.loc 1 265 3 is_stmt 1 view .LVU294
 265:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 953              		.loc 1 265 36 is_stmt 0 view .LVU295
 954 0022 80F82030 		strb	r3, [r0, #32]
 266:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 955              		.loc 1 266 3 is_stmt 1 view .LVU296
 266:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 956              		.loc 1 266 35 is_stmt 0 view .LVU297
 957 0026 C362     		str	r3, [r0, #44]
 267:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 958              		.loc 1 267 3 is_stmt 1 view .LVU298
 267:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 959              		.loc 1 267 31 is_stmt 0 view .LVU299
 960 0028 0F49     		ldr	r1, .L54+8
 961 002a 8162     		str	r1, [r0, #40]
 268:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 962              		.loc 1 268 3 is_stmt 1 view .LVU300
 268:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 963              		.loc 1 268 24 is_stmt 0 view .LVU301
 964 002c C360     		str	r3, [r0, #12]
 269:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 965              		.loc 1 269 3 is_stmt 1 view .LVU302
 269:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = ENABLE;
 966              		.loc 1 269 30 is_stmt 0 view .LVU303
 967 002e C261     		str	r2, [r0, #28]
 270:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 968              		.loc 1 270 3 is_stmt 1 view .LVU304
 270:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 969              		.loc 1 270 36 is_stmt 0 view .LVU305
 970 0030 80F83020 		strb	r2, [r0, #48]
 271:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 971              		.loc 1 271 3 is_stmt 1 view .LVU306
 271:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 972              		.loc 1 271 27 is_stmt 0 view .LVU307
 973 0034 4261     		str	r2, [r0, #20]
 272:Core/Src/main.c ****   {
 974              		.loc 1 272 3 is_stmt 1 view .LVU308
 272:Core/Src/main.c ****   {
 975              		.loc 1 272 7 is_stmt 0 view .LVU309
 976 0036 FFF7FEFF 		bl	HAL_ADC_Init
 977              	.LVL30:
 272:Core/Src/main.c ****   {
ARM GAS  /tmp/ccDN7Cpg.s 			page 37


 978              		.loc 1 272 6 view .LVU310
 979 003a 68B9     		cbnz	r0, .L52
 278:Core/Src/main.c ****   sConfig.Rank = 1;
 980              		.loc 1 278 3 is_stmt 1 view .LVU311
 278:Core/Src/main.c ****   sConfig.Rank = 1;
 981              		.loc 1 278 19 is_stmt 0 view .LVU312
 982 003c 0723     		movs	r3, #7
 983 003e 0093     		str	r3, [sp]
 279:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 984              		.loc 1 279 3 is_stmt 1 view .LVU313
 279:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 985              		.loc 1 279 16 is_stmt 0 view .LVU314
 986 0040 0123     		movs	r3, #1
 987 0042 0193     		str	r3, [sp, #4]
 280:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 988              		.loc 1 280 3 is_stmt 1 view .LVU315
 280:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 989              		.loc 1 280 24 is_stmt 0 view .LVU316
 990 0044 0023     		movs	r3, #0
 991 0046 0293     		str	r3, [sp, #8]
 281:Core/Src/main.c ****   {
 992              		.loc 1 281 3 is_stmt 1 view .LVU317
 281:Core/Src/main.c ****   {
 993              		.loc 1 281 7 is_stmt 0 view .LVU318
 994 0048 6946     		mov	r1, sp
 995 004a 0548     		ldr	r0, .L54
 996 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 997              	.LVL31:
 281:Core/Src/main.c ****   {
 998              		.loc 1 281 6 view .LVU319
 999 0050 20B9     		cbnz	r0, .L53
 288:Core/Src/main.c **** 
 1000              		.loc 1 288 1 view .LVU320
 1001 0052 05B0     		add	sp, sp, #20
 1002              	.LCFI12:
 1003              		.cfi_remember_state
 1004              		.cfi_def_cfa_offset 4
 1005              		@ sp needed
 1006 0054 5DF804FB 		ldr	pc, [sp], #4
 1007              	.L52:
 1008              	.LCFI13:
 1009              		.cfi_restore_state
 274:Core/Src/main.c ****   }
 1010              		.loc 1 274 5 is_stmt 1 view .LVU321
 1011 0058 FFF7FEFF 		bl	Error_Handler
 1012              	.LVL32:
 1013              	.L53:
 283:Core/Src/main.c ****   }
 1014              		.loc 1 283 5 view .LVU322
 1015 005c FFF7FEFF 		bl	Error_Handler
 1016              	.LVL33:
 1017              	.L55:
 1018              		.align	2
 1019              	.L54:
 1020 0060 00000000 		.word	hadc1
 1021 0064 00200140 		.word	1073815552
 1022 0068 0100000F 		.word	251658241
ARM GAS  /tmp/ccDN7Cpg.s 			page 38


 1023              		.cfi_endproc
 1024              	.LFE218:
 1026              		.section	.text.MX_TIM14_Init,"ax",%progbits
 1027              		.align	1
 1028              		.syntax unified
 1029              		.thumb
 1030              		.thumb_func
 1031              		.fpu fpv4-sp-d16
 1033              	MX_TIM14_Init:
 1034              	.LFB221:
 388:Core/Src/main.c **** 
 1035              		.loc 1 388 1 view -0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 0
 1038              		@ frame_needed = 0, uses_anonymous_args = 0
 1039 0000 08B5     		push	{r3, lr}
 1040              	.LCFI14:
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 3, -8
 1043              		.cfi_offset 14, -4
 397:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 1044              		.loc 1 397 3 view .LVU324
 397:Core/Src/main.c ****   htim14.Init.Prescaler = 9000-1;
 1045              		.loc 1 397 19 is_stmt 0 view .LVU325
 1046 0002 0948     		ldr	r0, .L60
 1047 0004 094B     		ldr	r3, .L60+4
 1048 0006 0360     		str	r3, [r0]
 398:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 1049              		.loc 1 398 3 is_stmt 1 view .LVU326
 398:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 1050              		.loc 1 398 25 is_stmt 0 view .LVU327
 1051 0008 42F22733 		movw	r3, #8999
 1052 000c 4360     		str	r3, [r0, #4]
 399:Core/Src/main.c ****   htim14.Init.Period = 500-1;
 1053              		.loc 1 399 3 is_stmt 1 view .LVU328
 399:Core/Src/main.c ****   htim14.Init.Period = 500-1;
 1054              		.loc 1 399 27 is_stmt 0 view .LVU329
 1055 000e 0023     		movs	r3, #0
 1056 0010 8360     		str	r3, [r0, #8]
 400:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1057              		.loc 1 400 3 is_stmt 1 view .LVU330
 400:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1058              		.loc 1 400 22 is_stmt 0 view .LVU331
 1059 0012 40F2F312 		movw	r2, #499
 1060 0016 C260     		str	r2, [r0, #12]
 401:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1061              		.loc 1 401 3 is_stmt 1 view .LVU332
 401:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1062              		.loc 1 401 29 is_stmt 0 view .LVU333
 1063 0018 0361     		str	r3, [r0, #16]
 402:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 1064              		.loc 1 402 3 is_stmt 1 view .LVU334
 402:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 1065              		.loc 1 402 33 is_stmt 0 view .LVU335
 1066 001a 8361     		str	r3, [r0, #24]
 403:Core/Src/main.c ****   {
 1067              		.loc 1 403 3 is_stmt 1 view .LVU336
ARM GAS  /tmp/ccDN7Cpg.s 			page 39


 403:Core/Src/main.c ****   {
 1068              		.loc 1 403 7 is_stmt 0 view .LVU337
 1069 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1070              	.LVL34:
 403:Core/Src/main.c ****   {
 1071              		.loc 1 403 6 view .LVU338
 1072 0020 00B9     		cbnz	r0, .L59
 411:Core/Src/main.c **** 
 1073              		.loc 1 411 1 view .LVU339
 1074 0022 08BD     		pop	{r3, pc}
 1075              	.L59:
 405:Core/Src/main.c ****   }
 1076              		.loc 1 405 5 is_stmt 1 view .LVU340
 1077 0024 FFF7FEFF 		bl	Error_Handler
 1078              	.LVL35:
 1079              	.L61:
 1080              		.align	2
 1081              	.L60:
 1082 0028 00000000 		.word	htim14
 1083 002c 00200040 		.word	1073750016
 1084              		.cfi_endproc
 1085              	.LFE221:
 1087              		.section	.text.MX_TIM13_Init,"ax",%progbits
 1088              		.align	1
 1089              		.syntax unified
 1090              		.thumb
 1091              		.thumb_func
 1092              		.fpu fpv4-sp-d16
 1094              	MX_TIM13_Init:
 1095              	.LFB220:
 357:Core/Src/main.c **** 
 1096              		.loc 1 357 1 view -0
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 0
 1099              		@ frame_needed = 0, uses_anonymous_args = 0
 1100 0000 08B5     		push	{r3, lr}
 1101              	.LCFI15:
 1102              		.cfi_def_cfa_offset 8
 1103              		.cfi_offset 3, -8
 1104              		.cfi_offset 14, -4
 366:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 1105              		.loc 1 366 3 view .LVU342
 366:Core/Src/main.c ****   htim13.Init.Prescaler = 9000-1;
 1106              		.loc 1 366 19 is_stmt 0 view .LVU343
 1107 0002 0948     		ldr	r0, .L66
 1108 0004 094B     		ldr	r3, .L66+4
 1109 0006 0360     		str	r3, [r0]
 367:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 1110              		.loc 1 367 3 is_stmt 1 view .LVU344
 367:Core/Src/main.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 1111              		.loc 1 367 25 is_stmt 0 view .LVU345
 1112 0008 42F22733 		movw	r3, #8999
 1113 000c 4360     		str	r3, [r0, #4]
 368:Core/Src/main.c ****   htim13.Init.Period = 1000-1;
 1114              		.loc 1 368 3 is_stmt 1 view .LVU346
 368:Core/Src/main.c ****   htim13.Init.Period = 1000-1;
 1115              		.loc 1 368 27 is_stmt 0 view .LVU347
ARM GAS  /tmp/ccDN7Cpg.s 			page 40


 1116 000e 0023     		movs	r3, #0
 1117 0010 8360     		str	r3, [r0, #8]
 369:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1118              		.loc 1 369 3 is_stmt 1 view .LVU348
 369:Core/Src/main.c ****   htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1119              		.loc 1 369 22 is_stmt 0 view .LVU349
 1120 0012 40F2E732 		movw	r2, #999
 1121 0016 C260     		str	r2, [r0, #12]
 370:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1122              		.loc 1 370 3 is_stmt 1 view .LVU350
 370:Core/Src/main.c ****   htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1123              		.loc 1 370 29 is_stmt 0 view .LVU351
 1124 0018 0361     		str	r3, [r0, #16]
 371:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 1125              		.loc 1 371 3 is_stmt 1 view .LVU352
 371:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 1126              		.loc 1 371 33 is_stmt 0 view .LVU353
 1127 001a 8361     		str	r3, [r0, #24]
 372:Core/Src/main.c ****   {
 1128              		.loc 1 372 3 is_stmt 1 view .LVU354
 372:Core/Src/main.c ****   {
 1129              		.loc 1 372 7 is_stmt 0 view .LVU355
 1130 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 1131              	.LVL36:
 372:Core/Src/main.c ****   {
 1132              		.loc 1 372 6 view .LVU356
 1133 0020 00B9     		cbnz	r0, .L65
 380:Core/Src/main.c **** 
 1134              		.loc 1 380 1 view .LVU357
 1135 0022 08BD     		pop	{r3, pc}
 1136              	.L65:
 374:Core/Src/main.c ****   }
 1137              		.loc 1 374 5 is_stmt 1 view .LVU358
 1138 0024 FFF7FEFF 		bl	Error_Handler
 1139              	.LVL37:
 1140              	.L67:
 1141              		.align	2
 1142              	.L66:
 1143 0028 00000000 		.word	htim13
 1144 002c 001C0040 		.word	1073748992
 1145              		.cfi_endproc
 1146              	.LFE220:
 1148              		.section	.text.SystemClock_Config,"ax",%progbits
 1149              		.align	1
 1150              		.global	SystemClock_Config
 1151              		.syntax unified
 1152              		.thumb
 1153              		.thumb_func
 1154              		.fpu fpv4-sp-d16
 1156              	SystemClock_Config:
 1157              	.LFB217:
 203:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1158              		.loc 1 203 1 view -0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 80
 1161              		@ frame_needed = 0, uses_anonymous_args = 0
 1162 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccDN7Cpg.s 			page 41


 1163              	.LCFI16:
 1164              		.cfi_def_cfa_offset 4
 1165              		.cfi_offset 14, -4
 1166 0002 95B0     		sub	sp, sp, #84
 1167              	.LCFI17:
 1168              		.cfi_def_cfa_offset 88
 204:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1169              		.loc 1 204 3 view .LVU360
 204:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1170              		.loc 1 204 22 is_stmt 0 view .LVU361
 1171 0004 3422     		movs	r2, #52
 1172 0006 0021     		movs	r1, #0
 1173 0008 07A8     		add	r0, sp, #28
 1174 000a FFF7FEFF 		bl	memset
 1175              	.LVL38:
 205:Core/Src/main.c **** 
 1176              		.loc 1 205 3 is_stmt 1 view .LVU362
 205:Core/Src/main.c **** 
 1177              		.loc 1 205 22 is_stmt 0 view .LVU363
 1178 000e 0023     		movs	r3, #0
 1179 0010 0293     		str	r3, [sp, #8]
 1180 0012 0393     		str	r3, [sp, #12]
 1181 0014 0493     		str	r3, [sp, #16]
 1182 0016 0593     		str	r3, [sp, #20]
 1183 0018 0693     		str	r3, [sp, #24]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1184              		.loc 1 209 3 is_stmt 1 view .LVU364
 1185              	.LBB9:
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1186              		.loc 1 209 3 view .LVU365
 1187 001a 0093     		str	r3, [sp]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1188              		.loc 1 209 3 view .LVU366
 1189 001c 1E4A     		ldr	r2, .L74
 1190 001e 116C     		ldr	r1, [r2, #64]
 1191 0020 41F08051 		orr	r1, r1, #268435456
 1192 0024 1164     		str	r1, [r2, #64]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1193              		.loc 1 209 3 view .LVU367
 1194 0026 126C     		ldr	r2, [r2, #64]
 1195 0028 02F08052 		and	r2, r2, #268435456
 1196 002c 0092     		str	r2, [sp]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1197              		.loc 1 209 3 view .LVU368
 1198 002e 009A     		ldr	r2, [sp]
 1199              	.LBE9:
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1200              		.loc 1 209 3 view .LVU369
 210:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1201              		.loc 1 210 3 view .LVU370
 1202              	.LBB10:
 210:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1203              		.loc 1 210 3 view .LVU371
 1204 0030 0193     		str	r3, [sp, #4]
 210:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1205              		.loc 1 210 3 view .LVU372
 1206 0032 1A4A     		ldr	r2, .L74+4
ARM GAS  /tmp/ccDN7Cpg.s 			page 42


 1207 0034 1168     		ldr	r1, [r2]
 1208 0036 41F44041 		orr	r1, r1, #49152
 1209 003a 1160     		str	r1, [r2]
 210:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1210              		.loc 1 210 3 view .LVU373
 1211 003c 1268     		ldr	r2, [r2]
 1212 003e 02F44042 		and	r2, r2, #49152
 1213 0042 0192     		str	r2, [sp, #4]
 210:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1214              		.loc 1 210 3 view .LVU374
 1215 0044 019A     		ldr	r2, [sp, #4]
 1216              	.LBE10:
 210:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 1217              		.loc 1 210 3 view .LVU375
 214:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1218              		.loc 1 214 3 view .LVU376
 214:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1219              		.loc 1 214 36 is_stmt 0 view .LVU377
 1220 0046 0222     		movs	r2, #2
 1221 0048 0792     		str	r2, [sp, #28]
 215:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1222              		.loc 1 215 3 is_stmt 1 view .LVU378
 215:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1223              		.loc 1 215 30 is_stmt 0 view .LVU379
 1224 004a 0121     		movs	r1, #1
 1225 004c 0A91     		str	r1, [sp, #40]
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1226              		.loc 1 216 3 is_stmt 1 view .LVU380
 216:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1227              		.loc 1 216 41 is_stmt 0 view .LVU381
 1228 004e 1021     		movs	r1, #16
 1229 0050 0B91     		str	r1, [sp, #44]
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1230              		.loc 1 217 3 is_stmt 1 view .LVU382
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1231              		.loc 1 217 34 is_stmt 0 view .LVU383
 1232 0052 0D92     		str	r2, [sp, #52]
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1233              		.loc 1 218 3 is_stmt 1 view .LVU384
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1234              		.loc 1 218 35 is_stmt 0 view .LVU385
 1235 0054 0E93     		str	r3, [sp, #56]
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 1236              		.loc 1 219 3 is_stmt 1 view .LVU386
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 90;
 1237              		.loc 1 219 30 is_stmt 0 view .LVU387
 1238 0056 0823     		movs	r3, #8
 1239 0058 0F93     		str	r3, [sp, #60]
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1240              		.loc 1 220 3 is_stmt 1 view .LVU388
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1241              		.loc 1 220 30 is_stmt 0 view .LVU389
 1242 005a 5A23     		movs	r3, #90
 1243 005c 1093     		str	r3, [sp, #64]
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 1244              		.loc 1 221 3 is_stmt 1 view .LVU390
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
ARM GAS  /tmp/ccDN7Cpg.s 			page 43


 1245              		.loc 1 221 30 is_stmt 0 view .LVU391
 1246 005e 1192     		str	r2, [sp, #68]
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1247              		.loc 1 222 3 is_stmt 1 view .LVU392
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 1248              		.loc 1 222 30 is_stmt 0 view .LVU393
 1249 0060 1292     		str	r2, [sp, #72]
 223:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1250              		.loc 1 223 3 is_stmt 1 view .LVU394
 223:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1251              		.loc 1 223 30 is_stmt 0 view .LVU395
 1252 0062 1392     		str	r2, [sp, #76]
 224:Core/Src/main.c ****   {
 1253              		.loc 1 224 3 is_stmt 1 view .LVU396
 224:Core/Src/main.c ****   {
 1254              		.loc 1 224 7 is_stmt 0 view .LVU397
 1255 0064 07A8     		add	r0, sp, #28
 1256 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1257              	.LVL39:
 224:Core/Src/main.c ****   {
 1258              		.loc 1 224 6 view .LVU398
 1259 006a 88B9     		cbnz	r0, .L72
 230:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1260              		.loc 1 230 3 is_stmt 1 view .LVU399
 230:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1261              		.loc 1 230 31 is_stmt 0 view .LVU400
 1262 006c 0F23     		movs	r3, #15
 1263 006e 0293     		str	r3, [sp, #8]
 232:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1264              		.loc 1 232 3 is_stmt 1 view .LVU401
 232:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1265              		.loc 1 232 34 is_stmt 0 view .LVU402
 1266 0070 0223     		movs	r3, #2
 1267 0072 0393     		str	r3, [sp, #12]
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1268              		.loc 1 233 3 is_stmt 1 view .LVU403
 233:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1269              		.loc 1 233 35 is_stmt 0 view .LVU404
 1270 0074 0023     		movs	r3, #0
 1271 0076 0493     		str	r3, [sp, #16]
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1272              		.loc 1 234 3 is_stmt 1 view .LVU405
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1273              		.loc 1 234 36 is_stmt 0 view .LVU406
 1274 0078 4FF48052 		mov	r2, #4096
 1275 007c 0592     		str	r2, [sp, #20]
 235:Core/Src/main.c **** 
 1276              		.loc 1 235 3 is_stmt 1 view .LVU407
 235:Core/Src/main.c **** 
 1277              		.loc 1 235 36 is_stmt 0 view .LVU408
 1278 007e 0693     		str	r3, [sp, #24]
 237:Core/Src/main.c ****   {
 1279              		.loc 1 237 3 is_stmt 1 view .LVU409
 237:Core/Src/main.c ****   {
 1280              		.loc 1 237 7 is_stmt 0 view .LVU410
 1281 0080 0321     		movs	r1, #3
 1282 0082 02A8     		add	r0, sp, #8
ARM GAS  /tmp/ccDN7Cpg.s 			page 44


 1283 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1284              	.LVL40:
 237:Core/Src/main.c ****   {
 1285              		.loc 1 237 6 view .LVU411
 1286 0088 20B9     		cbnz	r0, .L73
 241:Core/Src/main.c **** 
 1287              		.loc 1 241 1 view .LVU412
 1288 008a 15B0     		add	sp, sp, #84
 1289              	.LCFI18:
 1290              		.cfi_remember_state
 1291              		.cfi_def_cfa_offset 4
 1292              		@ sp needed
 1293 008c 5DF804FB 		ldr	pc, [sp], #4
 1294              	.L72:
 1295              	.LCFI19:
 1296              		.cfi_restore_state
 226:Core/Src/main.c ****   }
 1297              		.loc 1 226 5 is_stmt 1 view .LVU413
 1298 0090 FFF7FEFF 		bl	Error_Handler
 1299              	.LVL41:
 1300              	.L73:
 239:Core/Src/main.c ****   }
 1301              		.loc 1 239 5 view .LVU414
 1302 0094 FFF7FEFF 		bl	Error_Handler
 1303              	.LVL42:
 1304              	.L75:
 1305              		.align	2
 1306              	.L74:
 1307 0098 00380240 		.word	1073887232
 1308 009c 00700040 		.word	1073770496
 1309              		.cfi_endproc
 1310              	.LFE217:
 1312              		.section	.text.main,"ax",%progbits
 1313              		.align	1
 1314              		.global	main
 1315              		.syntax unified
 1316              		.thumb
 1317              		.thumb_func
 1318              		.fpu fpv4-sp-d16
 1320              	main:
 1321              	.LFB216:
 123:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1322              		.loc 1 123 1 view -0
 1323              		.cfi_startproc
 1324              		@ Volatile: function does not return.
 1325              		@ args = 0, pretend = 0, frame = 0
 1326              		@ frame_needed = 0, uses_anonymous_args = 0
 1327 0000 08B5     		push	{r3, lr}
 1328              	.LCFI20:
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 3, -8
 1331              		.cfi_offset 14, -4
 131:Core/Src/main.c **** 
 1332              		.loc 1 131 3 view .LVU416
 1333 0002 FFF7FEFF 		bl	HAL_Init
 1334              	.LVL43:
 137:Core/Src/main.c **** 
ARM GAS  /tmp/ccDN7Cpg.s 			page 45


 1335              		.loc 1 137 3 view .LVU417
 1336 0006 FFF7FEFF 		bl	SystemClock_Config
 1337              	.LVL44:
 143:Core/Src/main.c ****   MX_CAN1_Init();
 1338              		.loc 1 143 3 view .LVU418
 1339 000a FFF7FEFF 		bl	MX_GPIO_Init
 1340              	.LVL45:
 144:Core/Src/main.c ****   MX_DMA_Init();
 1341              		.loc 1 144 3 view .LVU419
 1342 000e FFF7FEFF 		bl	MX_CAN1_Init
 1343              	.LVL46:
 145:Core/Src/main.c ****   MX_ADC1_Init();
 1344              		.loc 1 145 3 view .LVU420
 1345 0012 FFF7FEFF 		bl	MX_DMA_Init
 1346              	.LVL47:
 146:Core/Src/main.c ****   MX_TIM14_Init();
 1347              		.loc 1 146 3 view .LVU421
 1348 0016 FFF7FEFF 		bl	MX_ADC1_Init
 1349              	.LVL48:
 147:Core/Src/main.c ****   MX_TIM13_Init();
 1350              		.loc 1 147 3 view .LVU422
 1351 001a FFF7FEFF 		bl	MX_TIM14_Init
 1352              	.LVL49:
 148:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1353              		.loc 1 148 3 view .LVU423
 1354 001e FFF7FEFF 		bl	MX_TIM13_Init
 1355              	.LVL50:
 152:Core/Src/main.c ****   txHeader0.IDE = CAN_ID_STD;
 1356              		.loc 1 152 3 view .LVU424
 152:Core/Src/main.c ****   txHeader0.IDE = CAN_ID_STD;
 1357              		.loc 1 152 17 is_stmt 0 view .LVU425
 1358 0022 174A     		ldr	r2, .L79
 1359 0024 0821     		movs	r1, #8
 1360 0026 1161     		str	r1, [r2, #16]
 153:Core/Src/main.c ****   txHeader0.RTR = CAN_RTR_DATA;
 1361              		.loc 1 153 3 is_stmt 1 view .LVU426
 153:Core/Src/main.c ****   txHeader0.RTR = CAN_RTR_DATA;
 1362              		.loc 1 153 17 is_stmt 0 view .LVU427
 1363 0028 0023     		movs	r3, #0
 1364 002a 9360     		str	r3, [r2, #8]
 154:Core/Src/main.c ****   txHeader0.StdId = 0x086;
 1365              		.loc 1 154 3 is_stmt 1 view .LVU428
 154:Core/Src/main.c ****   txHeader0.StdId = 0x086;
 1366              		.loc 1 154 17 is_stmt 0 view .LVU429
 1367 002c D360     		str	r3, [r2, #12]
 155:Core/Src/main.c ****   txHeader0.ExtId = 0;
 1368              		.loc 1 155 3 is_stmt 1 view .LVU430
 155:Core/Src/main.c ****   txHeader0.ExtId = 0;
 1369              		.loc 1 155 19 is_stmt 0 view .LVU431
 1370 002e 8620     		movs	r0, #134
 1371 0030 1060     		str	r0, [r2]
 156:Core/Src/main.c ****   txHeader0.TransmitGlobalTime = DISABLE;
 1372              		.loc 1 156 3 is_stmt 1 view .LVU432
 156:Core/Src/main.c ****   txHeader0.TransmitGlobalTime = DISABLE;
 1373              		.loc 1 156 19 is_stmt 0 view .LVU433
 1374 0032 5360     		str	r3, [r2, #4]
 157:Core/Src/main.c **** 
ARM GAS  /tmp/ccDN7Cpg.s 			page 46


 1375              		.loc 1 157 3 is_stmt 1 view .LVU434
 157:Core/Src/main.c **** 
 1376              		.loc 1 157 32 is_stmt 0 view .LVU435
 1377 0034 1375     		strb	r3, [r2, #20]
 160:Core/Src/main.c ****   txHeader1.IDE = CAN_ID_STD;
 1378              		.loc 1 160 3 is_stmt 1 view .LVU436
 160:Core/Src/main.c ****   txHeader1.IDE = CAN_ID_STD;
 1379              		.loc 1 160 17 is_stmt 0 view .LVU437
 1380 0036 134A     		ldr	r2, .L79+4
 1381 0038 1161     		str	r1, [r2, #16]
 161:Core/Src/main.c ****   txHeader1.RTR = CAN_RTR_DATA;
 1382              		.loc 1 161 3 is_stmt 1 view .LVU438
 161:Core/Src/main.c ****   txHeader1.RTR = CAN_RTR_DATA;
 1383              		.loc 1 161 17 is_stmt 0 view .LVU439
 1384 003a 9360     		str	r3, [r2, #8]
 162:Core/Src/main.c ****   txHeader1.StdId = 0x087;
 1385              		.loc 1 162 3 is_stmt 1 view .LVU440
 162:Core/Src/main.c ****   txHeader1.StdId = 0x087;
 1386              		.loc 1 162 17 is_stmt 0 view .LVU441
 1387 003c D360     		str	r3, [r2, #12]
 163:Core/Src/main.c ****   txHeader1.ExtId = 0;
 1388              		.loc 1 163 3 is_stmt 1 view .LVU442
 163:Core/Src/main.c ****   txHeader1.ExtId = 0;
 1389              		.loc 1 163 19 is_stmt 0 view .LVU443
 1390 003e 8720     		movs	r0, #135
 1391 0040 1060     		str	r0, [r2]
 164:Core/Src/main.c ****   txHeader1.TransmitGlobalTime = DISABLE;
 1392              		.loc 1 164 3 is_stmt 1 view .LVU444
 164:Core/Src/main.c ****   txHeader1.TransmitGlobalTime = DISABLE;
 1393              		.loc 1 164 19 is_stmt 0 view .LVU445
 1394 0042 5360     		str	r3, [r2, #4]
 165:Core/Src/main.c **** 
 1395              		.loc 1 165 3 is_stmt 1 view .LVU446
 165:Core/Src/main.c **** 
 1396              		.loc 1 165 32 is_stmt 0 view .LVU447
 1397 0044 1375     		strb	r3, [r2, #20]
 168:Core/Src/main.c ****   txHeader2.IDE = CAN_ID_STD;
 1398              		.loc 1 168 3 is_stmt 1 view .LVU448
 168:Core/Src/main.c ****   txHeader2.IDE = CAN_ID_STD;
 1399              		.loc 1 168 17 is_stmt 0 view .LVU449
 1400 0046 104A     		ldr	r2, .L79+8
 1401 0048 1161     		str	r1, [r2, #16]
 169:Core/Src/main.c ****   txHeader2.RTR = CAN_RTR_DATA;
 1402              		.loc 1 169 3 is_stmt 1 view .LVU450
 169:Core/Src/main.c ****   txHeader2.RTR = CAN_RTR_DATA;
 1403              		.loc 1 169 17 is_stmt 0 view .LVU451
 1404 004a 9360     		str	r3, [r2, #8]
 170:Core/Src/main.c ****   txHeader2.StdId = 0x0C1;
 1405              		.loc 1 170 3 is_stmt 1 view .LVU452
 170:Core/Src/main.c ****   txHeader2.StdId = 0x0C1;
 1406              		.loc 1 170 17 is_stmt 0 view .LVU453
 1407 004c D360     		str	r3, [r2, #12]
 171:Core/Src/main.c ****   txHeader2.ExtId = 0;
 1408              		.loc 1 171 3 is_stmt 1 view .LVU454
 171:Core/Src/main.c ****   txHeader2.ExtId = 0;
 1409              		.loc 1 171 19 is_stmt 0 view .LVU455
 1410 004e C121     		movs	r1, #193
ARM GAS  /tmp/ccDN7Cpg.s 			page 47


 1411 0050 1160     		str	r1, [r2]
 172:Core/Src/main.c ****   txHeader2.TransmitGlobalTime = DISABLE;
 1412              		.loc 1 172 3 is_stmt 1 view .LVU456
 172:Core/Src/main.c ****   txHeader2.TransmitGlobalTime = DISABLE;
 1413              		.loc 1 172 19 is_stmt 0 view .LVU457
 1414 0052 5360     		str	r3, [r2, #4]
 173:Core/Src/main.c **** 
 1415              		.loc 1 173 3 is_stmt 1 view .LVU458
 173:Core/Src/main.c **** 
 1416              		.loc 1 173 32 is_stmt 0 view .LVU459
 1417 0054 1375     		strb	r3, [r2, #20]
 175:Core/Src/main.c **** 	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);   // Initialize CAN Bus Rx Inte
 1418              		.loc 1 175 2 is_stmt 1 view .LVU460
 1419 0056 0D4C     		ldr	r4, .L79+12
 1420 0058 2046     		mov	r0, r4
 1421 005a FFF7FEFF 		bl	HAL_CAN_Start
 1422              	.LVL51:
 176:Core/Src/main.c **** 
 1423              		.loc 1 176 2 view .LVU461
 1424 005e 0221     		movs	r1, #2
 1425 0060 2046     		mov	r0, r4
 1426 0062 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 1427              	.LVL52:
 179:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim13);
 1428              		.loc 1 179 3 view .LVU462
 1429 0066 0A48     		ldr	r0, .L79+16
 1430 0068 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1431              	.LVL53:
 180:Core/Src/main.c **** 
 1432              		.loc 1 180 3 view .LVU463
 1433 006c 0948     		ldr	r0, .L79+20
 1434 006e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1435              	.LVL54:
 183:Core/Src/main.c **** 
 1436              		.loc 1 183 2 view .LVU464
 1437 0072 40F6F672 		movw	r2, #4086
 1438 0076 0849     		ldr	r1, .L79+24
 1439 0078 0848     		ldr	r0, .L79+28
 1440 007a FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1441              	.LVL55:
 1442              	.L77:
 189:Core/Src/main.c ****   {
 1443              		.loc 1 189 3 discriminator 1 view .LVU465
 194:Core/Src/main.c ****   /* USER CODE END 3 */
 1444              		.loc 1 194 3 discriminator 1 view .LVU466
 189:Core/Src/main.c ****   {
 1445              		.loc 1 189 9 discriminator 1 view .LVU467
 1446 007e FEE7     		b	.L77
 1447              	.L80:
 1448              		.align	2
 1449              	.L79:
 1450 0080 00000000 		.word	txHeader0
 1451 0084 00000000 		.word	txHeader1
 1452 0088 00000000 		.word	txHeader2
 1453 008c 00000000 		.word	hcan1
 1454 0090 00000000 		.word	htim14
 1455 0094 00000000 		.word	htim13
ARM GAS  /tmp/ccDN7Cpg.s 			page 48


 1456 0098 00000000 		.word	adc_buf
 1457 009c 00000000 		.word	hadc1
 1458              		.cfi_endproc
 1459              	.LFE216:
 1461              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 1462              		.align	1
 1463              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 1464              		.syntax unified
 1465              		.thumb
 1466              		.thumb_func
 1467              		.fpu fpv4-sp-d16
 1469              	HAL_CAN_RxFifo0MsgPendingCallback:
 1470              	.LVL56:
 1471              	.LFB224:
 476:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(hcan1, CAN_RX_FIFO0, &rxHeader, canRX) != HAL_OK)
 1472              		.loc 1 476 1 view -0
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 0
 1475              		@ frame_needed = 0, uses_anonymous_args = 0
 476:Core/Src/main.c ****   if (HAL_CAN_GetRxMessage(hcan1, CAN_RX_FIFO0, &rxHeader, canRX) != HAL_OK)
 1476              		.loc 1 476 1 is_stmt 0 view .LVU469
 1477 0000 08B5     		push	{r3, lr}
 1478              	.LCFI21:
 1479              		.cfi_def_cfa_offset 8
 1480              		.cfi_offset 3, -8
 1481              		.cfi_offset 14, -4
 477:Core/Src/main.c ****     Error_Handler();
 1482              		.loc 1 477 3 is_stmt 1 view .LVU470
 477:Core/Src/main.c ****     Error_Handler();
 1483              		.loc 1 477 7 is_stmt 0 view .LVU471
 1484 0002 124B     		ldr	r3, .L89
 1485 0004 124A     		ldr	r2, .L89+4
 1486 0006 0021     		movs	r1, #0
 1487 0008 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 1488              	.LVL57:
 477:Core/Src/main.c ****     Error_Handler();
 1489              		.loc 1 477 6 view .LVU472
 1490 000c 38B9     		cbnz	r0, .L86
 481:Core/Src/main.c ****   {
 1491              		.loc 1 481 3 is_stmt 1 view .LVU473
 481:Core/Src/main.c ****   {
 1492              		.loc 1 481 15 is_stmt 0 view .LVU474
 1493 000e 104B     		ldr	r3, .L89+4
 1494 0010 1B68     		ldr	r3, [r3]
 481:Core/Src/main.c ****   {
 1495              		.loc 1 481 6 view .LVU475
 1496 0012 A72B     		cmp	r3, #167
 1497 0014 05D0     		beq	.L87
 1498              	.L83:
 492:Core/Src/main.c ****   {
 1499              		.loc 1 492 3 is_stmt 1 view .LVU476
 492:Core/Src/main.c ****   {
 1500              		.loc 1 492 6 is_stmt 0 view .LVU477
 1501 0016 B3F5D66F 		cmp	r3, #1712
 1502 001a 0ED0     		beq	.L88
 1503              	.L81:
 501:Core/Src/main.c **** 
ARM GAS  /tmp/ccDN7Cpg.s 			page 49


 1504              		.loc 1 501 1 view .LVU478
 1505 001c 08BD     		pop	{r3, pc}
 1506              	.L86:
 478:Core/Src/main.c **** 
 1507              		.loc 1 478 5 is_stmt 1 view .LVU479
 1508 001e FFF7FEFF 		bl	Error_Handler
 1509              	.LVL58:
 1510              	.L87:
 481:Core/Src/main.c ****   {
 1511              		.loc 1 481 42 is_stmt 0 discriminator 1 view .LVU480
 1512 0022 0B4A     		ldr	r2, .L89+4
 1513 0024 1269     		ldr	r2, [r2, #16]
 481:Core/Src/main.c ****   {
 1514              		.loc 1 481 31 discriminator 1 view .LVU481
 1515 0026 082A     		cmp	r2, #8
 1516 0028 F5D1     		bne	.L83
 1517              	.LBB11:
 484:Core/Src/main.c ****     int rine2 = canRX[1];
 1518              		.loc 1 484 4 is_stmt 1 view .LVU482
 484:Core/Src/main.c ****     int rine2 = canRX[1];
 1519              		.loc 1 484 21 is_stmt 0 view .LVU483
 1520 002a 0849     		ldr	r1, .L89
 1521 002c 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1522              	.LVL59:
 485:Core/Src/main.c **** 
 1523              		.loc 1 485 5 is_stmt 1 view .LVU484
 485:Core/Src/main.c **** 
 1524              		.loc 1 485 22 is_stmt 0 view .LVU485
 1525 002e 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 1526              	.LVL60:
 488:Core/Src/main.c ****   }
 1527              		.loc 1 488 5 is_stmt 1 view .LVU486
 488:Core/Src/main.c ****   }
 1528              		.loc 1 488 36 is_stmt 0 view .LVU487
 1529 0030 42EA0122 		orr	r2, r2, r1, lsl #8
 1530              	.LVL61:
 488:Core/Src/main.c ****   }
 1531              		.loc 1 488 21 view .LVU488
 1532 0034 0749     		ldr	r1, .L89+8
 1533              	.LVL62:
 488:Core/Src/main.c ****   }
 1534              		.loc 1 488 21 view .LVU489
 1535 0036 0A60     		str	r2, [r1]
 1536 0038 EDE7     		b	.L83
 1537              	.LVL63:
 1538              	.L88:
 488:Core/Src/main.c ****   }
 1539              		.loc 1 488 21 view .LVU490
 1540              	.LBE11:
 1541              	.LBB12:
 495:Core/Src/main.c ****     int volt2 = canRX[3];
 1542              		.loc 1 495 4 is_stmt 1 view .LVU491
 495:Core/Src/main.c ****     int volt2 = canRX[3];
 1543              		.loc 1 495 21 is_stmt 0 view .LVU492
 1544 003a 044A     		ldr	r2, .L89
 1545 003c 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 1546              	.LVL64:
ARM GAS  /tmp/ccDN7Cpg.s 			page 50


 496:Core/Src/main.c **** 
 1547              		.loc 1 496 5 is_stmt 1 view .LVU493
 496:Core/Src/main.c **** 
 1548              		.loc 1 496 22 is_stmt 0 view .LVU494
 1549 003e D378     		ldrb	r3, [r2, #3]	@ zero_extendqisi2
 1550              	.LVL65:
 499:Core/Src/main.c ****   }
 1551              		.loc 1 499 5 is_stmt 1 view .LVU495
 499:Core/Src/main.c ****   }
 1552              		.loc 1 499 31 is_stmt 0 view .LVU496
 1553 0040 43EA0123 		orr	r3, r3, r1, lsl #8
 1554              	.LVL66:
 499:Core/Src/main.c ****   }
 1555              		.loc 1 499 16 view .LVU497
 1556 0044 044A     		ldr	r2, .L89+12
 1557 0046 1360     		str	r3, [r2]
 1558              	.LBE12:
 501:Core/Src/main.c **** 
 1559              		.loc 1 501 1 view .LVU498
 1560 0048 E8E7     		b	.L81
 1561              	.L90:
 1562 004a 00BF     		.align	2
 1563              	.L89:
 1564 004c 00000000 		.word	.LANCHOR7
 1565 0050 00000000 		.word	rxHeader
 1566 0054 00000000 		.word	.LANCHOR3
 1567 0058 00000000 		.word	.LANCHOR4
 1568              		.cfi_endproc
 1569              	.LFE224:
 1571              		.comm	canFilter1,40,4
 1572              		.comm	canFilter0,40,4
 1573              		.global	canRX
 1574              		.comm	rxHeader,28,4
 1575              		.comm	TxData,8,4
 1576              		.comm	txHeader2,24,4
 1577              		.comm	txHeader1,24,4
 1578              		.comm	txHeader0,24,4
 1579              		.comm	TxMailbox,4,4
 1580              		.global	voltageCheckCount
 1581              		.global	lastPrechargeState
 1582              		.global	prechargeState
 1583              		.global	readyToDrive
 1584              		.global	DCDCFault
 1585              		.comm	adc_buf,16344,4
 1586              		.global	RTDButtonPressed
 1587              		.global	DCDCEnable
 1588              		.global	vicoreTemp
 1589              		.global	bmsVoltage
 1590              		.global	rinehartVoltage
 1591              		.global	rinehart_send_command_count
 1592              		.comm	htim14,72,4
 1593              		.comm	htim13,72,4
 1594              		.comm	hcan1,40,4
 1595              		.comm	hdma_adc1,96,4
 1596              		.comm	hadc1,72,4
 1597              		.section	.bss.DCDCEnable,"aw",%nobits
 1598              		.align	2
ARM GAS  /tmp/ccDN7Cpg.s 			page 51


 1601              	DCDCEnable:
 1602 0000 00000000 		.space	4
 1603              		.section	.bss.DCDCFault,"aw",%nobits
 1604              		.align	2
 1605              		.set	.LANCHOR5,. + 0
 1608              	DCDCFault:
 1609 0000 00000000 		.space	4
 1610              		.section	.bss.RTDButtonPressed,"aw",%nobits
 1611              		.align	2
 1614              	RTDButtonPressed:
 1615 0000 00000000 		.space	4
 1616              		.section	.bss.bmsVoltage,"aw",%nobits
 1617              		.align	2
 1618              		.set	.LANCHOR4,. + 0
 1621              	bmsVoltage:
 1622 0000 00000000 		.space	4
 1623              		.section	.bss.canRX,"aw",%nobits
 1624              		.align	2
 1625              		.set	.LANCHOR7,. + 0
 1628              	canRX:
 1629 0000 00000000 		.space	8
 1629      00000000 
 1630              		.section	.bss.lastPrechargeState,"aw",%nobits
 1631              		.set	.LANCHOR2,. + 0
 1634              	lastPrechargeState:
 1635 0000 00       		.space	1
 1636              		.section	.bss.prechargeState,"aw",%nobits
 1637              		.set	.LANCHOR0,. + 0
 1640              	prechargeState:
 1641 0000 00       		.space	1
 1642              		.section	.bss.readyToDrive,"aw",%nobits
 1643              		.align	2
 1644              		.set	.LANCHOR1,. + 0
 1647              	readyToDrive:
 1648 0000 00000000 		.space	4
 1649              		.section	.bss.rinehartVoltage,"aw",%nobits
 1650              		.align	2
 1651              		.set	.LANCHOR3,. + 0
 1654              	rinehartVoltage:
 1655 0000 00000000 		.space	4
 1656              		.section	.bss.rinehart_send_command_count,"aw",%nobits
 1659              	rinehart_send_command_count:
 1660 0000 00       		.space	1
 1661              		.section	.bss.vicoreTemp,"aw",%nobits
 1662              		.align	2
 1663              		.set	.LANCHOR6,. + 0
 1666              	vicoreTemp:
 1667 0000 00000000 		.space	4
 1668              		.section	.bss.voltageCheckCount,"aw",%nobits
 1671              	voltageCheckCount:
 1672 0000 00       		.space	1
 1673              		.text
 1674              	.Letext0:
 1675              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1676              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1677              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1678              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f413xx.h"
ARM GAS  /tmp/ccDN7Cpg.s 			page 52


 1679              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1680              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1681              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1682              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1683              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1684              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1685              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1686              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 1687              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1688              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1689              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1690              		.file 18 "<built-in>"
ARM GAS  /tmp/ccDN7Cpg.s 			page 53


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccDN7Cpg.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccDN7Cpg.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccDN7Cpg.s:151    .text.MX_GPIO_Init:0000000000000080 $d
     /tmp/ccDN7Cpg.s:157    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccDN7Cpg.s:163    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccDN7Cpg.s:212    .text.MX_DMA_Init:0000000000000030 $d
     /tmp/ccDN7Cpg.s:220    .text.prechargeControl:0000000000000000 $t
     /tmp/ccDN7Cpg.s:227    .text.prechargeControl:0000000000000000 prechargeControl
     /tmp/ccDN7Cpg.s:247    .text.prechargeControl:0000000000000010 $d
     /tmp/ccDN7Cpg.s:251    .text.prechargeControl:0000000000000014 $t
     /tmp/ccDN7Cpg.s:525    .text.prechargeControl:0000000000000148 $d
                            *COM*:0000000000000008 TxData
                            *COM*:0000000000000004 TxMailbox
                            *COM*:0000000000000018 txHeader2
                            *COM*:0000000000000028 hcan1
     /tmp/ccDN7Cpg.s:540    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccDN7Cpg.s:547    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccDN7Cpg.s:636    .text.HAL_TIM_PeriodElapsedCallback:0000000000000050 $d
                            *COM*:0000000000000048 htim14
                            *COM*:0000000000000048 htim13
                            *COM*:0000000000000018 txHeader1
     /tmp/ccDN7Cpg.s:651    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccDN7Cpg.s:658    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccDN7Cpg.s:708    .text.HAL_ADC_ConvCpltCallback:0000000000000028 $d
                            *COM*:0000000000003fd8 adc_buf
     /tmp/ccDN7Cpg.s:715    .text.Error_Handler:0000000000000000 $t
     /tmp/ccDN7Cpg.s:722    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccDN7Cpg.s:754    .text.MX_CAN1_Init:0000000000000000 $t
     /tmp/ccDN7Cpg.s:760    .text.MX_CAN1_Init:0000000000000000 MX_CAN1_Init
     /tmp/ccDN7Cpg.s:899    .text.MX_CAN1_Init:0000000000000078 $d
                            *COM*:0000000000000028 canFilter0
                            *COM*:0000000000000028 canFilter1
     /tmp/ccDN7Cpg.s:907    .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccDN7Cpg.s:913    .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccDN7Cpg.s:1020   .text.MX_ADC1_Init:0000000000000060 $d
                            *COM*:0000000000000048 hadc1
     /tmp/ccDN7Cpg.s:1027   .text.MX_TIM14_Init:0000000000000000 $t
     /tmp/ccDN7Cpg.s:1033   .text.MX_TIM14_Init:0000000000000000 MX_TIM14_Init
     /tmp/ccDN7Cpg.s:1082   .text.MX_TIM14_Init:0000000000000028 $d
     /tmp/ccDN7Cpg.s:1088   .text.MX_TIM13_Init:0000000000000000 $t
     /tmp/ccDN7Cpg.s:1094   .text.MX_TIM13_Init:0000000000000000 MX_TIM13_Init
     /tmp/ccDN7Cpg.s:1143   .text.MX_TIM13_Init:0000000000000028 $d
     /tmp/ccDN7Cpg.s:1149   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccDN7Cpg.s:1156   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccDN7Cpg.s:1307   .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccDN7Cpg.s:1313   .text.main:0000000000000000 $t
     /tmp/ccDN7Cpg.s:1320   .text.main:0000000000000000 main
     /tmp/ccDN7Cpg.s:1450   .text.main:0000000000000080 $d
                            *COM*:0000000000000018 txHeader0
     /tmp/ccDN7Cpg.s:1462   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccDN7Cpg.s:1469   .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccDN7Cpg.s:1564   .text.HAL_CAN_RxFifo0MsgPendingCallback:000000000000004c $d
                            *COM*:000000000000001c rxHeader
     /tmp/ccDN7Cpg.s:1628   .bss.canRX:0000000000000000 canRX
     /tmp/ccDN7Cpg.s:1671   .bss.voltageCheckCount:0000000000000000 voltageCheckCount
ARM GAS  /tmp/ccDN7Cpg.s 			page 54


     /tmp/ccDN7Cpg.s:1634   .bss.lastPrechargeState:0000000000000000 lastPrechargeState
     /tmp/ccDN7Cpg.s:1640   .bss.prechargeState:0000000000000000 prechargeState
     /tmp/ccDN7Cpg.s:1647   .bss.readyToDrive:0000000000000000 readyToDrive
     /tmp/ccDN7Cpg.s:1608   .bss.DCDCFault:0000000000000000 DCDCFault
     /tmp/ccDN7Cpg.s:1614   .bss.RTDButtonPressed:0000000000000000 RTDButtonPressed
     /tmp/ccDN7Cpg.s:1601   .bss.DCDCEnable:0000000000000000 DCDCEnable
     /tmp/ccDN7Cpg.s:1666   .bss.vicoreTemp:0000000000000000 vicoreTemp
     /tmp/ccDN7Cpg.s:1621   .bss.bmsVoltage:0000000000000000 bmsVoltage
     /tmp/ccDN7Cpg.s:1654   .bss.rinehartVoltage:0000000000000000 rinehartVoltage
     /tmp/ccDN7Cpg.s:1659   .bss.rinehart_send_command_count:0000000000000000 rinehart_send_command_count
                            *COM*:0000000000000060 hdma_adc1
     /tmp/ccDN7Cpg.s:1598   .bss.DCDCEnable:0000000000000000 $d
     /tmp/ccDN7Cpg.s:1604   .bss.DCDCFault:0000000000000000 $d
     /tmp/ccDN7Cpg.s:1611   .bss.RTDButtonPressed:0000000000000000 $d
     /tmp/ccDN7Cpg.s:1617   .bss.bmsVoltage:0000000000000000 $d
     /tmp/ccDN7Cpg.s:1624   .bss.canRX:0000000000000000 $d
     /tmp/ccDN7Cpg.s:1635   .bss.lastPrechargeState:0000000000000000 $d
     /tmp/ccDN7Cpg.s:1641   .bss.prechargeState:0000000000000000 $d
     /tmp/ccDN7Cpg.s:1643   .bss.readyToDrive:0000000000000000 $d
     /tmp/ccDN7Cpg.s:1650   .bss.rinehartVoltage:0000000000000000 $d
     /tmp/ccDN7Cpg.s:1660   .bss.rinehart_send_command_count:0000000000000000 $d
     /tmp/ccDN7Cpg.s:1662   .bss.vicoreTemp:0000000000000000 $d
     /tmp/ccDN7Cpg.s:1672   .bss.voltageCheckCount:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
__aeabi_ui2d
__aeabi_dmul
__aeabi_dcmpgt
HAL_CAN_AddTxMessage
HAL_CAN_Init
HAL_CAN_ConfigFilter
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_CAN_Start
HAL_CAN_ActivateNotification
HAL_TIM_Base_Start_IT
HAL_ADC_Start_DMA
HAL_CAN_GetRxMessage
